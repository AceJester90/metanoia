{
	"id": "711838fb753eb9f0789db238f3cc6ebb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.1",
	"solcLongVersion": "0.8.1+commit.df193b15",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ERC1155MultiURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts@4.4.2/access/Ownable.sol\r\n\r\n\r\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts@4.4.2/utils/Address.sol\r\n\r\n\r\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize, which returns 0 for contracts in\r\n        // construction, since the code is only stored at the end of the\r\n        // constructor execution.\r\n\r\n        uint256 size;\r\n        assembly {\r\n            size := extcodesize(account)\r\n        }\r\n        return size > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts@4.4.2/utils/introspection/IERC165.sol\r\n\r\n\r\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC165 standard, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\r\n *\r\n * Implementers can declare support of contract interfaces, which can then be\r\n * queried by others ({ERC165Checker}).\r\n *\r\n * For an implementation, see {ERC165}.\r\n */\r\ninterface IERC165 {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}\r\n\r\n// File: @openzeppelin/contracts@4.4.2/utils/introspection/ERC165.sol\r\n\r\n\r\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n\r\n/**\r\n * @dev Implementation of the {IERC165} interface.\r\n *\r\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\r\n * for the additional interface id that will be supported. For example:\r\n *\r\n * ```solidity\r\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\r\n * }\r\n * ```\r\n *\r\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\r\n */\r\nabstract contract ERC165 is IERC165 {\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n        return interfaceId == type(IERC165).interfaceId;\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts@4.4.2/token/ERC1155/IERC1155Receiver.sol\r\n\r\n\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155Receiver.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n\r\n/**\r\n * @dev _Available since v3.1._\r\n */\r\ninterface IERC1155Receiver is IERC165 {\r\n    /**\r\n        @dev Handles the receipt of a single ERC1155 token type. This function is\r\n        called at the end of a `safeTransferFrom` after the balance has been updated.\r\n        To accept the transfer, this must return\r\n        `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\r\n        (i.e. 0xf23a6e61, or its own function selector).\r\n        @param operator The address which initiated the transfer (i.e. msg.sender)\r\n        @param from The address which previously owned the token\r\n        @param id The ID of the token being transferred\r\n        @param value The amount of tokens being transferred\r\n        @param data Additional data with no specified format\r\n        @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\r\n    */\r\n    function onERC1155Received(\r\n        address operator,\r\n        address from,\r\n        uint256 id,\r\n        uint256 value,\r\n        bytes calldata data\r\n    ) external returns (bytes4);\r\n\r\n    /**\r\n        @dev Handles the receipt of a multiple ERC1155 token types. This function\r\n        is called at the end of a `safeBatchTransferFrom` after the balances have\r\n        been updated. To accept the transfer(s), this must return\r\n        `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\r\n        (i.e. 0xbc197c81, or its own function selector).\r\n        @param operator The address which initiated the batch transfer (i.e. msg.sender)\r\n        @param from The address which previously owned the token\r\n        @param ids An array containing ids of each token being transferred (order and length must match values array)\r\n        @param values An array containing amounts of each token being transferred (order and length must match ids array)\r\n        @param data Additional data with no specified format\r\n        @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\r\n    */\r\n    function onERC1155BatchReceived(\r\n        address operator,\r\n        address from,\r\n        uint256[] calldata ids,\r\n        uint256[] calldata values,\r\n        bytes calldata data\r\n    ) external returns (bytes4);\r\n}\r\n\r\n// File: @openzeppelin/contracts@4.4.2/token/ERC1155/IERC1155.sol\r\n\r\n\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n\r\n/**\r\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\r\n *\r\n * _Available since v3.1._\r\n */\r\ninterface IERC1155 is IERC165 {\r\n    /**\r\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\r\n     */\r\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\r\n\r\n    /**\r\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\r\n     * transfers.\r\n     */\r\n    event TransferBatch(\r\n        address indexed operator,\r\n        address indexed from,\r\n        address indexed to,\r\n        uint256[] ids,\r\n        uint256[] values\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\r\n     * `approved`.\r\n     */\r\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\r\n\r\n    /**\r\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\r\n     *\r\n     * If an {URI} event was emitted for `id`, the standard\r\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\r\n     * returned by {IERC1155MetadataURI-uri}.\r\n     */\r\n    event URI(string value, uint256 indexed id);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     */\r\n    function balanceOf(address account, uint256 id) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `accounts` and `ids` must have the same length.\r\n     */\r\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\r\n        external\r\n        view\r\n        returns (uint256[] memory);\r\n\r\n    /**\r\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `operator` cannot be the caller.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) external;\r\n\r\n    /**\r\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\r\n     *\r\n     * See {setApprovalForAll}.\r\n     */\r\n    function isApprovedForAll(address account, address operator) external view returns (bool);\r\n\r\n    /**\r\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\r\n     *\r\n     * Emits a {TransferSingle} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\r\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes calldata data\r\n    ) external;\r\n\r\n    /**\r\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\r\n     *\r\n     * Emits a {TransferBatch} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `ids` and `amounts` must have the same length.\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function safeBatchTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256[] calldata ids,\r\n        uint256[] calldata amounts,\r\n        bytes calldata data\r\n    ) external;\r\n}\r\n\r\n// File: @openzeppelin/contracts@4.4.2/token/ERC1155/extensions/IERC1155MetadataURI.sol\r\n\r\n\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n\r\n/**\r\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\r\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\r\n *\r\n * _Available since v3.1._\r\n */\r\ninterface IERC1155MetadataURI is IERC1155 {\r\n    /**\r\n     * @dev Returns the URI for token type `id`.\r\n     *\r\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\r\n     * clients with the actual token type ID.\r\n     */\r\n    function uri(uint256 id) external view returns (string memory);\r\n}\r\n\r\n// File: @openzeppelin/contracts@4.4.2/token/ERC1155/ERC1155.sol\r\n\r\n\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/ERC1155.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * @dev Implementation of the basic standard multi-token.\r\n * See https://eips.ethereum.org/EIPS/eip-1155\r\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\r\n *\r\n * _Available since v3.1._\r\n */\r\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\r\n    using Address for address;\r\n\r\n    // Mapping from token ID to account balances\r\n    mapping(uint256 => mapping(address => uint256)) private _balances;\r\n\r\n    // Mapping from account to operator approvals\r\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\r\n\r\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\r\n    string private _uri;\r\n\r\n    /**\r\n     * @dev See {_setURI}.\r\n     */\r\n    constructor(string memory uri_) {\r\n        _setURI(uri_);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\r\n        return\r\n            interfaceId == type(IERC1155).interfaceId ||\r\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\r\n            super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155MetadataURI-uri}.\r\n     *\r\n     * This implementation returns the same URI for *all* token types. It relies\r\n     * on the token type ID substitution mechanism\r\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\r\n     *\r\n     * Clients calling this function must replace the `\\{id\\}` substring with the\r\n     * actual token type ID.\r\n     */\r\n    function uri(uint256) public view virtual override returns (string memory) {\r\n        return _uri;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-balanceOf}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     */\r\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\r\n        require(account != address(0), \"ERC1155: balance query for the zero address\");\r\n        return _balances[id][account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-balanceOfBatch}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `accounts` and `ids` must have the same length.\r\n     */\r\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\r\n        public\r\n        view\r\n        virtual\r\n        override\r\n        returns (uint256[] memory)\r\n    {\r\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\r\n\r\n        uint256[] memory batchBalances = new uint256[](accounts.length);\r\n\r\n        for (uint256 i = 0; i < accounts.length; ++i) {\r\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\r\n        }\r\n\r\n        return batchBalances;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-setApprovalForAll}.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) public virtual override {\r\n        _setApprovalForAll(_msgSender(), operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-isApprovedForAll}.\r\n     */\r\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\r\n        return _operatorApprovals[account][operator];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes memory data\r\n    ) public virtual override {\r\n        require(\r\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\r\n            \"ERC1155: caller is not owner nor approved\"\r\n        );\r\n        _safeTransferFrom(from, to, id, amount, data);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-safeBatchTransferFrom}.\r\n     */\r\n    function safeBatchTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    ) public virtual override {\r\n        require(\r\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\r\n            \"ERC1155: transfer caller is not owner nor approved\"\r\n        );\r\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\r\n     *\r\n     * Emits a {TransferSingle} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function _safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes memory data\r\n    ) internal virtual {\r\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data);\r\n\r\n        uint256 fromBalance = _balances[id][from];\r\n        require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\r\n        unchecked {\r\n            _balances[id][from] = fromBalance - amount;\r\n        }\r\n        _balances[id][to] += amount;\r\n\r\n        emit TransferSingle(operator, from, to, id, amount);\r\n\r\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\r\n    }\r\n\r\n    /**\r\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\r\n     *\r\n     * Emits a {TransferBatch} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function _safeBatchTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    ) internal virtual {\r\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\r\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\r\n\r\n        for (uint256 i = 0; i < ids.length; ++i) {\r\n            uint256 id = ids[i];\r\n            uint256 amount = amounts[i];\r\n\r\n            uint256 fromBalance = _balances[id][from];\r\n            require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\r\n            unchecked {\r\n                _balances[id][from] = fromBalance - amount;\r\n            }\r\n            _balances[id][to] += amount;\r\n        }\r\n\r\n        emit TransferBatch(operator, from, to, ids, amounts);\r\n\r\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets a new URI for all token types, by relying on the token type ID\r\n     * substitution mechanism\r\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\r\n     *\r\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\r\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\r\n     * clients with the token type ID.\r\n     *\r\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\r\n     * interpreted by clients as\r\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\r\n     * for token type ID 0x4cce0.\r\n     *\r\n     * See {uri}.\r\n     *\r\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\r\n     * this function emits no events.\r\n     */\r\n    function _setURI(string memory newuri) internal virtual {\r\n        _uri = newuri;\r\n    }\r\n\r\n    /**\r\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\r\n     *\r\n     * Emits a {TransferSingle} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function _mint(\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes memory data\r\n    ) internal virtual {\r\n        require(to != address(0), \"ERC1155: mint to the zero address\");\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, address(0), to, _asSingletonArray(id), _asSingletonArray(amount), data);\r\n\r\n        _balances[id][to] += amount;\r\n        emit TransferSingle(operator, address(0), to, id, amount);\r\n\r\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\r\n    }\r\n\r\n    /**\r\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `ids` and `amounts` must have the same length.\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function _ownerBatch(\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    ) internal virtual {\r\n        require(to != address(0), \"ERC1155: mint to the zero address\");\r\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\r\n\r\n        for (uint256 i = 0; i < ids.length; i++) {\r\n            _balances[ids[i]][to] += amounts[i];\r\n        }\r\n\r\n        emit TransferBatch(operator, address(0), to, ids, amounts);\r\n\r\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens of token type `id` from `from`\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `from` must have at least `amount` tokens of token type `id`.\r\n     */\r\n    function _burn(\r\n        address from,\r\n        uint256 id,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(from != address(0), \"ERC1155: burn from the zero address\");\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, from, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\");\r\n\r\n        uint256 fromBalance = _balances[id][from];\r\n        require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\r\n        unchecked {\r\n            _balances[id][from] = fromBalance - amount;\r\n        }\r\n\r\n        emit TransferSingle(operator, from, address(0), id, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `ids` and `amounts` must have the same length.\r\n     */\r\n    function _burnBatch(\r\n        address from,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts\r\n    ) internal virtual {\r\n        require(from != address(0), \"ERC1155: burn from the zero address\");\r\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\r\n\r\n        for (uint256 i = 0; i < ids.length; i++) {\r\n            uint256 id = ids[i];\r\n            uint256 amount = amounts[i];\r\n\r\n            uint256 fromBalance = _balances[id][from];\r\n            require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\r\n            unchecked {\r\n                _balances[id][from] = fromBalance - amount;\r\n            }\r\n        }\r\n\r\n        emit TransferBatch(operator, from, address(0), ids, amounts);\r\n    }\r\n\r\n    /**\r\n     * @dev Approve `operator` to operate on all of `owner` tokens\r\n     *\r\n     * Emits a {ApprovalForAll} event.\r\n     */\r\n    function _setApprovalForAll(\r\n        address owner,\r\n        address operator,\r\n        bool approved\r\n    ) internal virtual {\r\n        require(owner != operator, \"ERC1155: setting approval status for self\");\r\n        _operatorApprovals[owner][operator] = approved;\r\n        emit ApprovalForAll(owner, operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any token transfer. This includes minting\r\n     * and burning, as well as batched variants.\r\n     *\r\n     * The same hook is called on both single and batched variants. For single\r\n     * transfers, the length of the `id` and `amount` arrays will be 1.\r\n     *\r\n     * Calling conditions (for each `id` and `amount` pair):\r\n     *\r\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * of token type `id` will be  transferred to `to`.\r\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\r\n     * for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\r\n     * will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     * - `ids` and `amounts` have the same, non-zero length.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(\r\n        address operator,\r\n        address from,\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    ) internal virtual {}\r\n\r\n    function _doSafeTransferAcceptanceCheck(\r\n        address operator,\r\n        address from,\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes memory data\r\n    ) private {\r\n        if (to.isContract()) {\r\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\r\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\r\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\r\n                }\r\n            } catch Error(string memory reason) {\r\n                revert(reason);\r\n            } catch {\r\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\r\n            }\r\n        }\r\n    }\r\n\r\n    function _doSafeBatchTransferAcceptanceCheck(\r\n        address operator,\r\n        address from,\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    ) private {\r\n        if (to.isContract()) {\r\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\r\n                bytes4 response\r\n            ) {\r\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\r\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\r\n                }\r\n            } catch Error(string memory reason) {\r\n                revert(reason);\r\n            } catch {\r\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\r\n            }\r\n        }\r\n    }\r\n\r\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\r\n        uint256[] memory array = new uint256[](1);\r\n        array[0] = element;\r\n\r\n        return array;\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts@4.4.2/token/ERC1155/extensions/ERC1155Supply.sol\r\n\r\n\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/ERC1155Supply.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n\r\n/**\r\n * @dev Extension of ERC1155 that adds tracking of total supply per id.\r\n *\r\n * Useful for scenarios where Fungible and Non-fungible tokens have to be\r\n * clearly identified. Note: While a totalSupply of 1 might mean the\r\n * corresponding is an NFT, there is no guarantees that no other token with the\r\n * same id are not going to be minted.\r\n */\r\nabstract contract ERC1155Supply is ERC1155 {\r\n    mapping(uint256 => uint256) private _totalSupply;\r\n\r\n    /**\r\n     * @dev Total amount of tokens in with a given id.\r\n     */\r\n    function totalSupply(uint256 id) public view virtual returns (uint256) {\r\n        return _totalSupply[id];\r\n    }\r\n\r\n    /**\r\n     * @dev Indicates whether any token exist with a given id, or not.\r\n     */\r\n    function exists(uint256 id) public view virtual returns (bool) {\r\n        return ERC1155Supply.totalSupply(id) > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev See {ERC1155-_beforeTokenTransfer}.\r\n     */\r\n    function _beforeTokenTransfer(\r\n        address operator,\r\n        address from,\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    ) internal virtual override {\r\n        super._beforeTokenTransfer(operator, from, to, ids, amounts, data);\r\n\r\n        if (from == address(0)) {\r\n            for (uint256 i = 0; i < ids.length; ++i) {\r\n                _totalSupply[ids[i]] += amounts[i];\r\n            }\r\n        }\r\n\r\n        if (to == address(0)) {\r\n            for (uint256 i = 0; i < ids.length; ++i) {\r\n                _totalSupply[ids[i]] -= amounts[i];\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nabstract contract ERC1155M is ERC1155Supply {\r\n\r\n    mapping (uint256 => string) private _uris;\r\n\r\n    function _setURI(string memory newuri, uint id) internal virtual {\r\n        _uris[id] = newuri;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/ERC1155MultiURI.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC1155MultiURI.sol\":3568:11505  library Address {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC1155MultiURI.sol\":3568:11505  library Address {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bf43c904460a305b39547f31a5cdf6bb02ffc0e6952038f9fc0922a1ab2f6c4164736f6c63430008010033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bf43c904460a305b39547f31a5cdf6bb02ffc0e6952038f9fc0922a1ab2f6c4164736f6c63430008010033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF NUMBER 0xC9 DIV CHAINID EXP ADDRESS JUMPDEST CODECOPY SLOAD PUSH32 0x31A5CDF6BB02FFC0E6952038F9FC0922A1AB2F6C4164736F6C63430008010033 ",
							"sourceMap": "3568:7937:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bf43c904460a305b39547f31a5cdf6bb02ffc0e6952038f9fc0922a1ab2f6c4164736f6c63430008010033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF NUMBER 0xC9 DIV CHAINID EXP ADDRESS JUMPDEST CODECOPY SLOAD PUSH32 0x31A5CDF6BB02FFC0E6952038F9FC0922A1AB2F6C4164736F6C63430008010033 ",
							"sourceMap": "3568:7937:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3568,
									"end": 11505,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3568,
									"end": 11505,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3568,
									"end": 11505,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 3568,
									"end": 11505,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3568,
									"end": 11505,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3568,
									"end": 11505,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3568,
									"end": 11505,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 3568,
									"end": 11505,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3568,
									"end": 11505,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3568,
									"end": 11505,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3568,
									"end": 11505,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 3568,
									"end": 11505,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 3568,
									"end": 11505,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 3568,
									"end": 11505,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3568,
									"end": 11505,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3568,
									"end": 11505,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3568,
									"end": 11505,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3568,
									"end": 11505,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3568,
									"end": 11505,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3568,
									"end": 11505,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 3568,
									"end": 11505,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3568,
									"end": 11505,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 3568,
									"end": 11505,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3568,
									"end": 11505,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3568,
									"end": 11505,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3568,
									"end": 11505,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3568,
									"end": 11505,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 3568,
									"end": 11505,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3568,
									"end": 11505,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3568,
									"end": 11505,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 3568,
									"end": 11505,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3568,
									"end": 11505,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 3568,
									"end": 11505,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3568,
									"end": 11505,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3568,
									"end": 11505,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bf43c904460a305b39547f31a5cdf6bb02ffc0e6952038f9fc0922a1ab2f6c4164736f6c63430008010033",
									".code": [
										{
											"begin": 3568,
											"end": 11505,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 3568,
											"end": 11505,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 3568,
											"end": 11505,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3568,
											"end": 11505,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3568,
											"end": 11505,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3568,
											"end": 11505,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3568,
											"end": 11505,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3568,
											"end": 11505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3568,
											"end": 11505,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC1155MultiURI.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC1155MultiURI.sol\":{\"keccak256\":\"0xd0f5cdb311cd7f09433fae38f070cf937413aa0341057ba5a79b43311497b2c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://813b19b936a80183eb0bab5c94a65fb35ce46743291ca95ed48bc7ceef64c212\",\"dweb:/ipfs/Qmatvf6h2esKGHdD3DRJHbGCThLHxCijSucr5MLAkmXqsC\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC1155MultiURI.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC1155MultiURI.sol\":{\"keccak256\":\"0xd0f5cdb311cd7f09433fae38f070cf937413aa0341057ba5a79b43311497b2c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://813b19b936a80183eb0bab5c94a65fb35ce46743291ca95ed48bc7ceef64c212\",\"dweb:/ipfs/Qmatvf6h2esKGHdD3DRJHbGCThLHxCijSucr5MLAkmXqsC\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC1155MultiURI.sol\":21284:36449  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ERC1155MultiURI.sol\":21836:21900  constructor(string memory uri_) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/ERC1155MultiURI.sol\":21879:21892  _setURI(uri_) */\n  tag_6\n    /* \"contracts/ERC1155MultiURI.sol\":21887:21891  uri_ */\n  dup2\n    /* \"contracts/ERC1155MultiURI.sol\":21879:21886  _setURI */\n  shl(0x20, tag_7)\n    /* \"contracts/ERC1155MultiURI.sol\":21879:21892  _setURI(uri_) */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"contracts/ERC1155MultiURI.sol\":21836:21900  constructor(string memory uri_) {\r... */\n  pop\n    /* \"contracts/ERC1155MultiURI.sol\":21284:36449  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\r... */\n  jump(tag_8)\n    /* \"contracts/ERC1155MultiURI.sol\":28890:28978  function _setURI(string memory newuri) internal virtual {\r... */\ntag_7:\n    /* \"contracts/ERC1155MultiURI.sol\":28964:28970  newuri */\n  dup1\n    /* \"contracts/ERC1155MultiURI.sol\":28957:28961  _uri */\n  0x02\n    /* \"contracts/ERC1155MultiURI.sol\":28957:28970  _uri = newuri */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_10\n  swap3\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"contracts/ERC1155MultiURI.sol\":28890:28978  function _setURI(string memory newuri) internal virtual {\r... */\n  pop\n  jump\t// out\n    /* \"contracts/ERC1155MultiURI.sol\":21284:36449  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\r... */\ntag_11:\n  dup3\n  dup1\n  sload\n  tag_12\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_15\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_14)\ntag_15:\n  dup3\n  0x1f\n  lt\n  tag_16\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_14)\ntag_16:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_14\n  jumpi\n  swap2\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_17)\ntag_18:\ntag_14:\n  pop\n  swap1\n  pop\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_20:\ntag_21:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_22\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_21)\ntag_22:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:361   */\ntag_24:\n  0x00\n    /* \"#utility.yul\":121:187   */\n  tag_26\n    /* \"#utility.yul\":137:186   */\n  tag_27\n    /* \"#utility.yul\":179:185   */\n  dup5\n    /* \"#utility.yul\":137:186   */\n  tag_28\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":121:187   */\n  tag_29\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":112:187   */\n  swap1\n  pop\n    /* \"#utility.yul\":210:216   */\n  dup3\n    /* \"#utility.yul\":203:208   */\n  dup2\n    /* \"#utility.yul\":196:217   */\n  mstore\n    /* \"#utility.yul\":248:252   */\n  0x20\n    /* \"#utility.yul\":241:246   */\n  dup2\n    /* \"#utility.yul\":237:253   */\n  add\n    /* \"#utility.yul\":286:289   */\n  dup5\n    /* \"#utility.yul\":277:283   */\n  dup5\n    /* \"#utility.yul\":272:275   */\n  dup5\n    /* \"#utility.yul\":268:284   */\n  add\n    /* \"#utility.yul\":265:290   */\n  gt\n    /* \"#utility.yul\":262:264   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":303:304   */\n  0x00\n    /* \"#utility.yul\":300:301   */\n  dup1\n    /* \"#utility.yul\":293:305   */\n  revert\n    /* \"#utility.yul\":262:264   */\ntag_30:\n    /* \"#utility.yul\":316:355   */\n  tag_31\n    /* \"#utility.yul\":348:354   */\n  dup5\n    /* \"#utility.yul\":343:346   */\n  dup3\n    /* \"#utility.yul\":338:341   */\n  dup6\n    /* \"#utility.yul\":316:355   */\n  tag_32\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":102:361   */\n  pop\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":381:669   */\ntag_33:\n  0x00\n    /* \"#utility.yul\":497:500   */\n  dup3\n    /* \"#utility.yul\":490:494   */\n  0x1f\n    /* \"#utility.yul\":482:488   */\n  dup4\n    /* \"#utility.yul\":478:495   */\n  add\n    /* \"#utility.yul\":474:501   */\n  slt\n    /* \"#utility.yul\":464:466   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":515:516   */\n  0x00\n    /* \"#utility.yul\":512:513   */\n  dup1\n    /* \"#utility.yul\":505:517   */\n  revert\n    /* \"#utility.yul\":464:466   */\ntag_35:\n    /* \"#utility.yul\":548:554   */\n  dup2\n    /* \"#utility.yul\":542:555   */\n  mload\n    /* \"#utility.yul\":573:663   */\n  tag_36\n    /* \"#utility.yul\":659:662   */\n  dup5\n    /* \"#utility.yul\":651:657   */\n  dup3\n    /* \"#utility.yul\":644:648   */\n  0x20\n    /* \"#utility.yul\":636:642   */\n  dup7\n    /* \"#utility.yul\":632:649   */\n  add\n    /* \"#utility.yul\":573:663   */\n  tag_24\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":564:663   */\n  swap2\n  pop\n    /* \"#utility.yul\":454:669   */\n  pop\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":675:1065   */\ntag_3:\n  0x00\n    /* \"#utility.yul\":804:806   */\n  0x20\n    /* \"#utility.yul\":792:801   */\n  dup3\n    /* \"#utility.yul\":783:790   */\n  dup5\n    /* \"#utility.yul\":779:802   */\n  sub\n    /* \"#utility.yul\":775:807   */\n  slt\n    /* \"#utility.yul\":772:774   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":820:821   */\n  0x00\n    /* \"#utility.yul\":817:818   */\n  dup1\n    /* \"#utility.yul\":810:822   */\n  revert\n    /* \"#utility.yul\":772:774   */\ntag_38:\n    /* \"#utility.yul\":884:885   */\n  0x00\n    /* \"#utility.yul\":873:882   */\n  dup3\n    /* \"#utility.yul\":869:886   */\n  add\n    /* \"#utility.yul\":863:887   */\n  mload\n    /* \"#utility.yul\":914:932   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":906:912   */\n  dup2\n    /* \"#utility.yul\":903:933   */\n  gt\n    /* \"#utility.yul\":900:902   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":946:947   */\n  0x00\n    /* \"#utility.yul\":943:944   */\n  dup1\n    /* \"#utility.yul\":936:948   */\n  revert\n    /* \"#utility.yul\":900:902   */\ntag_39:\n    /* \"#utility.yul\":974:1048   */\n  tag_40\n    /* \"#utility.yul\":1040:1047   */\n  dup5\n    /* \"#utility.yul\":1031:1037   */\n  dup3\n    /* \"#utility.yul\":1020:1029   */\n  dup6\n    /* \"#utility.yul\":1016:1038   */\n  add\n    /* \"#utility.yul\":974:1048   */\n  tag_33\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":964:1048   */\n  swap2\n  pop\n    /* \"#utility.yul\":834:1058   */\n  pop\n    /* \"#utility.yul\":762:1065   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1071:1200   */\ntag_29:\n  0x00\n    /* \"#utility.yul\":1132:1152   */\n  tag_42\n  tag_43\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1122:1152   */\n  swap1\n  pop\n    /* \"#utility.yul\":1161:1194   */\n  tag_44\n    /* \"#utility.yul\":1189:1193   */\n  dup3\n    /* \"#utility.yul\":1181:1187   */\n  dup3\n    /* \"#utility.yul\":1161:1194   */\n  tag_45\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1112:1200   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1206:1281   */\ntag_43:\n  0x00\n    /* \"#utility.yul\":1272:1274   */\n  0x40\n    /* \"#utility.yul\":1266:1275   */\n  mload\n    /* \"#utility.yul\":1256:1275   */\n  swap1\n  pop\n    /* \"#utility.yul\":1246:1281   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":1287:1595   */\ntag_28:\n  0x00\n    /* \"#utility.yul\":1439:1457   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1431:1437   */\n  dup3\n    /* \"#utility.yul\":1428:1458   */\n  gt\n    /* \"#utility.yul\":1425:1427   */\n  iszero\n  tag_48\n  jumpi\n    /* \"#utility.yul\":1461:1479   */\n  tag_49\n  tag_50\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1425:1427   */\ntag_48:\n    /* \"#utility.yul\":1499:1528   */\n  tag_51\n    /* \"#utility.yul\":1521:1527   */\n  dup3\n    /* \"#utility.yul\":1499:1528   */\n  tag_52\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1491:1528   */\n  swap1\n  pop\n    /* \"#utility.yul\":1583:1587   */\n  0x20\n    /* \"#utility.yul\":1577:1581   */\n  dup2\n    /* \"#utility.yul\":1573:1588   */\n  add\n    /* \"#utility.yul\":1565:1588   */\n  swap1\n  pop\n    /* \"#utility.yul\":1354:1595   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1601:1908   */\ntag_32:\n    /* \"#utility.yul\":1669:1670   */\n  0x00\n    /* \"#utility.yul\":1679:1792   */\ntag_54:\n    /* \"#utility.yul\":1693:1699   */\n  dup4\n    /* \"#utility.yul\":1690:1691   */\n  dup2\n    /* \"#utility.yul\":1687:1700   */\n  lt\n    /* \"#utility.yul\":1679:1792   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":1778:1779   */\n  dup1\n    /* \"#utility.yul\":1773:1776   */\n  dup3\n    /* \"#utility.yul\":1769:1780   */\n  add\n    /* \"#utility.yul\":1763:1781   */\n  mload\n    /* \"#utility.yul\":1759:1760   */\n  dup2\n    /* \"#utility.yul\":1754:1757   */\n  dup5\n    /* \"#utility.yul\":1750:1761   */\n  add\n    /* \"#utility.yul\":1743:1782   */\n  mstore\n    /* \"#utility.yul\":1715:1717   */\n  0x20\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1708:1718   */\n  add\n    /* \"#utility.yul\":1703:1718   */\n  swap1\n  pop\n    /* \"#utility.yul\":1679:1792   */\n  jump(tag_54)\ntag_56:\n    /* \"#utility.yul\":1810:1816   */\n  dup4\n    /* \"#utility.yul\":1807:1808   */\n  dup2\n    /* \"#utility.yul\":1804:1817   */\n  gt\n    /* \"#utility.yul\":1801:1803   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":1890:1891   */\n  0x00\n    /* \"#utility.yul\":1881:1887   */\n  dup5\n    /* \"#utility.yul\":1876:1879   */\n  dup5\n    /* \"#utility.yul\":1872:1888   */\n  add\n    /* \"#utility.yul\":1865:1892   */\n  mstore\n    /* \"#utility.yul\":1801:1803   */\ntag_57:\n    /* \"#utility.yul\":1650:1908   */\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1914:2234   */\ntag_13:\n  0x00\n    /* \"#utility.yul\":1995:1996   */\n  0x02\n    /* \"#utility.yul\":1989:1993   */\n  dup3\n    /* \"#utility.yul\":1985:1997   */\n  div\n    /* \"#utility.yul\":1975:1997   */\n  swap1\n  pop\n    /* \"#utility.yul\":2042:2043   */\n  0x01\n    /* \"#utility.yul\":2036:2040   */\n  dup3\n    /* \"#utility.yul\":2032:2044   */\n  and\n    /* \"#utility.yul\":2063:2081   */\n  dup1\n    /* \"#utility.yul\":2053:2055   */\n  tag_59\n  jumpi\n    /* \"#utility.yul\":2119:2123   */\n  0x7f\n    /* \"#utility.yul\":2111:2117   */\n  dup3\n    /* \"#utility.yul\":2107:2124   */\n  and\n    /* \"#utility.yul\":2097:2124   */\n  swap2\n  pop\n    /* \"#utility.yul\":2053:2055   */\ntag_59:\n    /* \"#utility.yul\":2181:2183   */\n  0x20\n    /* \"#utility.yul\":2173:2179   */\n  dup3\n    /* \"#utility.yul\":2170:2184   */\n  lt\n    /* \"#utility.yul\":2150:2168   */\n  dup2\n    /* \"#utility.yul\":2147:2185   */\n  eq\n    /* \"#utility.yul\":2144:2146   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":2200:2218   */\n  tag_61\n  tag_62\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":2144:2146   */\ntag_60:\n    /* \"#utility.yul\":1965:2234   */\n  pop\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2240:2521   */\ntag_45:\n    /* \"#utility.yul\":2323:2350   */\n  tag_64\n    /* \"#utility.yul\":2345:2349   */\n  dup3\n    /* \"#utility.yul\":2323:2350   */\n  tag_52\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2315:2321   */\n  dup2\n    /* \"#utility.yul\":2311:2351   */\n  add\n    /* \"#utility.yul\":2453:2459   */\n  dup2\n    /* \"#utility.yul\":2441:2451   */\n  dup2\n    /* \"#utility.yul\":2438:2460   */\n  lt\n    /* \"#utility.yul\":2417:2435   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2405:2415   */\n  dup3\n    /* \"#utility.yul\":2402:2436   */\n  gt\n    /* \"#utility.yul\":2399:2461   */\n  or\n    /* \"#utility.yul\":2396:2398   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2464:2482   */\n  tag_66\n  tag_50\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2396:2398   */\ntag_65:\n    /* \"#utility.yul\":2504:2514   */\n  dup1\n    /* \"#utility.yul\":2500:2502   */\n  0x40\n    /* \"#utility.yul\":2493:2515   */\n  mstore\n    /* \"#utility.yul\":2283:2521   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2527:2707   */\ntag_62:\n    /* \"#utility.yul\":2575:2652   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2572:2573   */\n  0x00\n    /* \"#utility.yul\":2565:2653   */\n  mstore\n    /* \"#utility.yul\":2672:2676   */\n  0x22\n    /* \"#utility.yul\":2669:2670   */\n  0x04\n    /* \"#utility.yul\":2662:2677   */\n  mstore\n    /* \"#utility.yul\":2696:2700   */\n  0x24\n    /* \"#utility.yul\":2693:2694   */\n  0x00\n    /* \"#utility.yul\":2686:2701   */\n  revert\n    /* \"#utility.yul\":2713:2893   */\ntag_50:\n    /* \"#utility.yul\":2761:2838   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2758:2759   */\n  0x00\n    /* \"#utility.yul\":2751:2839   */\n  mstore\n    /* \"#utility.yul\":2858:2862   */\n  0x41\n    /* \"#utility.yul\":2855:2856   */\n  0x04\n    /* \"#utility.yul\":2848:2863   */\n  mstore\n    /* \"#utility.yul\":2882:2886   */\n  0x24\n    /* \"#utility.yul\":2879:2880   */\n  0x00\n    /* \"#utility.yul\":2872:2887   */\n  revert\n    /* \"#utility.yul\":2899:3001   */\ntag_52:\n  0x00\n    /* \"#utility.yul\":2991:2993   */\n  0x1f\n    /* \"#utility.yul\":2987:2994   */\n  not\n    /* \"#utility.yul\":2982:2984   */\n  0x1f\n    /* \"#utility.yul\":2975:2980   */\n  dup4\n    /* \"#utility.yul\":2971:2985   */\n  add\n    /* \"#utility.yul\":2967:2995   */\n  and\n    /* \"#utility.yul\":2957:2995   */\n  swap1\n  pop\n    /* \"#utility.yul\":2947:3001   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/ERC1155MultiURI.sol\":21284:36449  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\r... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC1155MultiURI.sol\":21284:36449  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e1273f4\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ERC1155MultiURI.sol\":22949:23180  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\r... */\n    tag_3:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC1155MultiURI.sol\":21972:22282  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\r... */\n    tag_4:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC1155MultiURI.sol\":22693:22798  function uri(uint256) public view virtual override returns (string memory) {\r... */\n    tag_5:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC1155MultiURI.sol\":24888:25330  function safeBatchTransferFrom(\r... */\n    tag_6:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"contracts/ERC1155MultiURI.sol\":23346:23870  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\r... */\n    tag_7:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC1155MultiURI.sol\":23943:24098  function setApprovalForAll(address operator, bool approved) public virtual override {\r... */\n    tag_8:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"contracts/ERC1155MultiURI.sol\":24170:24338  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\r... */\n    tag_9:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC1155MultiURI.sol\":24410:24811  function safeTransferFrom(\r... */\n    tag_10:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      stop\n        /* \"contracts/ERC1155MultiURI.sol\":22949:23180  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\r... */\n    tag_15:\n        /* \"contracts/ERC1155MultiURI.sol\":23035:23042  uint256 */\n      0x00\n        /* \"contracts/ERC1155MultiURI.sol\":23082:23083  0 */\n      dup1\n        /* \"contracts/ERC1155MultiURI.sol\":23063:23084  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155MultiURI.sol\":23063:23070  account */\n      dup4\n        /* \"contracts/ERC1155MultiURI.sol\":23063:23084  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/ERC1155MultiURI.sol\":23055:23132  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n        /* \"contracts/ERC1155MultiURI.sol\":23150:23159  _balances */\n      0x00\n        /* \"contracts/ERC1155MultiURI.sol\":23150:23163  _balances[id] */\n      dup1\n        /* \"contracts/ERC1155MultiURI.sol\":23160:23162  id */\n      dup4\n        /* \"contracts/ERC1155MultiURI.sol\":23150:23163  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155MultiURI.sol\":23150:23172  _balances[id][account] */\n      0x00\n        /* \"contracts/ERC1155MultiURI.sol\":23164:23171  account */\n      dup5\n        /* \"contracts/ERC1155MultiURI.sol\":23150:23172  _balances[id][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC1155MultiURI.sol\":23143:23172  return _balances[id][account] */\n      swap1\n      pop\n        /* \"contracts/ERC1155MultiURI.sol\":22949:23180  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155MultiURI.sol\":21972:22282  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\r... */\n    tag_21:\n        /* \"contracts/ERC1155MultiURI.sol\":22074:22078  bool */\n      0x00\n        /* \"contracts/ERC1155MultiURI.sol\":22126:22152  type(IERC1155).interfaceId */\n      0xd9b67a2600000000000000000000000000000000000000000000000000000000\n        /* \"contracts/ERC1155MultiURI.sol\":22111:22152  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/ERC1155MultiURI.sol\":22111:22122  interfaceId */\n      dup3\n        /* \"contracts/ERC1155MultiURI.sol\":22111:22152  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/ERC1155MultiURI.sol\":22111:22221  interfaceId == type(IERC1155).interfaceId ||\r... */\n      dup1\n      tag_58\n      jumpi\n      pop\n        /* \"contracts/ERC1155MultiURI.sol\":22184:22221  type(IERC1155MetadataURI).interfaceId */\n      0x0e89341c00000000000000000000000000000000000000000000000000000000\n        /* \"contracts/ERC1155MultiURI.sol\":22169:22221  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/ERC1155MultiURI.sol\":22169:22180  interfaceId */\n      dup3\n        /* \"contracts/ERC1155MultiURI.sol\":22169:22221  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/ERC1155MultiURI.sol\":22111:22221  interfaceId == type(IERC1155).interfaceId ||\r... */\n    tag_58:\n        /* \"contracts/ERC1155MultiURI.sol\":22111:22274  interfaceId == type(IERC1155).interfaceId ||\r... */\n      dup1\n      tag_59\n      jumpi\n      pop\n        /* \"contracts/ERC1155MultiURI.sol\":22238:22274  super.supportsInterface(interfaceId) */\n      tag_60\n        /* \"contracts/ERC1155MultiURI.sol\":22262:22273  interfaceId */\n      dup3\n        /* \"contracts/ERC1155MultiURI.sol\":22238:22261  super.supportsInterface */\n      tag_61\n        /* \"contracts/ERC1155MultiURI.sol\":22238:22274  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_60:\n        /* \"contracts/ERC1155MultiURI.sol\":22111:22274  interfaceId == type(IERC1155).interfaceId ||\r... */\n    tag_59:\n        /* \"contracts/ERC1155MultiURI.sol\":22091:22274  return\r... */\n      swap1\n      pop\n        /* \"contracts/ERC1155MultiURI.sol\":21972:22282  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155MultiURI.sol\":22693:22798  function uri(uint256) public view virtual override returns (string memory) {\r... */\n    tag_27:\n        /* \"contracts/ERC1155MultiURI.sol\":22753:22766  string memory */\n      0x60\n        /* \"contracts/ERC1155MultiURI.sol\":22786:22790  _uri */\n      0x02\n        /* \"contracts/ERC1155MultiURI.sol\":22779:22790  return _uri */\n      dup1\n      sload\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_65\n      swap1\n      tag_64\n      jump\t// in\n    tag_65:\n      dup1\n      iszero\n      tag_66\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_67\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_66)\n    tag_67:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_68:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_68\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC1155MultiURI.sol\":22693:22798  function uri(uint256) public view virtual override returns (string memory) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155MultiURI.sol\":24888:25330  function safeBatchTransferFrom(\r... */\n    tag_33:\n        /* \"contracts/ERC1155MultiURI.sol\":25129:25141  _msgSender() */\n      tag_70\n        /* \"contracts/ERC1155MultiURI.sol\":25129:25139  _msgSender */\n      tag_71\n        /* \"contracts/ERC1155MultiURI.sol\":25129:25141  _msgSender() */\n      jump\t// in\n    tag_70:\n        /* \"contracts/ERC1155MultiURI.sol\":25121:25141  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155MultiURI.sol\":25121:25125  from */\n      dup6\n        /* \"contracts/ERC1155MultiURI.sol\":25121:25141  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ERC1155MultiURI.sol\":25121:25181  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      dup1\n      tag_72\n      jumpi\n      pop\n        /* \"contracts/ERC1155MultiURI.sol\":25145:25181  isApprovedForAll(from, _msgSender()) */\n      tag_73\n        /* \"contracts/ERC1155MultiURI.sol\":25162:25166  from */\n      dup6\n        /* \"contracts/ERC1155MultiURI.sol\":25168:25180  _msgSender() */\n      tag_74\n        /* \"contracts/ERC1155MultiURI.sol\":25168:25178  _msgSender */\n      tag_71\n        /* \"contracts/ERC1155MultiURI.sol\":25168:25180  _msgSender() */\n      jump\t// in\n    tag_74:\n        /* \"contracts/ERC1155MultiURI.sol\":25145:25161  isApprovedForAll */\n      tag_47\n        /* \"contracts/ERC1155MultiURI.sol\":25145:25181  isApprovedForAll(from, _msgSender()) */\n      jump\t// in\n    tag_73:\n        /* \"contracts/ERC1155MultiURI.sol\":25121:25181  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n    tag_72:\n        /* \"contracts/ERC1155MultiURI.sol\":25099:25259  require(\r... */\n      tag_75\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_76\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_75:\n        /* \"contracts/ERC1155MultiURI.sol\":25270:25322  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      tag_78\n        /* \"contracts/ERC1155MultiURI.sol\":25293:25297  from */\n      dup6\n        /* \"contracts/ERC1155MultiURI.sol\":25299:25301  to */\n      dup6\n        /* \"contracts/ERC1155MultiURI.sol\":25303:25306  ids */\n      dup6\n        /* \"contracts/ERC1155MultiURI.sol\":25308:25315  amounts */\n      dup6\n        /* \"contracts/ERC1155MultiURI.sol\":25317:25321  data */\n      dup6\n        /* \"contracts/ERC1155MultiURI.sol\":25270:25292  _safeBatchTransferFrom */\n      tag_79\n        /* \"contracts/ERC1155MultiURI.sol\":25270:25322  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      jump\t// in\n    tag_78:\n        /* \"contracts/ERC1155MultiURI.sol\":24888:25330  function safeBatchTransferFrom(\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155MultiURI.sol\":23346:23870  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\r... */\n    tag_37:\n        /* \"contracts/ERC1155MultiURI.sol\":23502:23518  uint256[] memory */\n      0x60\n        /* \"contracts/ERC1155MultiURI.sol\":23563:23566  ids */\n      dup2\n        /* \"contracts/ERC1155MultiURI.sol\":23563:23573  ids.length */\n      mload\n        /* \"contracts/ERC1155MultiURI.sol\":23544:23552  accounts */\n      dup4\n        /* \"contracts/ERC1155MultiURI.sol\":23544:23559  accounts.length */\n      mload\n        /* \"contracts/ERC1155MultiURI.sol\":23544:23573  accounts.length == ids.length */\n      eq\n        /* \"contracts/ERC1155MultiURI.sol\":23536:23619  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_81:\n        /* \"contracts/ERC1155MultiURI.sol\":23632:23662  uint256[] memory batchBalances */\n      0x00\n        /* \"contracts/ERC1155MultiURI.sol\":23679:23687  accounts */\n      dup4\n        /* \"contracts/ERC1155MultiURI.sol\":23679:23694  accounts.length */\n      mload\n        /* \"contracts/ERC1155MultiURI.sol\":23665:23695  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_84\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_84:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_85\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_85:\n      pop\n        /* \"contracts/ERC1155MultiURI.sol\":23632:23695  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"contracts/ERC1155MultiURI.sol\":23713:23722  uint256 i */\n      0x00\n        /* \"contracts/ERC1155MultiURI.sol\":23708:23830  for (uint256 i = 0; i < accounts.length; ++i) {\r... */\n    tag_86:\n        /* \"contracts/ERC1155MultiURI.sol\":23732:23740  accounts */\n      dup5\n        /* \"contracts/ERC1155MultiURI.sol\":23732:23747  accounts.length */\n      mload\n        /* \"contracts/ERC1155MultiURI.sol\":23728:23729  i */\n      dup2\n        /* \"contracts/ERC1155MultiURI.sol\":23728:23747  i < accounts.length */\n      lt\n        /* \"contracts/ERC1155MultiURI.sol\":23708:23830  for (uint256 i = 0; i < accounts.length; ++i) {\r... */\n      iszero\n      tag_87\n      jumpi\n        /* \"contracts/ERC1155MultiURI.sol\":23788:23818  balanceOf(accounts[i], ids[i]) */\n      tag_89\n        /* \"contracts/ERC1155MultiURI.sol\":23798:23806  accounts */\n      dup6\n        /* \"contracts/ERC1155MultiURI.sol\":23807:23808  i */\n      dup3\n        /* \"contracts/ERC1155MultiURI.sol\":23798:23809  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_90\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_90:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/ERC1155MultiURI.sol\":23811:23814  ids */\n      dup6\n        /* \"contracts/ERC1155MultiURI.sol\":23815:23816  i */\n      dup4\n        /* \"contracts/ERC1155MultiURI.sol\":23811:23817  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_91\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_91:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/ERC1155MultiURI.sol\":23788:23797  balanceOf */\n      tag_15\n        /* \"contracts/ERC1155MultiURI.sol\":23788:23818  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_89:\n        /* \"contracts/ERC1155MultiURI.sol\":23769:23782  batchBalances */\n      dup3\n        /* \"contracts/ERC1155MultiURI.sol\":23783:23784  i */\n      dup3\n        /* \"contracts/ERC1155MultiURI.sol\":23769:23785  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_92\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_92:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/ERC1155MultiURI.sol\":23769:23818  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/ERC1155MultiURI.sol\":23749:23752  ++i */\n      dup1\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      swap1\n      pop\n        /* \"contracts/ERC1155MultiURI.sol\":23708:23830  for (uint256 i = 0; i < accounts.length; ++i) {\r... */\n      jump(tag_86)\n    tag_87:\n      pop\n        /* \"contracts/ERC1155MultiURI.sol\":23849:23862  batchBalances */\n      dup1\n        /* \"contracts/ERC1155MultiURI.sol\":23842:23862  return batchBalances */\n      swap2\n      pop\n      pop\n        /* \"contracts/ERC1155MultiURI.sol\":23346:23870  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155MultiURI.sol\":23943:24098  function setApprovalForAll(address operator, bool approved) public virtual override {\r... */\n    tag_43:\n        /* \"contracts/ERC1155MultiURI.sol\":24038:24090  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_96\n        /* \"contracts/ERC1155MultiURI.sol\":24057:24069  _msgSender() */\n      tag_97\n        /* \"contracts/ERC1155MultiURI.sol\":24057:24067  _msgSender */\n      tag_71\n        /* \"contracts/ERC1155MultiURI.sol\":24057:24069  _msgSender() */\n      jump\t// in\n    tag_97:\n        /* \"contracts/ERC1155MultiURI.sol\":24071:24079  operator */\n      dup4\n        /* \"contracts/ERC1155MultiURI.sol\":24081:24089  approved */\n      dup4\n        /* \"contracts/ERC1155MultiURI.sol\":24038:24056  _setApprovalForAll */\n      tag_98\n        /* \"contracts/ERC1155MultiURI.sol\":24038:24090  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_96:\n        /* \"contracts/ERC1155MultiURI.sol\":23943:24098  function setApprovalForAll(address operator, bool approved) public virtual override {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155MultiURI.sol\":24170:24338  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\r... */\n    tag_47:\n        /* \"contracts/ERC1155MultiURI.sol\":24269:24273  bool */\n      0x00\n        /* \"contracts/ERC1155MultiURI.sol\":24293:24311  _operatorApprovals */\n      0x01\n        /* \"contracts/ERC1155MultiURI.sol\":24293:24320  _operatorApprovals[account] */\n      0x00\n        /* \"contracts/ERC1155MultiURI.sol\":24312:24319  account */\n      dup5\n        /* \"contracts/ERC1155MultiURI.sol\":24293:24320  _operatorApprovals[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155MultiURI.sol\":24293:24330  _operatorApprovals[account][operator] */\n      0x00\n        /* \"contracts/ERC1155MultiURI.sol\":24321:24329  operator */\n      dup4\n        /* \"contracts/ERC1155MultiURI.sol\":24293:24330  _operatorApprovals[account][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/ERC1155MultiURI.sol\":24286:24330  return _operatorApprovals[account][operator] */\n      swap1\n      pop\n        /* \"contracts/ERC1155MultiURI.sol\":24170:24338  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155MultiURI.sol\":24410:24811  function safeTransferFrom(\r... */\n    tag_52:\n        /* \"contracts/ERC1155MultiURI.sol\":24626:24638  _msgSender() */\n      tag_101\n        /* \"contracts/ERC1155MultiURI.sol\":24626:24636  _msgSender */\n      tag_71\n        /* \"contracts/ERC1155MultiURI.sol\":24626:24638  _msgSender() */\n      jump\t// in\n    tag_101:\n        /* \"contracts/ERC1155MultiURI.sol\":24618:24638  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155MultiURI.sol\":24618:24622  from */\n      dup6\n        /* \"contracts/ERC1155MultiURI.sol\":24618:24638  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ERC1155MultiURI.sol\":24618:24678  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      dup1\n      tag_102\n      jumpi\n      pop\n        /* \"contracts/ERC1155MultiURI.sol\":24642:24678  isApprovedForAll(from, _msgSender()) */\n      tag_103\n        /* \"contracts/ERC1155MultiURI.sol\":24659:24663  from */\n      dup6\n        /* \"contracts/ERC1155MultiURI.sol\":24665:24677  _msgSender() */\n      tag_104\n        /* \"contracts/ERC1155MultiURI.sol\":24665:24675  _msgSender */\n      tag_71\n        /* \"contracts/ERC1155MultiURI.sol\":24665:24677  _msgSender() */\n      jump\t// in\n    tag_104:\n        /* \"contracts/ERC1155MultiURI.sol\":24642:24658  isApprovedForAll */\n      tag_47\n        /* \"contracts/ERC1155MultiURI.sol\":24642:24678  isApprovedForAll(from, _msgSender()) */\n      jump\t// in\n    tag_103:\n        /* \"contracts/ERC1155MultiURI.sol\":24618:24678  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n    tag_102:\n        /* \"contracts/ERC1155MultiURI.sol\":24596:24747  require(\r... */\n      tag_105\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_105:\n        /* \"contracts/ERC1155MultiURI.sol\":24758:24803  _safeTransferFrom(from, to, id, amount, data) */\n      tag_108\n        /* \"contracts/ERC1155MultiURI.sol\":24776:24780  from */\n      dup6\n        /* \"contracts/ERC1155MultiURI.sol\":24782:24784  to */\n      dup6\n        /* \"contracts/ERC1155MultiURI.sol\":24786:24788  id */\n      dup6\n        /* \"contracts/ERC1155MultiURI.sol\":24790:24796  amount */\n      dup6\n        /* \"contracts/ERC1155MultiURI.sol\":24798:24802  data */\n      dup6\n        /* \"contracts/ERC1155MultiURI.sol\":24758:24775  _safeTransferFrom */\n      tag_109\n        /* \"contracts/ERC1155MultiURI.sol\":24758:24803  _safeTransferFrom(from, to, id, amount, data) */\n      jump\t// in\n    tag_108:\n        /* \"contracts/ERC1155MultiURI.sol\":24410:24811  function safeTransferFrom(\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155MultiURI.sol\":13303:13460  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r... */\n    tag_61:\n        /* \"contracts/ERC1155MultiURI.sol\":13388:13392  bool */\n      0x00\n        /* \"contracts/ERC1155MultiURI.sol\":13427:13452  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"contracts/ERC1155MultiURI.sol\":13412:13452  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/ERC1155MultiURI.sol\":13412:13423  interfaceId */\n      dup3\n        /* \"contracts/ERC1155MultiURI.sol\":13412:13452  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/ERC1155MultiURI.sol\":13405:13452  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"contracts/ERC1155MultiURI.sol\":13303:13460  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155MultiURI.sol\":602:700  function _msgSender() internal view virtual returns (address) {\r... */\n    tag_71:\n        /* \"contracts/ERC1155MultiURI.sol\":655:662  address */\n      0x00\n        /* \"contracts/ERC1155MultiURI.sol\":682:692  msg.sender */\n      caller\n        /* \"contracts/ERC1155MultiURI.sol\":675:692  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/ERC1155MultiURI.sol\":602:700  function _msgSender() internal view virtual returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC1155MultiURI.sol\":26972:28046  function _safeBatchTransferFrom(\r... */\n    tag_79:\n        /* \"contracts/ERC1155MultiURI.sol\":27199:27206  amounts */\n      dup2\n        /* \"contracts/ERC1155MultiURI.sol\":27199:27213  amounts.length */\n      mload\n        /* \"contracts/ERC1155MultiURI.sol\":27185:27188  ids */\n      dup4\n        /* \"contracts/ERC1155MultiURI.sol\":27185:27195  ids.length */\n      mload\n        /* \"contracts/ERC1155MultiURI.sol\":27185:27213  ids.length == amounts.length */\n      eq\n        /* \"contracts/ERC1155MultiURI.sol\":27177:27258  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_113:\n        /* \"contracts/ERC1155MultiURI.sol\":27291:27292  0 */\n      0x00\n        /* \"contracts/ERC1155MultiURI.sol\":27277:27293  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155MultiURI.sol\":27277:27279  to */\n      dup5\n        /* \"contracts/ERC1155MultiURI.sol\":27277:27293  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/ERC1155MultiURI.sol\":27269:27335  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_116\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_116:\n        /* \"contracts/ERC1155MultiURI.sol\":27348:27364  address operator */\n      0x00\n        /* \"contracts/ERC1155MultiURI.sol\":27367:27379  _msgSender() */\n      tag_119\n        /* \"contracts/ERC1155MultiURI.sol\":27367:27377  _msgSender */\n      tag_71\n        /* \"contracts/ERC1155MultiURI.sol\":27367:27379  _msgSender() */\n      jump\t// in\n    tag_119:\n        /* \"contracts/ERC1155MultiURI.sol\":27348:27379  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/ERC1155MultiURI.sol\":27392:27452  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_120\n        /* \"contracts/ERC1155MultiURI.sol\":27413:27421  operator */\n      dup2\n        /* \"contracts/ERC1155MultiURI.sol\":27423:27427  from */\n      dup8\n        /* \"contracts/ERC1155MultiURI.sol\":27429:27431  to */\n      dup8\n        /* \"contracts/ERC1155MultiURI.sol\":27433:27436  ids */\n      dup8\n        /* \"contracts/ERC1155MultiURI.sol\":27438:27445  amounts */\n      dup8\n        /* \"contracts/ERC1155MultiURI.sol\":27447:27451  data */\n      dup8\n        /* \"contracts/ERC1155MultiURI.sol\":27392:27412  _beforeTokenTransfer */\n      tag_121\n        /* \"contracts/ERC1155MultiURI.sol\":27392:27452  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_120:\n        /* \"contracts/ERC1155MultiURI.sol\":27470:27479  uint256 i */\n      0x00\n        /* \"contracts/ERC1155MultiURI.sol\":27465:27886  for (uint256 i = 0; i < ids.length; ++i) {\r... */\n    tag_122:\n        /* \"contracts/ERC1155MultiURI.sol\":27489:27492  ids */\n      dup5\n        /* \"contracts/ERC1155MultiURI.sol\":27489:27499  ids.length */\n      mload\n        /* \"contracts/ERC1155MultiURI.sol\":27485:27486  i */\n      dup2\n        /* \"contracts/ERC1155MultiURI.sol\":27485:27499  i < ids.length */\n      lt\n        /* \"contracts/ERC1155MultiURI.sol\":27465:27886  for (uint256 i = 0; i < ids.length; ++i) {\r... */\n      iszero\n      tag_123\n      jumpi\n        /* \"contracts/ERC1155MultiURI.sol\":27521:27531  uint256 id */\n      0x00\n        /* \"contracts/ERC1155MultiURI.sol\":27534:27537  ids */\n      dup6\n        /* \"contracts/ERC1155MultiURI.sol\":27538:27539  i */\n      dup3\n        /* \"contracts/ERC1155MultiURI.sol\":27534:27540  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_125\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_125:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/ERC1155MultiURI.sol\":27521:27540  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"contracts/ERC1155MultiURI.sol\":27555:27569  uint256 amount */\n      0x00\n        /* \"contracts/ERC1155MultiURI.sol\":27572:27579  amounts */\n      dup6\n        /* \"contracts/ERC1155MultiURI.sol\":27580:27581  i */\n      dup4\n        /* \"contracts/ERC1155MultiURI.sol\":27572:27582  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_126\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_126:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/ERC1155MultiURI.sol\":27555:27582  uint256 amount = amounts[i] */\n      swap1\n      pop\n        /* \"contracts/ERC1155MultiURI.sol\":27599:27618  uint256 fromBalance */\n      0x00\n        /* \"contracts/ERC1155MultiURI.sol\":27621:27630  _balances */\n      dup1\n        /* \"contracts/ERC1155MultiURI.sol\":27621:27634  _balances[id] */\n      0x00\n        /* \"contracts/ERC1155MultiURI.sol\":27631:27633  id */\n      dup5\n        /* \"contracts/ERC1155MultiURI.sol\":27621:27634  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155MultiURI.sol\":27621:27640  _balances[id][from] */\n      0x00\n        /* \"contracts/ERC1155MultiURI.sol\":27635:27639  from */\n      dup12\n        /* \"contracts/ERC1155MultiURI.sol\":27621:27640  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC1155MultiURI.sol\":27599:27640  uint256 fromBalance = _balances[id][from] */\n      swap1\n      pop\n        /* \"contracts/ERC1155MultiURI.sol\":27678:27684  amount */\n      dup2\n        /* \"contracts/ERC1155MultiURI.sol\":27663:27674  fromBalance */\n      dup2\n        /* \"contracts/ERC1155MultiURI.sol\":27663:27684  fromBalance >= amount */\n      lt\n      iszero\n        /* \"contracts/ERC1155MultiURI.sol\":27655:27731  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_127:\n        /* \"contracts/ERC1155MultiURI.sol\":27811:27817  amount */\n      dup2\n        /* \"contracts/ERC1155MultiURI.sol\":27797:27808  fromBalance */\n      dup2\n        /* \"contracts/ERC1155MultiURI.sol\":27797:27817  fromBalance - amount */\n      sub\n        /* \"contracts/ERC1155MultiURI.sol\":27775:27784  _balances */\n      0x00\n        /* \"contracts/ERC1155MultiURI.sol\":27775:27788  _balances[id] */\n      dup1\n        /* \"contracts/ERC1155MultiURI.sol\":27785:27787  id */\n      dup6\n        /* \"contracts/ERC1155MultiURI.sol\":27775:27788  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155MultiURI.sol\":27775:27794  _balances[id][from] */\n      0x00\n        /* \"contracts/ERC1155MultiURI.sol\":27789:27793  from */\n      dup13\n        /* \"contracts/ERC1155MultiURI.sol\":27775:27794  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155MultiURI.sol\":27775:27817  _balances[id][from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC1155MultiURI.sol\":27868:27874  amount */\n      dup2\n        /* \"contracts/ERC1155MultiURI.sol\":27847:27856  _balances */\n      0x00\n        /* \"contracts/ERC1155MultiURI.sol\":27847:27860  _balances[id] */\n      dup1\n        /* \"contracts/ERC1155MultiURI.sol\":27857:27859  id */\n      dup6\n        /* \"contracts/ERC1155MultiURI.sol\":27847:27860  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155MultiURI.sol\":27847:27864  _balances[id][to] */\n      0x00\n        /* \"contracts/ERC1155MultiURI.sol\":27861:27863  to */\n      dup12\n        /* \"contracts/ERC1155MultiURI.sol\":27847:27864  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ERC1155MultiURI.sol\":27847:27874  _balances[id][to] += amount */\n      dup3\n      dup3\n      sload\n      tag_130\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC1155MultiURI.sol\":27465:27886  for (uint256 i = 0; i < ids.length; ++i) {\r... */\n      pop\n      pop\n      pop\n        /* \"contracts/ERC1155MultiURI.sol\":27501:27504  ++i */\n      dup1\n      tag_132\n      swap1\n      tag_94\n      jump\t// in\n    tag_132:\n      swap1\n      pop\n        /* \"contracts/ERC1155MultiURI.sol\":27465:27886  for (uint256 i = 0; i < ids.length; ++i) {\r... */\n      jump(tag_122)\n    tag_123:\n      pop\n        /* \"contracts/ERC1155MultiURI.sol\":27933:27935  to */\n      dup5\n        /* \"contracts/ERC1155MultiURI.sol\":27903:27950  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155MultiURI.sol\":27927:27931  from */\n      dup7\n        /* \"contracts/ERC1155MultiURI.sol\":27903:27950  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155MultiURI.sol\":27917:27925  operator */\n      dup3\n        /* \"contracts/ERC1155MultiURI.sol\":27903:27950  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"contracts/ERC1155MultiURI.sol\":27937:27940  ids */\n      dup8\n        /* \"contracts/ERC1155MultiURI.sol\":27942:27949  amounts */\n      dup8\n        /* \"contracts/ERC1155MultiURI.sol\":27903:27950  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      tag_133\n      swap3\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/ERC1155MultiURI.sol\":27963:28038  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_135\n        /* \"contracts/ERC1155MultiURI.sol\":27999:28007  operator */\n      dup2\n        /* \"contracts/ERC1155MultiURI.sol\":28009:28013  from */\n      dup8\n        /* \"contracts/ERC1155MultiURI.sol\":28015:28017  to */\n      dup8\n        /* \"contracts/ERC1155MultiURI.sol\":28019:28022  ids */\n      dup8\n        /* \"contracts/ERC1155MultiURI.sol\":28024:28031  amounts */\n      dup8\n        /* \"contracts/ERC1155MultiURI.sol\":28033:28037  data */\n      dup8\n        /* \"contracts/ERC1155MultiURI.sol\":27963:27998  _doSafeBatchTransferAcceptanceCheck */\n      tag_136\n        /* \"contracts/ERC1155MultiURI.sol\":27963:28038  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_135:\n        /* \"contracts/ERC1155MultiURI.sol\":26972:28046  function _safeBatchTransferFrom(\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155MultiURI.sol\":33159:33490  function _setApprovalForAll(\r... */\n    tag_98:\n        /* \"contracts/ERC1155MultiURI.sol\":33314:33322  operator */\n      dup2\n        /* \"contracts/ERC1155MultiURI.sol\":33305:33322  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155MultiURI.sol\":33305:33310  owner */\n      dup4\n        /* \"contracts/ERC1155MultiURI.sol\":33305:33322  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/ERC1155MultiURI.sol\":33297:33368  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_138:\n        /* \"contracts/ERC1155MultiURI.sol\":33417:33425  approved */\n      dup1\n        /* \"contracts/ERC1155MultiURI.sol\":33379:33397  _operatorApprovals */\n      0x01\n        /* \"contracts/ERC1155MultiURI.sol\":33379:33404  _operatorApprovals[owner] */\n      0x00\n        /* \"contracts/ERC1155MultiURI.sol\":33398:33403  owner */\n      dup6\n        /* \"contracts/ERC1155MultiURI.sol\":33379:33404  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155MultiURI.sol\":33379:33414  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"contracts/ERC1155MultiURI.sol\":33405:33413  operator */\n      dup5\n        /* \"contracts/ERC1155MultiURI.sol\":33379:33414  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ERC1155MultiURI.sol\":33379:33425  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC1155MultiURI.sol\":33463:33471  operator */\n      dup2\n        /* \"contracts/ERC1155MultiURI.sol\":33441:33482  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155MultiURI.sol\":33456:33461  owner */\n      dup4\n        /* \"contracts/ERC1155MultiURI.sol\":33441:33482  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"contracts/ERC1155MultiURI.sol\":33473:33481  approved */\n      dup4\n        /* \"contracts/ERC1155MultiURI.sol\":33441:33482  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_141\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC1155MultiURI.sol\":33159:33490  function _setApprovalForAll(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155MultiURI.sol\":25794:26614  function _safeTransferFrom(\r... */\n    tag_109:\n        /* \"contracts/ERC1155MultiURI.sol\":25996:25997  0 */\n      0x00\n        /* \"contracts/ERC1155MultiURI.sol\":25982:25998  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155MultiURI.sol\":25982:25984  to */\n      dup5\n        /* \"contracts/ERC1155MultiURI.sol\":25982:25998  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/ERC1155MultiURI.sol\":25974:26040  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_143\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_144\n      swap1\n      tag_118\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_143:\n        /* \"contracts/ERC1155MultiURI.sol\":26053:26069  address operator */\n      0x00\n        /* \"contracts/ERC1155MultiURI.sol\":26072:26084  _msgSender() */\n      tag_145\n        /* \"contracts/ERC1155MultiURI.sol\":26072:26082  _msgSender */\n      tag_71\n        /* \"contracts/ERC1155MultiURI.sol\":26072:26084  _msgSender() */\n      jump\t// in\n    tag_145:\n        /* \"contracts/ERC1155MultiURI.sol\":26053:26084  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/ERC1155MultiURI.sol\":26097:26193  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n      tag_146\n        /* \"contracts/ERC1155MultiURI.sol\":26118:26126  operator */\n      dup2\n        /* \"contracts/ERC1155MultiURI.sol\":26128:26132  from */\n      dup8\n        /* \"contracts/ERC1155MultiURI.sol\":26134:26136  to */\n      dup8\n        /* \"contracts/ERC1155MultiURI.sol\":26138:26159  _asSingletonArray(id) */\n      tag_147\n        /* \"contracts/ERC1155MultiURI.sol\":26156:26158  id */\n      dup9\n        /* \"contracts/ERC1155MultiURI.sol\":26138:26155  _asSingletonArray */\n      tag_148\n        /* \"contracts/ERC1155MultiURI.sol\":26138:26159  _asSingletonArray(id) */\n      jump\t// in\n    tag_147:\n        /* \"contracts/ERC1155MultiURI.sol\":26161:26186  _asSingletonArray(amount) */\n      tag_149\n        /* \"contracts/ERC1155MultiURI.sol\":26179:26185  amount */\n      dup9\n        /* \"contracts/ERC1155MultiURI.sol\":26161:26178  _asSingletonArray */\n      tag_148\n        /* \"contracts/ERC1155MultiURI.sol\":26161:26186  _asSingletonArray(amount) */\n      jump\t// in\n    tag_149:\n        /* \"contracts/ERC1155MultiURI.sol\":26188:26192  data */\n      dup8\n        /* \"contracts/ERC1155MultiURI.sol\":26097:26117  _beforeTokenTransfer */\n      tag_121\n        /* \"contracts/ERC1155MultiURI.sol\":26097:26193  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n      jump\t// in\n    tag_146:\n        /* \"contracts/ERC1155MultiURI.sol\":26206:26225  uint256 fromBalance */\n      0x00\n        /* \"contracts/ERC1155MultiURI.sol\":26228:26237  _balances */\n      dup1\n        /* \"contracts/ERC1155MultiURI.sol\":26228:26241  _balances[id] */\n      0x00\n        /* \"contracts/ERC1155MultiURI.sol\":26238:26240  id */\n      dup7\n        /* \"contracts/ERC1155MultiURI.sol\":26228:26241  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155MultiURI.sol\":26228:26247  _balances[id][from] */\n      0x00\n        /* \"contracts/ERC1155MultiURI.sol\":26242:26246  from */\n      dup9\n        /* \"contracts/ERC1155MultiURI.sol\":26228:26247  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC1155MultiURI.sol\":26206:26247  uint256 fromBalance = _balances[id][from] */\n      swap1\n      pop\n        /* \"contracts/ERC1155MultiURI.sol\":26281:26287  amount */\n      dup4\n        /* \"contracts/ERC1155MultiURI.sol\":26266:26277  fromBalance */\n      dup2\n        /* \"contracts/ERC1155MultiURI.sol\":26266:26287  fromBalance >= amount */\n      lt\n      iszero\n        /* \"contracts/ERC1155MultiURI.sol\":26258:26334  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap1\n      tag_129\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_150:\n        /* \"contracts/ERC1155MultiURI.sol\":26406:26412  amount */\n      dup4\n        /* \"contracts/ERC1155MultiURI.sol\":26392:26403  fromBalance */\n      dup2\n        /* \"contracts/ERC1155MultiURI.sol\":26392:26412  fromBalance - amount */\n      sub\n        /* \"contracts/ERC1155MultiURI.sol\":26370:26379  _balances */\n      0x00\n        /* \"contracts/ERC1155MultiURI.sol\":26370:26383  _balances[id] */\n      dup1\n        /* \"contracts/ERC1155MultiURI.sol\":26380:26382  id */\n      dup8\n        /* \"contracts/ERC1155MultiURI.sol\":26370:26383  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155MultiURI.sol\":26370:26389  _balances[id][from] */\n      0x00\n        /* \"contracts/ERC1155MultiURI.sol\":26384:26388  from */\n      dup10\n        /* \"contracts/ERC1155MultiURI.sol\":26370:26389  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155MultiURI.sol\":26370:26412  _balances[id][from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC1155MultiURI.sol\":26455:26461  amount */\n      dup4\n        /* \"contracts/ERC1155MultiURI.sol\":26434:26443  _balances */\n      0x00\n        /* \"contracts/ERC1155MultiURI.sol\":26434:26447  _balances[id] */\n      dup1\n        /* \"contracts/ERC1155MultiURI.sol\":26444:26446  id */\n      dup8\n        /* \"contracts/ERC1155MultiURI.sol\":26434:26447  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC1155MultiURI.sol\":26434:26451  _balances[id][to] */\n      0x00\n        /* \"contracts/ERC1155MultiURI.sol\":26448:26450  to */\n      dup9\n        /* \"contracts/ERC1155MultiURI.sol\":26434:26451  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ERC1155MultiURI.sol\":26434:26461  _balances[id][to] += amount */\n      dup3\n      dup3\n      sload\n      tag_152\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_152:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC1155MultiURI.sol\":26510:26512  to */\n      dup6\n        /* \"contracts/ERC1155MultiURI.sol\":26479:26525  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155MultiURI.sol\":26504:26508  from */\n      dup8\n        /* \"contracts/ERC1155MultiURI.sol\":26479:26525  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC1155MultiURI.sol\":26494:26502  operator */\n      dup4\n        /* \"contracts/ERC1155MultiURI.sol\":26479:26525  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n        /* \"contracts/ERC1155MultiURI.sol\":26514:26516  id */\n      dup9\n        /* \"contracts/ERC1155MultiURI.sol\":26518:26524  amount */\n      dup9\n        /* \"contracts/ERC1155MultiURI.sol\":26479:26525  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      tag_153\n      swap3\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/ERC1155MultiURI.sol\":26538:26606  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_155\n        /* \"contracts/ERC1155MultiURI.sol\":26569:26577  operator */\n      dup3\n        /* \"contracts/ERC1155MultiURI.sol\":26579:26583  from */\n      dup9\n        /* \"contracts/ERC1155MultiURI.sol\":26585:26587  to */\n      dup9\n        /* \"contracts/ERC1155MultiURI.sol\":26589:26591  id */\n      dup9\n        /* \"contracts/ERC1155MultiURI.sol\":26593:26599  amount */\n      dup9\n        /* \"contracts/ERC1155MultiURI.sol\":26601:26605  data */\n      dup9\n        /* \"contracts/ERC1155MultiURI.sol\":26538:26568  _doSafeTransferAcceptanceCheck */\n      tag_156\n        /* \"contracts/ERC1155MultiURI.sol\":26538:26606  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n    tag_155:\n        /* \"contracts/ERC1155MultiURI.sol\":25794:26614  function _safeTransferFrom(\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155MultiURI.sol\":34446:34667  function _beforeTokenTransfer(\r... */\n    tag_121:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155MultiURI.sol\":35427:36240  function _doSafeBatchTransferAcceptanceCheck(\r... */\n    tag_136:\n        /* \"contracts/ERC1155MultiURI.sol\":35667:35682  to.isContract() */\n      tag_159\n        /* \"contracts/ERC1155MultiURI.sol\":35667:35669  to */\n      dup5\n        /* \"contracts/ERC1155MultiURI.sol\":35667:35680  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_160\n        /* \"contracts/ERC1155MultiURI.sol\":35667:35682  to.isContract() */\n      jump\t// in\n    tag_159:\n        /* \"contracts/ERC1155MultiURI.sol\":35663:36233  if (to.isContract()) {\r... */\n      iszero\n      tag_161\n      jumpi\n        /* \"contracts/ERC1155MultiURI.sol\":35720:35722  to */\n      dup4\n        /* \"contracts/ERC1155MultiURI.sol\":35703:35746  IERC1155Receiver(to).onERC1155BatchReceived */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc197c81\n        /* \"contracts/ERC1155MultiURI.sol\":35747:35755  operator */\n      dup8\n        /* \"contracts/ERC1155MultiURI.sol\":35757:35761  from */\n      dup8\n        /* \"contracts/ERC1155MultiURI.sol\":35763:35766  ids */\n      dup7\n        /* \"contracts/ERC1155MultiURI.sol\":35768:35775  amounts */\n      dup7\n        /* \"contracts/ERC1155MultiURI.sol\":35777:35781  data */\n      dup7\n        /* \"contracts/ERC1155MultiURI.sol\":35703:35782  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_164\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_164:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_165\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_166\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      0x01\n    tag_165:\n        /* \"contracts/ERC1155MultiURI.sol\":35699:36222  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\r... */\n      tag_168\n      jumpi\n      tag_172\n      tag_173\n      jump\t// in\n    tag_172:\n      dup1\n      0x08c379a0\n      eq\n      iszero\n      tag_171\n      jumpi\n      pop\n      tag_174\n      tag_175\n      jump\t// in\n    tag_174:\n      dup1\n      tag_176\n      jumpi\n      pop\n      jump(tag_170)\n    tag_176:\n        /* \"contracts/ERC1155MultiURI.sol\":36095:36101  reason */\n      dup1\n        /* \"contracts/ERC1155MultiURI.sol\":36088:36102  revert(reason) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC1155MultiURI.sol\":35699:36222  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\r... */\n    tag_171:\n      pop\n    tag_170:\n        /* \"contracts/ERC1155MultiURI.sol\":36144:36206  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC1155MultiURI.sol\":35699:36222  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\r... */\n    tag_168:\n        /* \"contracts/ERC1155MultiURI.sol\":35876:35924  IERC1155Receiver.onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"contracts/ERC1155MultiURI.sol\":35864:35924  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/ERC1155MultiURI.sol\":35864:35872  response */\n      dup2\n        /* \"contracts/ERC1155MultiURI.sol\":35864:35924  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/ERC1155MultiURI.sol\":35860:36019  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\r... */\n      tag_181\n      jumpi\n        /* \"contracts/ERC1155MultiURI.sol\":35949:35999  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC1155MultiURI.sol\":35860:36019  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\r... */\n    tag_181:\n        /* \"contracts/ERC1155MultiURI.sol\":35783:36034  returns (\r... */\n      pop\n        /* \"contracts/ERC1155MultiURI.sol\":35663:36233  if (to.isContract()) {\r... */\n    tag_161:\n        /* \"contracts/ERC1155MultiURI.sol\":35427:36240  function _doSafeBatchTransferAcceptanceCheck(\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155MultiURI.sol\":36248:36446  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\r... */\n    tag_148:\n        /* \"contracts/ERC1155MultiURI.sol\":36314:36330  uint256[] memory */\n      0x60\n        /* \"contracts/ERC1155MultiURI.sol\":36343:36365  uint256[] memory array */\n      0x00\n        /* \"contracts/ERC1155MultiURI.sol\":36382:36383  1 */\n      0x01\n        /* \"contracts/ERC1155MultiURI.sol\":36368:36384  new uint256[](1) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_185\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_185:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_186\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_186:\n      pop\n        /* \"contracts/ERC1155MultiURI.sol\":36343:36384  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"contracts/ERC1155MultiURI.sol\":36406:36413  element */\n      dup3\n        /* \"contracts/ERC1155MultiURI.sol\":36395:36400  array */\n      dup2\n        /* \"contracts/ERC1155MultiURI.sol\":36401:36402  0 */\n      0x00\n        /* \"contracts/ERC1155MultiURI.sol\":36395:36403  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_187\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_187:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/ERC1155MultiURI.sol\":36395:36413  array[0] = element */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/ERC1155MultiURI.sol\":36433:36438  array */\n      dup1\n        /* \"contracts/ERC1155MultiURI.sol\":36426:36438  return array */\n      swap2\n      pop\n      pop\n        /* \"contracts/ERC1155MultiURI.sol\":36248:36446  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155MultiURI.sol\":34675:35419  function _doSafeTransferAcceptanceCheck(\r... */\n    tag_156:\n        /* \"contracts/ERC1155MultiURI.sol\":34890:34905  to.isContract() */\n      tag_189\n        /* \"contracts/ERC1155MultiURI.sol\":34890:34892  to */\n      dup5\n        /* \"contracts/ERC1155MultiURI.sol\":34890:34903  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_160\n        /* \"contracts/ERC1155MultiURI.sol\":34890:34905  to.isContract() */\n      jump\t// in\n    tag_189:\n        /* \"contracts/ERC1155MultiURI.sol\":34886:35412  if (to.isContract()) {\r... */\n      iszero\n      tag_190\n      jumpi\n        /* \"contracts/ERC1155MultiURI.sol\":34943:34945  to */\n      dup4\n        /* \"contracts/ERC1155MultiURI.sol\":34926:34964  IERC1155Receiver(to).onERC1155Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf23a6e61\n        /* \"contracts/ERC1155MultiURI.sol\":34965:34973  operator */\n      dup8\n        /* \"contracts/ERC1155MultiURI.sol\":34975:34979  from */\n      dup8\n        /* \"contracts/ERC1155MultiURI.sol\":34981:34983  id */\n      dup7\n        /* \"contracts/ERC1155MultiURI.sol\":34985:34991  amount */\n      dup7\n        /* \"contracts/ERC1155MultiURI.sol\":34993:34997  data */\n      dup7\n        /* \"contracts/ERC1155MultiURI.sol\":34926:34998  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_193\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_193:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_194\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_195\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_195:\n      0x01\n    tag_194:\n        /* \"contracts/ERC1155MultiURI.sol\":34922:35401  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\r... */\n      tag_196\n      jumpi\n      tag_200\n      tag_173\n      jump\t// in\n    tag_200:\n      dup1\n      0x08c379a0\n      eq\n      iszero\n      tag_199\n      jumpi\n      pop\n      tag_201\n      tag_175\n      jump\t// in\n    tag_201:\n      dup1\n      tag_202\n      jumpi\n      pop\n      jump(tag_198)\n    tag_202:\n        /* \"contracts/ERC1155MultiURI.sol\":35274:35280  reason */\n      dup1\n        /* \"contracts/ERC1155MultiURI.sol\":35267:35281  revert(reason) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_203\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_203:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC1155MultiURI.sol\":34922:35401  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\r... */\n    tag_199:\n      pop\n    tag_198:\n        /* \"contracts/ERC1155MultiURI.sol\":35323:35385  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap1\n      tag_179\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC1155MultiURI.sol\":34922:35401  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\r... */\n    tag_196:\n        /* \"contracts/ERC1155MultiURI.sol\":35060:35103  IERC1155Receiver.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"contracts/ERC1155MultiURI.sol\":35048:35103  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/ERC1155MultiURI.sol\":35048:35056  response */\n      dup2\n        /* \"contracts/ERC1155MultiURI.sol\":35048:35103  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/ERC1155MultiURI.sol\":35044:35198  if (response != IERC1155Receiver.onERC1155Received.selector) {\r... */\n      tag_206\n      jumpi\n        /* \"contracts/ERC1155MultiURI.sol\":35128:35178  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_207\n      swap1\n      tag_183\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC1155MultiURI.sol\":35044:35198  if (response != IERC1155Receiver.onERC1155Received.selector) {\r... */\n    tag_206:\n        /* \"contracts/ERC1155MultiURI.sol\":34999:35213  returns (bytes4 response) {\r... */\n      pop\n        /* \"contracts/ERC1155MultiURI.sol\":34886:35412  if (to.isContract()) {\r... */\n    tag_190:\n        /* \"contracts/ERC1155MultiURI.sol\":34675:35419  function _doSafeTransferAcceptanceCheck(\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155MultiURI.sol\":4178:4565  function isContract(address account) internal view returns (bool) {\r... */\n    tag_160:\n        /* \"contracts/ERC1155MultiURI.sol\":4238:4242  bool */\n      0x00\n        /* \"contracts/ERC1155MultiURI.sol\":4446:4458  uint256 size */\n      dup1\n        /* \"contracts/ERC1155MultiURI.sol\":4513:4520  account */\n      dup3\n        /* \"contracts/ERC1155MultiURI.sol\":4501:4521  extcodesize(account) */\n      extcodesize\n        /* \"contracts/ERC1155MultiURI.sol\":4493:4521  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"contracts/ERC1155MultiURI.sol\":4556:4557  0 */\n      0x00\n        /* \"contracts/ERC1155MultiURI.sol\":4549:4553  size */\n      dup2\n        /* \"contracts/ERC1155MultiURI.sol\":4549:4557  size > 0 */\n      gt\n        /* \"contracts/ERC1155MultiURI.sol\":4542:4557  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"contracts/ERC1155MultiURI.sol\":4178:4565  function isContract(address account) internal view returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24:647   */\n    tag_210:\n      0x00\n        /* \"#utility.yul\":145:226   */\n      tag_212\n        /* \"#utility.yul\":161:225   */\n      tag_213\n        /* \"#utility.yul\":218:224   */\n      dup5\n        /* \"#utility.yul\":161:225   */\n      tag_214\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":145:226   */\n      tag_215\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":136:226   */\n      swap1\n      pop\n        /* \"#utility.yul\":246:251   */\n      dup1\n        /* \"#utility.yul\":274:280   */\n      dup4\n        /* \"#utility.yul\":267:272   */\n      dup3\n        /* \"#utility.yul\":260:281   */\n      mstore\n        /* \"#utility.yul\":300:304   */\n      0x20\n        /* \"#utility.yul\":293:298   */\n      dup3\n        /* \"#utility.yul\":289:305   */\n      add\n        /* \"#utility.yul\":282:305   */\n      swap1\n      pop\n        /* \"#utility.yul\":325:331   */\n      dup3\n        /* \"#utility.yul\":375:378   */\n      dup6\n        /* \"#utility.yul\":367:371   */\n      0x20\n        /* \"#utility.yul\":359:365   */\n      dup7\n        /* \"#utility.yul\":355:372   */\n      mul\n        /* \"#utility.yul\":350:353   */\n      dup3\n        /* \"#utility.yul\":346:373   */\n      add\n        /* \"#utility.yul\":343:379   */\n      gt\n        /* \"#utility.yul\":340:342   */\n      iszero\n      tag_216\n      jumpi\n        /* \"#utility.yul\":392:393   */\n      0x00\n        /* \"#utility.yul\":389:390   */\n      dup1\n        /* \"#utility.yul\":382:394   */\n      revert\n        /* \"#utility.yul\":340:342   */\n    tag_216:\n        /* \"#utility.yul\":420:421   */\n      0x00\n        /* \"#utility.yul\":405:641   */\n    tag_217:\n        /* \"#utility.yul\":430:436   */\n      dup6\n        /* \"#utility.yul\":427:428   */\n      dup2\n        /* \"#utility.yul\":424:437   */\n      lt\n        /* \"#utility.yul\":405:641   */\n      iszero\n      tag_219\n      jumpi\n        /* \"#utility.yul\":497:500   */\n      dup2\n        /* \"#utility.yul\":525:562   */\n      tag_220\n        /* \"#utility.yul\":558:561   */\n      dup9\n        /* \"#utility.yul\":546:556   */\n      dup3\n        /* \"#utility.yul\":525:562   */\n      tag_221\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":520:523   */\n      dup5\n        /* \"#utility.yul\":513:563   */\n      mstore\n        /* \"#utility.yul\":592:596   */\n      0x20\n        /* \"#utility.yul\":587:590   */\n      dup5\n        /* \"#utility.yul\":583:597   */\n      add\n        /* \"#utility.yul\":576:597   */\n      swap4\n      pop\n        /* \"#utility.yul\":626:630   */\n      0x20\n        /* \"#utility.yul\":621:624   */\n      dup4\n        /* \"#utility.yul\":617:631   */\n      add\n        /* \"#utility.yul\":610:631   */\n      swap3\n      pop\n        /* \"#utility.yul\":465:641   */\n      pop\n        /* \"#utility.yul\":452:453   */\n      0x01\n        /* \"#utility.yul\":449:450   */\n      dup2\n        /* \"#utility.yul\":445:454   */\n      add\n        /* \"#utility.yul\":440:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":405:641   */\n      jump(tag_217)\n    tag_219:\n        /* \"#utility.yul\":409:423   */\n      pop\n        /* \"#utility.yul\":126:647   */\n      pop\n      pop\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":670:1293   */\n    tag_222:\n      0x00\n        /* \"#utility.yul\":791:872   */\n      tag_224\n        /* \"#utility.yul\":807:871   */\n      tag_225\n        /* \"#utility.yul\":864:870   */\n      dup5\n        /* \"#utility.yul\":807:871   */\n      tag_226\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":791:872   */\n      tag_215\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":782:872   */\n      swap1\n      pop\n        /* \"#utility.yul\":892:897   */\n      dup1\n        /* \"#utility.yul\":920:926   */\n      dup4\n        /* \"#utility.yul\":913:918   */\n      dup3\n        /* \"#utility.yul\":906:927   */\n      mstore\n        /* \"#utility.yul\":946:950   */\n      0x20\n        /* \"#utility.yul\":939:944   */\n      dup3\n        /* \"#utility.yul\":935:951   */\n      add\n        /* \"#utility.yul\":928:951   */\n      swap1\n      pop\n        /* \"#utility.yul\":971:977   */\n      dup3\n        /* \"#utility.yul\":1021:1024   */\n      dup6\n        /* \"#utility.yul\":1013:1017   */\n      0x20\n        /* \"#utility.yul\":1005:1011   */\n      dup7\n        /* \"#utility.yul\":1001:1018   */\n      mul\n        /* \"#utility.yul\":996:999   */\n      dup3\n        /* \"#utility.yul\":992:1019   */\n      add\n        /* \"#utility.yul\":989:1025   */\n      gt\n        /* \"#utility.yul\":986:988   */\n      iszero\n      tag_227\n      jumpi\n        /* \"#utility.yul\":1038:1039   */\n      0x00\n        /* \"#utility.yul\":1035:1036   */\n      dup1\n        /* \"#utility.yul\":1028:1040   */\n      revert\n        /* \"#utility.yul\":986:988   */\n    tag_227:\n        /* \"#utility.yul\":1066:1067   */\n      0x00\n        /* \"#utility.yul\":1051:1287   */\n    tag_228:\n        /* \"#utility.yul\":1076:1082   */\n      dup6\n        /* \"#utility.yul\":1073:1074   */\n      dup2\n        /* \"#utility.yul\":1070:1083   */\n      lt\n        /* \"#utility.yul\":1051:1287   */\n      iszero\n      tag_230\n      jumpi\n        /* \"#utility.yul\":1143:1146   */\n      dup2\n        /* \"#utility.yul\":1171:1208   */\n      tag_231\n        /* \"#utility.yul\":1204:1207   */\n      dup9\n        /* \"#utility.yul\":1192:1202   */\n      dup3\n        /* \"#utility.yul\":1171:1208   */\n      tag_232\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":1166:1169   */\n      dup5\n        /* \"#utility.yul\":1159:1209   */\n      mstore\n        /* \"#utility.yul\":1238:1242   */\n      0x20\n        /* \"#utility.yul\":1233:1236   */\n      dup5\n        /* \"#utility.yul\":1229:1243   */\n      add\n        /* \"#utility.yul\":1222:1243   */\n      swap4\n      pop\n        /* \"#utility.yul\":1272:1276   */\n      0x20\n        /* \"#utility.yul\":1267:1270   */\n      dup4\n        /* \"#utility.yul\":1263:1277   */\n      add\n        /* \"#utility.yul\":1256:1277   */\n      swap3\n      pop\n        /* \"#utility.yul\":1111:1287   */\n      pop\n        /* \"#utility.yul\":1098:1099   */\n      0x01\n        /* \"#utility.yul\":1095:1096   */\n      dup2\n        /* \"#utility.yul\":1091:1100   */\n      add\n        /* \"#utility.yul\":1086:1100   */\n      swap1\n      pop\n        /* \"#utility.yul\":1051:1287   */\n      jump(tag_228)\n    tag_230:\n        /* \"#utility.yul\":1055:1069   */\n      pop\n        /* \"#utility.yul\":772:1293   */\n      pop\n      pop\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1299:1642   */\n    tag_233:\n      0x00\n        /* \"#utility.yul\":1401:1466   */\n      tag_235\n        /* \"#utility.yul\":1417:1465   */\n      tag_236\n        /* \"#utility.yul\":1458:1464   */\n      dup5\n        /* \"#utility.yul\":1417:1465   */\n      tag_237\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":1401:1466   */\n      tag_215\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":1392:1466   */\n      swap1\n      pop\n        /* \"#utility.yul\":1489:1495   */\n      dup3\n        /* \"#utility.yul\":1482:1487   */\n      dup2\n        /* \"#utility.yul\":1475:1496   */\n      mstore\n        /* \"#utility.yul\":1527:1531   */\n      0x20\n        /* \"#utility.yul\":1520:1525   */\n      dup2\n        /* \"#utility.yul\":1516:1532   */\n      add\n        /* \"#utility.yul\":1565:1568   */\n      dup5\n        /* \"#utility.yul\":1556:1562   */\n      dup5\n        /* \"#utility.yul\":1551:1554   */\n      dup5\n        /* \"#utility.yul\":1547:1563   */\n      add\n        /* \"#utility.yul\":1544:1569   */\n      gt\n        /* \"#utility.yul\":1541:1543   */\n      iszero\n      tag_238\n      jumpi\n        /* \"#utility.yul\":1582:1583   */\n      0x00\n        /* \"#utility.yul\":1579:1580   */\n      dup1\n        /* \"#utility.yul\":1572:1584   */\n      revert\n        /* \"#utility.yul\":1541:1543   */\n    tag_238:\n        /* \"#utility.yul\":1595:1636   */\n      tag_239\n        /* \"#utility.yul\":1629:1635   */\n      dup5\n        /* \"#utility.yul\":1624:1627   */\n      dup3\n        /* \"#utility.yul\":1619:1622   */\n      dup6\n        /* \"#utility.yul\":1595:1636   */\n      tag_240\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":1382:1642   */\n      pop\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1648:1787   */\n    tag_221:\n      0x00\n        /* \"#utility.yul\":1732:1738   */\n      dup2\n        /* \"#utility.yul\":1719:1739   */\n      calldataload\n        /* \"#utility.yul\":1710:1739   */\n      swap1\n      pop\n        /* \"#utility.yul\":1748:1781   */\n      tag_242\n        /* \"#utility.yul\":1775:1780   */\n      dup2\n        /* \"#utility.yul\":1748:1781   */\n      tag_243\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":1700:1787   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1810:2113   */\n    tag_244:\n      0x00\n        /* \"#utility.yul\":1930:1933   */\n      dup3\n        /* \"#utility.yul\":1923:1927   */\n      0x1f\n        /* \"#utility.yul\":1915:1921   */\n      dup4\n        /* \"#utility.yul\":1911:1928   */\n      add\n        /* \"#utility.yul\":1907:1934   */\n      slt\n        /* \"#utility.yul\":1897:1899   */\n      tag_246\n      jumpi\n        /* \"#utility.yul\":1948:1949   */\n      0x00\n        /* \"#utility.yul\":1945:1946   */\n      dup1\n        /* \"#utility.yul\":1938:1950   */\n      revert\n        /* \"#utility.yul\":1897:1899   */\n    tag_246:\n        /* \"#utility.yul\":1988:1994   */\n      dup2\n        /* \"#utility.yul\":1975:1995   */\n      calldataload\n        /* \"#utility.yul\":2013:2107   */\n      tag_247\n        /* \"#utility.yul\":2103:2106   */\n      dup5\n        /* \"#utility.yul\":2095:2101   */\n      dup3\n        /* \"#utility.yul\":2088:2092   */\n      0x20\n        /* \"#utility.yul\":2080:2086   */\n      dup7\n        /* \"#utility.yul\":2076:2093   */\n      add\n        /* \"#utility.yul\":2013:2107   */\n      tag_210\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":2004:2107   */\n      swap2\n      pop\n        /* \"#utility.yul\":1887:2113   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2136:2439   */\n    tag_248:\n      0x00\n        /* \"#utility.yul\":2256:2259   */\n      dup3\n        /* \"#utility.yul\":2249:2253   */\n      0x1f\n        /* \"#utility.yul\":2241:2247   */\n      dup4\n        /* \"#utility.yul\":2237:2254   */\n      add\n        /* \"#utility.yul\":2233:2260   */\n      slt\n        /* \"#utility.yul\":2223:2225   */\n      tag_250\n      jumpi\n        /* \"#utility.yul\":2274:2275   */\n      0x00\n        /* \"#utility.yul\":2271:2272   */\n      dup1\n        /* \"#utility.yul\":2264:2276   */\n      revert\n        /* \"#utility.yul\":2223:2225   */\n    tag_250:\n        /* \"#utility.yul\":2314:2320   */\n      dup2\n        /* \"#utility.yul\":2301:2321   */\n      calldataload\n        /* \"#utility.yul\":2339:2433   */\n      tag_251\n        /* \"#utility.yul\":2429:2432   */\n      dup5\n        /* \"#utility.yul\":2421:2427   */\n      dup3\n        /* \"#utility.yul\":2414:2418   */\n      0x20\n        /* \"#utility.yul\":2406:2412   */\n      dup7\n        /* \"#utility.yul\":2402:2419   */\n      add\n        /* \"#utility.yul\":2339:2433   */\n      tag_222\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":2330:2433   */\n      swap2\n      pop\n        /* \"#utility.yul\":2213:2439   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2445:2578   */\n    tag_252:\n      0x00\n        /* \"#utility.yul\":2526:2532   */\n      dup2\n        /* \"#utility.yul\":2513:2533   */\n      calldataload\n        /* \"#utility.yul\":2504:2533   */\n      swap1\n      pop\n        /* \"#utility.yul\":2542:2572   */\n      tag_254\n        /* \"#utility.yul\":2566:2571   */\n      dup2\n        /* \"#utility.yul\":2542:2572   */\n      tag_255\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":2494:2578   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2584:2721   */\n    tag_256:\n      0x00\n        /* \"#utility.yul\":2667:2673   */\n      dup2\n        /* \"#utility.yul\":2654:2674   */\n      calldataload\n        /* \"#utility.yul\":2645:2674   */\n      swap1\n      pop\n        /* \"#utility.yul\":2683:2715   */\n      tag_258\n        /* \"#utility.yul\":2709:2714   */\n      dup2\n        /* \"#utility.yul\":2683:2715   */\n      tag_259\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":2635:2721   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2727:2868   */\n    tag_260:\n      0x00\n        /* \"#utility.yul\":2814:2820   */\n      dup2\n        /* \"#utility.yul\":2808:2821   */\n      mload\n        /* \"#utility.yul\":2799:2821   */\n      swap1\n      pop\n        /* \"#utility.yul\":2830:2862   */\n      tag_262\n        /* \"#utility.yul\":2856:2861   */\n      dup2\n        /* \"#utility.yul\":2830:2862   */\n      tag_259\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":2789:2868   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2887:3158   */\n    tag_263:\n      0x00\n        /* \"#utility.yul\":2991:2994   */\n      dup3\n        /* \"#utility.yul\":2984:2988   */\n      0x1f\n        /* \"#utility.yul\":2976:2982   */\n      dup4\n        /* \"#utility.yul\":2972:2989   */\n      add\n        /* \"#utility.yul\":2968:2995   */\n      slt\n        /* \"#utility.yul\":2958:2960   */\n      tag_265\n      jumpi\n        /* \"#utility.yul\":3009:3010   */\n      0x00\n        /* \"#utility.yul\":3006:3007   */\n      dup1\n        /* \"#utility.yul\":2999:3011   */\n      revert\n        /* \"#utility.yul\":2958:2960   */\n    tag_265:\n        /* \"#utility.yul\":3049:3055   */\n      dup2\n        /* \"#utility.yul\":3036:3056   */\n      calldataload\n        /* \"#utility.yul\":3074:3152   */\n      tag_266\n        /* \"#utility.yul\":3148:3151   */\n      dup5\n        /* \"#utility.yul\":3140:3146   */\n      dup3\n        /* \"#utility.yul\":3133:3137   */\n      0x20\n        /* \"#utility.yul\":3125:3131   */\n      dup7\n        /* \"#utility.yul\":3121:3138   */\n      add\n        /* \"#utility.yul\":3074:3152   */\n      tag_233\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":3065:3152   */\n      swap2\n      pop\n        /* \"#utility.yul\":2948:3158   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3164:3303   */\n    tag_232:\n      0x00\n        /* \"#utility.yul\":3248:3254   */\n      dup2\n        /* \"#utility.yul\":3235:3255   */\n      calldataload\n        /* \"#utility.yul\":3226:3255   */\n      swap1\n      pop\n        /* \"#utility.yul\":3264:3297   */\n      tag_268\n        /* \"#utility.yul\":3291:3296   */\n      dup2\n        /* \"#utility.yul\":3264:3297   */\n      tag_269\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":3216:3303   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3309:3716   */\n    tag_46:\n      0x00\n      dup1\n        /* \"#utility.yul\":3434:3436   */\n      0x40\n        /* \"#utility.yul\":3422:3431   */\n      dup4\n        /* \"#utility.yul\":3413:3420   */\n      dup6\n        /* \"#utility.yul\":3409:3432   */\n      sub\n        /* \"#utility.yul\":3405:3437   */\n      slt\n        /* \"#utility.yul\":3402:3404   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":3450:3451   */\n      0x00\n        /* \"#utility.yul\":3447:3448   */\n      dup1\n        /* \"#utility.yul\":3440:3452   */\n      revert\n        /* \"#utility.yul\":3402:3404   */\n    tag_271:\n        /* \"#utility.yul\":3493:3494   */\n      0x00\n        /* \"#utility.yul\":3518:3571   */\n      tag_272\n        /* \"#utility.yul\":3563:3570   */\n      dup6\n        /* \"#utility.yul\":3554:3560   */\n      dup3\n        /* \"#utility.yul\":3543:3552   */\n      dup7\n        /* \"#utility.yul\":3539:3561   */\n      add\n        /* \"#utility.yul\":3518:3571   */\n      tag_221\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":3508:3571   */\n      swap3\n      pop\n        /* \"#utility.yul\":3464:3581   */\n      pop\n        /* \"#utility.yul\":3620:3622   */\n      0x20\n        /* \"#utility.yul\":3646:3699   */\n      tag_273\n        /* \"#utility.yul\":3691:3698   */\n      dup6\n        /* \"#utility.yul\":3682:3688   */\n      dup3\n        /* \"#utility.yul\":3671:3680   */\n      dup7\n        /* \"#utility.yul\":3667:3689   */\n      add\n        /* \"#utility.yul\":3646:3699   */\n      tag_221\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":3636:3699   */\n      swap2\n      pop\n        /* \"#utility.yul\":3591:3709   */\n      pop\n        /* \"#utility.yul\":3392:3716   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3722:4963   */\n    tag_32:\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":3957:3960   */\n      0xa0\n        /* \"#utility.yul\":3945:3954   */\n      dup7\n        /* \"#utility.yul\":3936:3943   */\n      dup9\n        /* \"#utility.yul\":3932:3955   */\n      sub\n        /* \"#utility.yul\":3928:3961   */\n      slt\n        /* \"#utility.yul\":3925:3927   */\n      iszero\n      tag_275\n      jumpi\n        /* \"#utility.yul\":3974:3975   */\n      0x00\n        /* \"#utility.yul\":3971:3972   */\n      dup1\n        /* \"#utility.yul\":3964:3976   */\n      revert\n        /* \"#utility.yul\":3925:3927   */\n    tag_275:\n        /* \"#utility.yul\":4017:4018   */\n      0x00\n        /* \"#utility.yul\":4042:4095   */\n      tag_276\n        /* \"#utility.yul\":4087:4094   */\n      dup9\n        /* \"#utility.yul\":4078:4084   */\n      dup3\n        /* \"#utility.yul\":4067:4076   */\n      dup10\n        /* \"#utility.yul\":4063:4085   */\n      add\n        /* \"#utility.yul\":4042:4095   */\n      tag_221\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":4032:4095   */\n      swap6\n      pop\n        /* \"#utility.yul\":3988:4105   */\n      pop\n        /* \"#utility.yul\":4144:4146   */\n      0x20\n        /* \"#utility.yul\":4170:4223   */\n      tag_277\n        /* \"#utility.yul\":4215:4222   */\n      dup9\n        /* \"#utility.yul\":4206:4212   */\n      dup3\n        /* \"#utility.yul\":4195:4204   */\n      dup10\n        /* \"#utility.yul\":4191:4213   */\n      add\n        /* \"#utility.yul\":4170:4223   */\n      tag_221\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":4160:4223   */\n      swap5\n      pop\n        /* \"#utility.yul\":4115:4233   */\n      pop\n        /* \"#utility.yul\":4300:4302   */\n      0x40\n        /* \"#utility.yul\":4289:4298   */\n      dup7\n        /* \"#utility.yul\":4285:4303   */\n      add\n        /* \"#utility.yul\":4272:4304   */\n      calldataload\n        /* \"#utility.yul\":4331:4349   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4323:4329   */\n      dup2\n        /* \"#utility.yul\":4320:4350   */\n      gt\n        /* \"#utility.yul\":4317:4319   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":4363:4364   */\n      0x00\n        /* \"#utility.yul\":4360:4361   */\n      dup1\n        /* \"#utility.yul\":4353:4365   */\n      revert\n        /* \"#utility.yul\":4317:4319   */\n    tag_278:\n        /* \"#utility.yul\":4391:4469   */\n      tag_279\n        /* \"#utility.yul\":4461:4468   */\n      dup9\n        /* \"#utility.yul\":4452:4458   */\n      dup3\n        /* \"#utility.yul\":4441:4450   */\n      dup10\n        /* \"#utility.yul\":4437:4459   */\n      add\n        /* \"#utility.yul\":4391:4469   */\n      tag_248\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":4381:4469   */\n      swap4\n      pop\n        /* \"#utility.yul\":4243:4479   */\n      pop\n        /* \"#utility.yul\":4546:4548   */\n      0x60\n        /* \"#utility.yul\":4535:4544   */\n      dup7\n        /* \"#utility.yul\":4531:4549   */\n      add\n        /* \"#utility.yul\":4518:4550   */\n      calldataload\n        /* \"#utility.yul\":4577:4595   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4569:4575   */\n      dup2\n        /* \"#utility.yul\":4566:4596   */\n      gt\n        /* \"#utility.yul\":4563:4565   */\n      iszero\n      tag_280\n      jumpi\n        /* \"#utility.yul\":4609:4610   */\n      0x00\n        /* \"#utility.yul\":4606:4607   */\n      dup1\n        /* \"#utility.yul\":4599:4611   */\n      revert\n        /* \"#utility.yul\":4563:4565   */\n    tag_280:\n        /* \"#utility.yul\":4637:4715   */\n      tag_281\n        /* \"#utility.yul\":4707:4714   */\n      dup9\n        /* \"#utility.yul\":4698:4704   */\n      dup3\n        /* \"#utility.yul\":4687:4696   */\n      dup10\n        /* \"#utility.yul\":4683:4705   */\n      add\n        /* \"#utility.yul\":4637:4715   */\n      tag_248\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":4627:4715   */\n      swap3\n      pop\n        /* \"#utility.yul\":4489:4725   */\n      pop\n        /* \"#utility.yul\":4792:4795   */\n      0x80\n        /* \"#utility.yul\":4781:4790   */\n      dup7\n        /* \"#utility.yul\":4777:4796   */\n      add\n        /* \"#utility.yul\":4764:4797   */\n      calldataload\n        /* \"#utility.yul\":4824:4842   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4816:4822   */\n      dup2\n        /* \"#utility.yul\":4813:4843   */\n      gt\n        /* \"#utility.yul\":4810:4812   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":4856:4857   */\n      0x00\n        /* \"#utility.yul\":4853:4854   */\n      dup1\n        /* \"#utility.yul\":4846:4858   */\n      revert\n        /* \"#utility.yul\":4810:4812   */\n    tag_282:\n        /* \"#utility.yul\":4884:4946   */\n      tag_283\n        /* \"#utility.yul\":4938:4945   */\n      dup9\n        /* \"#utility.yul\":4929:4935   */\n      dup3\n        /* \"#utility.yul\":4918:4927   */\n      dup10\n        /* \"#utility.yul\":4914:4936   */\n      add\n        /* \"#utility.yul\":4884:4946   */\n      tag_263\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":4874:4946   */\n      swap2\n      pop\n        /* \"#utility.yul\":4735:4956   */\n      pop\n        /* \"#utility.yul\":3915:4963   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4969:5924   */\n    tag_51:\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":5154:5157   */\n      0xa0\n        /* \"#utility.yul\":5142:5151   */\n      dup7\n        /* \"#utility.yul\":5133:5140   */\n      dup9\n        /* \"#utility.yul\":5129:5152   */\n      sub\n        /* \"#utility.yul\":5125:5158   */\n      slt\n        /* \"#utility.yul\":5122:5124   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":5171:5172   */\n      0x00\n        /* \"#utility.yul\":5168:5169   */\n      dup1\n        /* \"#utility.yul\":5161:5173   */\n      revert\n        /* \"#utility.yul\":5122:5124   */\n    tag_285:\n        /* \"#utility.yul\":5214:5215   */\n      0x00\n        /* \"#utility.yul\":5239:5292   */\n      tag_286\n        /* \"#utility.yul\":5284:5291   */\n      dup9\n        /* \"#utility.yul\":5275:5281   */\n      dup3\n        /* \"#utility.yul\":5264:5273   */\n      dup10\n        /* \"#utility.yul\":5260:5282   */\n      add\n        /* \"#utility.yul\":5239:5292   */\n      tag_221\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":5229:5292   */\n      swap6\n      pop\n        /* \"#utility.yul\":5185:5302   */\n      pop\n        /* \"#utility.yul\":5341:5343   */\n      0x20\n        /* \"#utility.yul\":5367:5420   */\n      tag_287\n        /* \"#utility.yul\":5412:5419   */\n      dup9\n        /* \"#utility.yul\":5403:5409   */\n      dup3\n        /* \"#utility.yul\":5392:5401   */\n      dup10\n        /* \"#utility.yul\":5388:5410   */\n      add\n        /* \"#utility.yul\":5367:5420   */\n      tag_221\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":5357:5420   */\n      swap5\n      pop\n        /* \"#utility.yul\":5312:5430   */\n      pop\n        /* \"#utility.yul\":5469:5471   */\n      0x40\n        /* \"#utility.yul\":5495:5548   */\n      tag_288\n        /* \"#utility.yul\":5540:5547   */\n      dup9\n        /* \"#utility.yul\":5531:5537   */\n      dup3\n        /* \"#utility.yul\":5520:5529   */\n      dup10\n        /* \"#utility.yul\":5516:5538   */\n      add\n        /* \"#utility.yul\":5495:5548   */\n      tag_232\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":5485:5548   */\n      swap4\n      pop\n        /* \"#utility.yul\":5440:5558   */\n      pop\n        /* \"#utility.yul\":5597:5599   */\n      0x60\n        /* \"#utility.yul\":5623:5676   */\n      tag_289\n        /* \"#utility.yul\":5668:5675   */\n      dup9\n        /* \"#utility.yul\":5659:5665   */\n      dup3\n        /* \"#utility.yul\":5648:5657   */\n      dup10\n        /* \"#utility.yul\":5644:5666   */\n      add\n        /* \"#utility.yul\":5623:5676   */\n      tag_232\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":5613:5676   */\n      swap3\n      pop\n        /* \"#utility.yul\":5568:5686   */\n      pop\n        /* \"#utility.yul\":5753:5756   */\n      0x80\n        /* \"#utility.yul\":5742:5751   */\n      dup7\n        /* \"#utility.yul\":5738:5757   */\n      add\n        /* \"#utility.yul\":5725:5758   */\n      calldataload\n        /* \"#utility.yul\":5785:5803   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5777:5783   */\n      dup2\n        /* \"#utility.yul\":5774:5804   */\n      gt\n        /* \"#utility.yul\":5771:5773   */\n      iszero\n      tag_290\n      jumpi\n        /* \"#utility.yul\":5817:5818   */\n      0x00\n        /* \"#utility.yul\":5814:5815   */\n      dup1\n        /* \"#utility.yul\":5807:5819   */\n      revert\n        /* \"#utility.yul\":5771:5773   */\n    tag_290:\n        /* \"#utility.yul\":5845:5907   */\n      tag_291\n        /* \"#utility.yul\":5899:5906   */\n      dup9\n        /* \"#utility.yul\":5890:5896   */\n      dup3\n        /* \"#utility.yul\":5879:5888   */\n      dup10\n        /* \"#utility.yul\":5875:5897   */\n      add\n        /* \"#utility.yul\":5845:5907   */\n      tag_263\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":5835:5907   */\n      swap2\n      pop\n        /* \"#utility.yul\":5696:5917   */\n      pop\n        /* \"#utility.yul\":5112:5924   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5930:6331   */\n    tag_42:\n      0x00\n      dup1\n        /* \"#utility.yul\":6052:6054   */\n      0x40\n        /* \"#utility.yul\":6040:6049   */\n      dup4\n        /* \"#utility.yul\":6031:6038   */\n      dup6\n        /* \"#utility.yul\":6027:6050   */\n      sub\n        /* \"#utility.yul\":6023:6055   */\n      slt\n        /* \"#utility.yul\":6020:6022   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":6068:6069   */\n      0x00\n        /* \"#utility.yul\":6065:6066   */\n      dup1\n        /* \"#utility.yul\":6058:6070   */\n      revert\n        /* \"#utility.yul\":6020:6022   */\n    tag_293:\n        /* \"#utility.yul\":6111:6112   */\n      0x00\n        /* \"#utility.yul\":6136:6189   */\n      tag_294\n        /* \"#utility.yul\":6181:6188   */\n      dup6\n        /* \"#utility.yul\":6172:6178   */\n      dup3\n        /* \"#utility.yul\":6161:6170   */\n      dup7\n        /* \"#utility.yul\":6157:6179   */\n      add\n        /* \"#utility.yul\":6136:6189   */\n      tag_221\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":6126:6189   */\n      swap3\n      pop\n        /* \"#utility.yul\":6082:6199   */\n      pop\n        /* \"#utility.yul\":6238:6240   */\n      0x20\n        /* \"#utility.yul\":6264:6314   */\n      tag_295\n        /* \"#utility.yul\":6306:6313   */\n      dup6\n        /* \"#utility.yul\":6297:6303   */\n      dup3\n        /* \"#utility.yul\":6286:6295   */\n      dup7\n        /* \"#utility.yul\":6282:6304   */\n      add\n        /* \"#utility.yul\":6264:6314   */\n      tag_252\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":6254:6314   */\n      swap2\n      pop\n        /* \"#utility.yul\":6209:6324   */\n      pop\n        /* \"#utility.yul\":6010:6331   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6337:6744   */\n    tag_14:\n      0x00\n      dup1\n        /* \"#utility.yul\":6462:6464   */\n      0x40\n        /* \"#utility.yul\":6450:6459   */\n      dup4\n        /* \"#utility.yul\":6441:6448   */\n      dup6\n        /* \"#utility.yul\":6437:6460   */\n      sub\n        /* \"#utility.yul\":6433:6465   */\n      slt\n        /* \"#utility.yul\":6430:6432   */\n      iszero\n      tag_297\n      jumpi\n        /* \"#utility.yul\":6478:6479   */\n      0x00\n        /* \"#utility.yul\":6475:6476   */\n      dup1\n        /* \"#utility.yul\":6468:6480   */\n      revert\n        /* \"#utility.yul\":6430:6432   */\n    tag_297:\n        /* \"#utility.yul\":6521:6522   */\n      0x00\n        /* \"#utility.yul\":6546:6599   */\n      tag_298\n        /* \"#utility.yul\":6591:6598   */\n      dup6\n        /* \"#utility.yul\":6582:6588   */\n      dup3\n        /* \"#utility.yul\":6571:6580   */\n      dup7\n        /* \"#utility.yul\":6567:6589   */\n      add\n        /* \"#utility.yul\":6546:6599   */\n      tag_221\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":6536:6599   */\n      swap3\n      pop\n        /* \"#utility.yul\":6492:6609   */\n      pop\n        /* \"#utility.yul\":6648:6650   */\n      0x20\n        /* \"#utility.yul\":6674:6727   */\n      tag_299\n        /* \"#utility.yul\":6719:6726   */\n      dup6\n        /* \"#utility.yul\":6710:6716   */\n      dup3\n        /* \"#utility.yul\":6699:6708   */\n      dup7\n        /* \"#utility.yul\":6695:6717   */\n      add\n        /* \"#utility.yul\":6674:6727   */\n      tag_232\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":6664:6727   */\n      swap2\n      pop\n        /* \"#utility.yul\":6619:6737   */\n      pop\n        /* \"#utility.yul\":6420:6744   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6750:7443   */\n    tag_36:\n      0x00\n      dup1\n        /* \"#utility.yul\":6925:6927   */\n      0x40\n        /* \"#utility.yul\":6913:6922   */\n      dup4\n        /* \"#utility.yul\":6904:6911   */\n      dup6\n        /* \"#utility.yul\":6900:6923   */\n      sub\n        /* \"#utility.yul\":6896:6928   */\n      slt\n        /* \"#utility.yul\":6893:6895   */\n      iszero\n      tag_301\n      jumpi\n        /* \"#utility.yul\":6941:6942   */\n      0x00\n        /* \"#utility.yul\":6938:6939   */\n      dup1\n        /* \"#utility.yul\":6931:6943   */\n      revert\n        /* \"#utility.yul\":6893:6895   */\n    tag_301:\n        /* \"#utility.yul\":7012:7013   */\n      0x00\n        /* \"#utility.yul\":7001:7010   */\n      dup4\n        /* \"#utility.yul\":6997:7014   */\n      add\n        /* \"#utility.yul\":6984:7015   */\n      calldataload\n        /* \"#utility.yul\":7042:7060   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7034:7040   */\n      dup2\n        /* \"#utility.yul\":7031:7061   */\n      gt\n        /* \"#utility.yul\":7028:7030   */\n      iszero\n      tag_302\n      jumpi\n        /* \"#utility.yul\":7074:7075   */\n      0x00\n        /* \"#utility.yul\":7071:7072   */\n      dup1\n        /* \"#utility.yul\":7064:7076   */\n      revert\n        /* \"#utility.yul\":7028:7030   */\n    tag_302:\n        /* \"#utility.yul\":7102:7180   */\n      tag_303\n        /* \"#utility.yul\":7172:7179   */\n      dup6\n        /* \"#utility.yul\":7163:7169   */\n      dup3\n        /* \"#utility.yul\":7152:7161   */\n      dup7\n        /* \"#utility.yul\":7148:7170   */\n      add\n        /* \"#utility.yul\":7102:7180   */\n      tag_244\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":7092:7180   */\n      swap3\n      pop\n        /* \"#utility.yul\":6955:7190   */\n      pop\n        /* \"#utility.yul\":7257:7259   */\n      0x20\n        /* \"#utility.yul\":7246:7255   */\n      dup4\n        /* \"#utility.yul\":7242:7260   */\n      add\n        /* \"#utility.yul\":7229:7261   */\n      calldataload\n        /* \"#utility.yul\":7288:7306   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7280:7286   */\n      dup2\n        /* \"#utility.yul\":7277:7307   */\n      gt\n        /* \"#utility.yul\":7274:7276   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":7320:7321   */\n      0x00\n        /* \"#utility.yul\":7317:7318   */\n      dup1\n        /* \"#utility.yul\":7310:7322   */\n      revert\n        /* \"#utility.yul\":7274:7276   */\n    tag_304:\n        /* \"#utility.yul\":7348:7426   */\n      tag_305\n        /* \"#utility.yul\":7418:7425   */\n      dup6\n        /* \"#utility.yul\":7409:7415   */\n      dup3\n        /* \"#utility.yul\":7398:7407   */\n      dup7\n        /* \"#utility.yul\":7394:7416   */\n      add\n        /* \"#utility.yul\":7348:7426   */\n      tag_248\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":7338:7426   */\n      swap2\n      pop\n        /* \"#utility.yul\":7200:7436   */\n      pop\n        /* \"#utility.yul\":6883:7443   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7449:7709   */\n    tag_20:\n      0x00\n        /* \"#utility.yul\":7556:7558   */\n      0x20\n        /* \"#utility.yul\":7544:7553   */\n      dup3\n        /* \"#utility.yul\":7535:7542   */\n      dup5\n        /* \"#utility.yul\":7531:7554   */\n      sub\n        /* \"#utility.yul\":7527:7559   */\n      slt\n        /* \"#utility.yul\":7524:7526   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":7572:7573   */\n      0x00\n        /* \"#utility.yul\":7569:7570   */\n      dup1\n        /* \"#utility.yul\":7562:7574   */\n      revert\n        /* \"#utility.yul\":7524:7526   */\n    tag_307:\n        /* \"#utility.yul\":7615:7616   */\n      0x00\n        /* \"#utility.yul\":7640:7692   */\n      tag_308\n        /* \"#utility.yul\":7684:7691   */\n      dup5\n        /* \"#utility.yul\":7675:7681   */\n      dup3\n        /* \"#utility.yul\":7664:7673   */\n      dup6\n        /* \"#utility.yul\":7660:7682   */\n      add\n        /* \"#utility.yul\":7640:7692   */\n      tag_256\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":7630:7692   */\n      swap2\n      pop\n        /* \"#utility.yul\":7586:7702   */\n      pop\n        /* \"#utility.yul\":7514:7709   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7715:7997   */\n    tag_167:\n      0x00\n        /* \"#utility.yul\":7833:7835   */\n      0x20\n        /* \"#utility.yul\":7821:7830   */\n      dup3\n        /* \"#utility.yul\":7812:7819   */\n      dup5\n        /* \"#utility.yul\":7808:7831   */\n      sub\n        /* \"#utility.yul\":7804:7836   */\n      slt\n        /* \"#utility.yul\":7801:7803   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":7849:7850   */\n      0x00\n        /* \"#utility.yul\":7846:7847   */\n      dup1\n        /* \"#utility.yul\":7839:7851   */\n      revert\n        /* \"#utility.yul\":7801:7803   */\n    tag_310:\n        /* \"#utility.yul\":7892:7893   */\n      0x00\n        /* \"#utility.yul\":7917:7980   */\n      tag_311\n        /* \"#utility.yul\":7972:7979   */\n      dup5\n        /* \"#utility.yul\":7963:7969   */\n      dup3\n        /* \"#utility.yul\":7952:7961   */\n      dup6\n        /* \"#utility.yul\":7948:7970   */\n      add\n        /* \"#utility.yul\":7917:7980   */\n      tag_260\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":7907:7980   */\n      swap2\n      pop\n        /* \"#utility.yul\":7863:7990   */\n      pop\n        /* \"#utility.yul\":7791:7997   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8003:8265   */\n    tag_26:\n      0x00\n        /* \"#utility.yul\":8111:8113   */\n      0x20\n        /* \"#utility.yul\":8099:8108   */\n      dup3\n        /* \"#utility.yul\":8090:8097   */\n      dup5\n        /* \"#utility.yul\":8086:8109   */\n      sub\n        /* \"#utility.yul\":8082:8114   */\n      slt\n        /* \"#utility.yul\":8079:8081   */\n      iszero\n      tag_313\n      jumpi\n        /* \"#utility.yul\":8127:8128   */\n      0x00\n        /* \"#utility.yul\":8124:8125   */\n      dup1\n        /* \"#utility.yul\":8117:8129   */\n      revert\n        /* \"#utility.yul\":8079:8081   */\n    tag_313:\n        /* \"#utility.yul\":8170:8171   */\n      0x00\n        /* \"#utility.yul\":8195:8248   */\n      tag_314\n        /* \"#utility.yul\":8240:8247   */\n      dup5\n        /* \"#utility.yul\":8231:8237   */\n      dup3\n        /* \"#utility.yul\":8220:8229   */\n      dup6\n        /* \"#utility.yul\":8216:8238   */\n      add\n        /* \"#utility.yul\":8195:8248   */\n      tag_232\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":8185:8248   */\n      swap2\n      pop\n        /* \"#utility.yul\":8141:8258   */\n      pop\n        /* \"#utility.yul\":8069:8265   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8271:8450   */\n    tag_315:\n      0x00\n        /* \"#utility.yul\":8361:8407   */\n      tag_317\n        /* \"#utility.yul\":8403:8406   */\n      dup4\n        /* \"#utility.yul\":8395:8401   */\n      dup4\n        /* \"#utility.yul\":8361:8407   */\n      tag_318\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":8439:8443   */\n      0x20\n        /* \"#utility.yul\":8434:8437   */\n      dup4\n        /* \"#utility.yul\":8430:8444   */\n      add\n        /* \"#utility.yul\":8416:8444   */\n      swap1\n      pop\n        /* \"#utility.yul\":8351:8450   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8456:8574   */\n    tag_319:\n        /* \"#utility.yul\":8543:8567   */\n      tag_321\n        /* \"#utility.yul\":8561:8566   */\n      dup2\n        /* \"#utility.yul\":8543:8567   */\n      tag_322\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":8538:8541   */\n      dup3\n        /* \"#utility.yul\":8531:8568   */\n      mstore\n        /* \"#utility.yul\":8521:8574   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8610:9342   */\n    tag_323:\n      0x00\n        /* \"#utility.yul\":8758:8812   */\n      tag_325\n        /* \"#utility.yul\":8806:8811   */\n      dup3\n        /* \"#utility.yul\":8758:8812   */\n      tag_326\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":8828:8914   */\n      tag_327\n        /* \"#utility.yul\":8907:8913   */\n      dup2\n        /* \"#utility.yul\":8902:8905   */\n      dup6\n        /* \"#utility.yul\":8828:8914   */\n      tag_328\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":8821:8914   */\n      swap4\n      pop\n        /* \"#utility.yul\":8938:8994   */\n      tag_329\n        /* \"#utility.yul\":8988:8993   */\n      dup4\n        /* \"#utility.yul\":8938:8994   */\n      tag_330\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":9017:9024   */\n      dup1\n        /* \"#utility.yul\":9048:9049   */\n      0x00\n        /* \"#utility.yul\":9033:9317   */\n    tag_331:\n        /* \"#utility.yul\":9058:9064   */\n      dup4\n        /* \"#utility.yul\":9055:9056   */\n      dup2\n        /* \"#utility.yul\":9052:9065   */\n      lt\n        /* \"#utility.yul\":9033:9317   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":9134:9140   */\n      dup2\n        /* \"#utility.yul\":9128:9141   */\n      mload\n        /* \"#utility.yul\":9161:9224   */\n      tag_334\n        /* \"#utility.yul\":9220:9223   */\n      dup9\n        /* \"#utility.yul\":9205:9218   */\n      dup3\n        /* \"#utility.yul\":9161:9224   */\n      tag_315\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":9154:9224   */\n      swap8\n      pop\n        /* \"#utility.yul\":9247:9307   */\n      tag_335\n        /* \"#utility.yul\":9300:9306   */\n      dup4\n        /* \"#utility.yul\":9247:9307   */\n      tag_336\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":9237:9307   */\n      swap3\n      pop\n        /* \"#utility.yul\":9093:9317   */\n      pop\n        /* \"#utility.yul\":9080:9081   */\n      0x01\n        /* \"#utility.yul\":9077:9078   */\n      dup2\n        /* \"#utility.yul\":9073:9082   */\n      add\n        /* \"#utility.yul\":9068:9082   */\n      swap1\n      pop\n        /* \"#utility.yul\":9033:9317   */\n      jump(tag_331)\n    tag_333:\n        /* \"#utility.yul\":9037:9051   */\n      pop\n        /* \"#utility.yul\":9333:9336   */\n      dup6\n        /* \"#utility.yul\":9326:9336   */\n      swap4\n      pop\n        /* \"#utility.yul\":8734:9342   */\n      pop\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9348:9457   */\n    tag_337:\n        /* \"#utility.yul\":9429:9450   */\n      tag_339\n        /* \"#utility.yul\":9444:9449   */\n      dup2\n        /* \"#utility.yul\":9429:9450   */\n      tag_340\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":9424:9427   */\n      dup3\n        /* \"#utility.yul\":9417:9451   */\n      mstore\n        /* \"#utility.yul\":9407:9457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9463:9823   */\n    tag_341:\n      0x00\n        /* \"#utility.yul\":9577:9615   */\n      tag_343\n        /* \"#utility.yul\":9609:9614   */\n      dup3\n        /* \"#utility.yul\":9577:9615   */\n      tag_344\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":9631:9701   */\n      tag_345\n        /* \"#utility.yul\":9694:9700   */\n      dup2\n        /* \"#utility.yul\":9689:9692   */\n      dup6\n        /* \"#utility.yul\":9631:9701   */\n      tag_346\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":9624:9701   */\n      swap4\n      pop\n        /* \"#utility.yul\":9710:9762   */\n      tag_347\n        /* \"#utility.yul\":9755:9761   */\n      dup2\n        /* \"#utility.yul\":9750:9753   */\n      dup6\n        /* \"#utility.yul\":9743:9747   */\n      0x20\n        /* \"#utility.yul\":9736:9741   */\n      dup7\n        /* \"#utility.yul\":9732:9748   */\n      add\n        /* \"#utility.yul\":9710:9762   */\n      tag_348\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":9787:9816   */\n      tag_349\n        /* \"#utility.yul\":9809:9815   */\n      dup2\n        /* \"#utility.yul\":9787:9816   */\n      tag_350\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":9782:9785   */\n      dup5\n        /* \"#utility.yul\":9778:9817   */\n      add\n        /* \"#utility.yul\":9771:9817   */\n      swap2\n      pop\n        /* \"#utility.yul\":9553:9823   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9829:10193   */\n    tag_351:\n      0x00\n        /* \"#utility.yul\":9945:9984   */\n      tag_353\n        /* \"#utility.yul\":9978:9983   */\n      dup3\n        /* \"#utility.yul\":9945:9984   */\n      tag_354\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":10000:10071   */\n      tag_355\n        /* \"#utility.yul\":10064:10070   */\n      dup2\n        /* \"#utility.yul\":10059:10062   */\n      dup6\n        /* \"#utility.yul\":10000:10071   */\n      tag_356\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":9993:10071   */\n      swap4\n      pop\n        /* \"#utility.yul\":10080:10132   */\n      tag_357\n        /* \"#utility.yul\":10125:10131   */\n      dup2\n        /* \"#utility.yul\":10120:10123   */\n      dup6\n        /* \"#utility.yul\":10113:10117   */\n      0x20\n        /* \"#utility.yul\":10106:10111   */\n      dup7\n        /* \"#utility.yul\":10102:10118   */\n      add\n        /* \"#utility.yul\":10080:10132   */\n      tag_348\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":10157:10186   */\n      tag_358\n        /* \"#utility.yul\":10179:10185   */\n      dup2\n        /* \"#utility.yul\":10157:10186   */\n      tag_350\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":10152:10155   */\n      dup5\n        /* \"#utility.yul\":10148:10187   */\n      add\n        /* \"#utility.yul\":10141:10187   */\n      swap2\n      pop\n        /* \"#utility.yul\":9921:10193   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10199:10565   */\n    tag_359:\n      0x00\n        /* \"#utility.yul\":10362:10429   */\n      tag_361\n        /* \"#utility.yul\":10426:10428   */\n      0x34\n        /* \"#utility.yul\":10421:10424   */\n      dup4\n        /* \"#utility.yul\":10362:10429   */\n      tag_356\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":10355:10429   */\n      swap2\n      pop\n        /* \"#utility.yul\":10438:10531   */\n      tag_362\n        /* \"#utility.yul\":10527:10530   */\n      dup3\n        /* \"#utility.yul\":10438:10531   */\n      tag_363\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":10556:10558   */\n      0x40\n        /* \"#utility.yul\":10551:10554   */\n      dup3\n        /* \"#utility.yul\":10547:10559   */\n      add\n        /* \"#utility.yul\":10540:10559   */\n      swap1\n      pop\n        /* \"#utility.yul\":10345:10565   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10571:10937   */\n    tag_364:\n      0x00\n        /* \"#utility.yul\":10734:10801   */\n      tag_366\n        /* \"#utility.yul\":10798:10800   */\n      0x28\n        /* \"#utility.yul\":10793:10796   */\n      dup4\n        /* \"#utility.yul\":10734:10801   */\n      tag_356\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":10727:10801   */\n      swap2\n      pop\n        /* \"#utility.yul\":10810:10903   */\n      tag_367\n        /* \"#utility.yul\":10899:10902   */\n      dup3\n        /* \"#utility.yul\":10810:10903   */\n      tag_368\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":10928:10930   */\n      0x40\n        /* \"#utility.yul\":10923:10926   */\n      dup3\n        /* \"#utility.yul\":10919:10931   */\n      add\n        /* \"#utility.yul\":10912:10931   */\n      swap1\n      pop\n        /* \"#utility.yul\":10717:10937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10943:11309   */\n    tag_369:\n      0x00\n        /* \"#utility.yul\":11106:11173   */\n      tag_371\n        /* \"#utility.yul\":11170:11172   */\n      0x2b\n        /* \"#utility.yul\":11165:11168   */\n      dup4\n        /* \"#utility.yul\":11106:11173   */\n      tag_356\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":11099:11173   */\n      swap2\n      pop\n        /* \"#utility.yul\":11182:11275   */\n      tag_372\n        /* \"#utility.yul\":11271:11274   */\n      dup3\n        /* \"#utility.yul\":11182:11275   */\n      tag_373\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":11300:11302   */\n      0x40\n        /* \"#utility.yul\":11295:11298   */\n      dup3\n        /* \"#utility.yul\":11291:11303   */\n      add\n        /* \"#utility.yul\":11284:11303   */\n      swap1\n      pop\n        /* \"#utility.yul\":11089:11309   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11315:11681   */\n    tag_374:\n      0x00\n        /* \"#utility.yul\":11478:11545   */\n      tag_376\n        /* \"#utility.yul\":11542:11544   */\n      0x29\n        /* \"#utility.yul\":11537:11540   */\n      dup4\n        /* \"#utility.yul\":11478:11545   */\n      tag_356\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":11471:11545   */\n      swap2\n      pop\n        /* \"#utility.yul\":11554:11647   */\n      tag_377\n        /* \"#utility.yul\":11643:11646   */\n      dup3\n        /* \"#utility.yul\":11554:11647   */\n      tag_378\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":11672:11674   */\n      0x40\n        /* \"#utility.yul\":11667:11670   */\n      dup3\n        /* \"#utility.yul\":11663:11675   */\n      add\n        /* \"#utility.yul\":11656:11675   */\n      swap1\n      pop\n        /* \"#utility.yul\":11461:11681   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11687:12053   */\n    tag_379:\n      0x00\n        /* \"#utility.yul\":11850:11917   */\n      tag_381\n        /* \"#utility.yul\":11914:11916   */\n      0x25\n        /* \"#utility.yul\":11909:11912   */\n      dup4\n        /* \"#utility.yul\":11850:11917   */\n      tag_356\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":11843:11917   */\n      swap2\n      pop\n        /* \"#utility.yul\":11926:12019   */\n      tag_382\n        /* \"#utility.yul\":12015:12018   */\n      dup3\n        /* \"#utility.yul\":11926:12019   */\n      tag_383\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":12044:12046   */\n      0x40\n        /* \"#utility.yul\":12039:12042   */\n      dup3\n        /* \"#utility.yul\":12035:12047   */\n      add\n        /* \"#utility.yul\":12028:12047   */\n      swap1\n      pop\n        /* \"#utility.yul\":11833:12053   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12059:12425   */\n    tag_384:\n      0x00\n        /* \"#utility.yul\":12222:12289   */\n      tag_386\n        /* \"#utility.yul\":12286:12288   */\n      0x32\n        /* \"#utility.yul\":12281:12284   */\n      dup4\n        /* \"#utility.yul\":12222:12289   */\n      tag_356\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":12215:12289   */\n      swap2\n      pop\n        /* \"#utility.yul\":12298:12391   */\n      tag_387\n        /* \"#utility.yul\":12387:12390   */\n      dup3\n        /* \"#utility.yul\":12298:12391   */\n      tag_388\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":12416:12418   */\n      0x40\n        /* \"#utility.yul\":12411:12414   */\n      dup3\n        /* \"#utility.yul\":12407:12419   */\n      add\n        /* \"#utility.yul\":12400:12419   */\n      swap1\n      pop\n        /* \"#utility.yul\":12205:12425   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12431:12797   */\n    tag_389:\n      0x00\n        /* \"#utility.yul\":12594:12661   */\n      tag_391\n        /* \"#utility.yul\":12658:12660   */\n      0x2a\n        /* \"#utility.yul\":12653:12656   */\n      dup4\n        /* \"#utility.yul\":12594:12661   */\n      tag_356\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":12587:12661   */\n      swap2\n      pop\n        /* \"#utility.yul\":12670:12763   */\n      tag_392\n        /* \"#utility.yul\":12759:12762   */\n      dup3\n        /* \"#utility.yul\":12670:12763   */\n      tag_393\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":12788:12790   */\n      0x40\n        /* \"#utility.yul\":12783:12786   */\n      dup3\n        /* \"#utility.yul\":12779:12791   */\n      add\n        /* \"#utility.yul\":12772:12791   */\n      swap1\n      pop\n        /* \"#utility.yul\":12577:12797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12803:13169   */\n    tag_394:\n      0x00\n        /* \"#utility.yul\":12966:13033   */\n      tag_396\n        /* \"#utility.yul\":13030:13032   */\n      0x29\n        /* \"#utility.yul\":13025:13028   */\n      dup4\n        /* \"#utility.yul\":12966:13033   */\n      tag_356\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":12959:13033   */\n      swap2\n      pop\n        /* \"#utility.yul\":13042:13135   */\n      tag_397\n        /* \"#utility.yul\":13131:13134   */\n      dup3\n        /* \"#utility.yul\":13042:13135   */\n      tag_398\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":13160:13162   */\n      0x40\n        /* \"#utility.yul\":13155:13158   */\n      dup3\n        /* \"#utility.yul\":13151:13163   */\n      add\n        /* \"#utility.yul\":13144:13163   */\n      swap1\n      pop\n        /* \"#utility.yul\":12949:13169   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13175:13541   */\n    tag_399:\n      0x00\n        /* \"#utility.yul\":13338:13405   */\n      tag_401\n        /* \"#utility.yul\":13402:13404   */\n      0x29\n        /* \"#utility.yul\":13397:13400   */\n      dup4\n        /* \"#utility.yul\":13338:13405   */\n      tag_356\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":13331:13405   */\n      swap2\n      pop\n        /* \"#utility.yul\":13414:13507   */\n      tag_402\n        /* \"#utility.yul\":13503:13506   */\n      dup3\n        /* \"#utility.yul\":13414:13507   */\n      tag_403\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":13532:13534   */\n      0x40\n        /* \"#utility.yul\":13527:13530   */\n      dup3\n        /* \"#utility.yul\":13523:13535   */\n      add\n        /* \"#utility.yul\":13516:13535   */\n      swap1\n      pop\n        /* \"#utility.yul\":13321:13541   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13547:13913   */\n    tag_404:\n      0x00\n        /* \"#utility.yul\":13710:13777   */\n      tag_406\n        /* \"#utility.yul\":13774:13776   */\n      0x28\n        /* \"#utility.yul\":13769:13772   */\n      dup4\n        /* \"#utility.yul\":13710:13777   */\n      tag_356\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":13703:13777   */\n      swap2\n      pop\n        /* \"#utility.yul\":13786:13879   */\n      tag_407\n        /* \"#utility.yul\":13875:13878   */\n      dup3\n        /* \"#utility.yul\":13786:13879   */\n      tag_408\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":13904:13906   */\n      0x40\n        /* \"#utility.yul\":13899:13902   */\n      dup3\n        /* \"#utility.yul\":13895:13907   */\n      add\n        /* \"#utility.yul\":13888:13907   */\n      swap1\n      pop\n        /* \"#utility.yul\":13693:13913   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13919:14027   */\n    tag_318:\n        /* \"#utility.yul\":13996:14020   */\n      tag_410\n        /* \"#utility.yul\":14014:14019   */\n      dup2\n        /* \"#utility.yul\":13996:14020   */\n      tag_411\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":13991:13994   */\n      dup3\n        /* \"#utility.yul\":13984:14021   */\n      mstore\n        /* \"#utility.yul\":13974:14027   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14033:14151   */\n    tag_412:\n        /* \"#utility.yul\":14120:14144   */\n      tag_414\n        /* \"#utility.yul\":14138:14143   */\n      dup2\n        /* \"#utility.yul\":14120:14144   */\n      tag_411\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":14115:14118   */\n      dup3\n        /* \"#utility.yul\":14108:14145   */\n      mstore\n        /* \"#utility.yul\":14098:14151   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14157:15210   */\n    tag_163:\n      0x00\n        /* \"#utility.yul\":14518:14521   */\n      0xa0\n        /* \"#utility.yul\":14507:14516   */\n      dup3\n        /* \"#utility.yul\":14503:14522   */\n      add\n        /* \"#utility.yul\":14495:14522   */\n      swap1\n      pop\n        /* \"#utility.yul\":14532:14603   */\n      tag_416\n        /* \"#utility.yul\":14600:14601   */\n      0x00\n        /* \"#utility.yul\":14589:14598   */\n      dup4\n        /* \"#utility.yul\":14585:14602   */\n      add\n        /* \"#utility.yul\":14576:14582   */\n      dup9\n        /* \"#utility.yul\":14532:14603   */\n      tag_319\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":14613:14685   */\n      tag_417\n        /* \"#utility.yul\":14681:14683   */\n      0x20\n        /* \"#utility.yul\":14670:14679   */\n      dup4\n        /* \"#utility.yul\":14666:14684   */\n      add\n        /* \"#utility.yul\":14657:14663   */\n      dup8\n        /* \"#utility.yul\":14613:14685   */\n      tag_319\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":14732:14741   */\n      dup2\n        /* \"#utility.yul\":14726:14730   */\n      dup2\n        /* \"#utility.yul\":14722:14742   */\n      sub\n        /* \"#utility.yul\":14717:14719   */\n      0x40\n        /* \"#utility.yul\":14706:14715   */\n      dup4\n        /* \"#utility.yul\":14702:14720   */\n      add\n        /* \"#utility.yul\":14695:14743   */\n      mstore\n        /* \"#utility.yul\":14760:14868   */\n      tag_418\n        /* \"#utility.yul\":14863:14867   */\n      dup2\n        /* \"#utility.yul\":14854:14860   */\n      dup7\n        /* \"#utility.yul\":14760:14868   */\n      tag_323\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":14752:14868   */\n      swap1\n      pop\n        /* \"#utility.yul\":14915:14924   */\n      dup2\n        /* \"#utility.yul\":14909:14913   */\n      dup2\n        /* \"#utility.yul\":14905:14925   */\n      sub\n        /* \"#utility.yul\":14900:14902   */\n      0x60\n        /* \"#utility.yul\":14889:14898   */\n      dup4\n        /* \"#utility.yul\":14885:14903   */\n      add\n        /* \"#utility.yul\":14878:14926   */\n      mstore\n        /* \"#utility.yul\":14943:15051   */\n      tag_419\n        /* \"#utility.yul\":15046:15050   */\n      dup2\n        /* \"#utility.yul\":15037:15043   */\n      dup6\n        /* \"#utility.yul\":14943:15051   */\n      tag_323\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":14935:15051   */\n      swap1\n      pop\n        /* \"#utility.yul\":15099:15108   */\n      dup2\n        /* \"#utility.yul\":15093:15097   */\n      dup2\n        /* \"#utility.yul\":15089:15109   */\n      sub\n        /* \"#utility.yul\":15083:15086   */\n      0x80\n        /* \"#utility.yul\":15072:15081   */\n      dup4\n        /* \"#utility.yul\":15068:15087   */\n      add\n        /* \"#utility.yul\":15061:15110   */\n      mstore\n        /* \"#utility.yul\":15127:15203   */\n      tag_420\n        /* \"#utility.yul\":15198:15202   */\n      dup2\n        /* \"#utility.yul\":15189:15195   */\n      dup5\n        /* \"#utility.yul\":15127:15203   */\n      tag_341\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":15119:15203   */\n      swap1\n      pop\n        /* \"#utility.yul\":14485:15210   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15216:15967   */\n    tag_192:\n      0x00\n        /* \"#utility.yul\":15477:15480   */\n      0xa0\n        /* \"#utility.yul\":15466:15475   */\n      dup3\n        /* \"#utility.yul\":15462:15481   */\n      add\n        /* \"#utility.yul\":15454:15481   */\n      swap1\n      pop\n        /* \"#utility.yul\":15491:15562   */\n      tag_422\n        /* \"#utility.yul\":15559:15560   */\n      0x00\n        /* \"#utility.yul\":15548:15557   */\n      dup4\n        /* \"#utility.yul\":15544:15561   */\n      add\n        /* \"#utility.yul\":15535:15541   */\n      dup9\n        /* \"#utility.yul\":15491:15562   */\n      tag_319\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":15572:15644   */\n      tag_423\n        /* \"#utility.yul\":15640:15642   */\n      0x20\n        /* \"#utility.yul\":15629:15638   */\n      dup4\n        /* \"#utility.yul\":15625:15643   */\n      add\n        /* \"#utility.yul\":15616:15622   */\n      dup8\n        /* \"#utility.yul\":15572:15644   */\n      tag_319\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":15654:15726   */\n      tag_424\n        /* \"#utility.yul\":15722:15724   */\n      0x40\n        /* \"#utility.yul\":15711:15720   */\n      dup4\n        /* \"#utility.yul\":15707:15725   */\n      add\n        /* \"#utility.yul\":15698:15704   */\n      dup7\n        /* \"#utility.yul\":15654:15726   */\n      tag_412\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":15736:15808   */\n      tag_425\n        /* \"#utility.yul\":15804:15806   */\n      0x60\n        /* \"#utility.yul\":15793:15802   */\n      dup4\n        /* \"#utility.yul\":15789:15807   */\n      add\n        /* \"#utility.yul\":15780:15786   */\n      dup6\n        /* \"#utility.yul\":15736:15808   */\n      tag_412\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":15856:15865   */\n      dup2\n        /* \"#utility.yul\":15850:15854   */\n      dup2\n        /* \"#utility.yul\":15846:15866   */\n      sub\n        /* \"#utility.yul\":15840:15843   */\n      0x80\n        /* \"#utility.yul\":15829:15838   */\n      dup4\n        /* \"#utility.yul\":15825:15844   */\n      add\n        /* \"#utility.yul\":15818:15867   */\n      mstore\n        /* \"#utility.yul\":15884:15960   */\n      tag_426\n        /* \"#utility.yul\":15955:15959   */\n      dup2\n        /* \"#utility.yul\":15946:15952   */\n      dup5\n        /* \"#utility.yul\":15884:15960   */\n      tag_341\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":15876:15960   */\n      swap1\n      pop\n        /* \"#utility.yul\":15444:15967   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15973:16346   */\n    tag_39:\n      0x00\n        /* \"#utility.yul\":16154:16156   */\n      0x20\n        /* \"#utility.yul\":16143:16152   */\n      dup3\n        /* \"#utility.yul\":16139:16157   */\n      add\n        /* \"#utility.yul\":16131:16157   */\n      swap1\n      pop\n        /* \"#utility.yul\":16203:16212   */\n      dup2\n        /* \"#utility.yul\":16197:16201   */\n      dup2\n        /* \"#utility.yul\":16193:16213   */\n      sub\n        /* \"#utility.yul\":16189:16190   */\n      0x00\n        /* \"#utility.yul\":16178:16187   */\n      dup4\n        /* \"#utility.yul\":16174:16191   */\n      add\n        /* \"#utility.yul\":16167:16214   */\n      mstore\n        /* \"#utility.yul\":16231:16339   */\n      tag_428\n        /* \"#utility.yul\":16334:16338   */\n      dup2\n        /* \"#utility.yul\":16325:16331   */\n      dup5\n        /* \"#utility.yul\":16231:16339   */\n      tag_323\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":16223:16339   */\n      swap1\n      pop\n        /* \"#utility.yul\":16121:16346   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16352:16986   */\n    tag_134:\n      0x00\n        /* \"#utility.yul\":16611:16613   */\n      0x40\n        /* \"#utility.yul\":16600:16609   */\n      dup3\n        /* \"#utility.yul\":16596:16614   */\n      add\n        /* \"#utility.yul\":16588:16614   */\n      swap1\n      pop\n        /* \"#utility.yul\":16660:16669   */\n      dup2\n        /* \"#utility.yul\":16654:16658   */\n      dup2\n        /* \"#utility.yul\":16650:16670   */\n      sub\n        /* \"#utility.yul\":16646:16647   */\n      0x00\n        /* \"#utility.yul\":16635:16644   */\n      dup4\n        /* \"#utility.yul\":16631:16648   */\n      add\n        /* \"#utility.yul\":16624:16671   */\n      mstore\n        /* \"#utility.yul\":16688:16796   */\n      tag_430\n        /* \"#utility.yul\":16791:16795   */\n      dup2\n        /* \"#utility.yul\":16782:16788   */\n      dup6\n        /* \"#utility.yul\":16688:16796   */\n      tag_323\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":16680:16796   */\n      swap1\n      pop\n        /* \"#utility.yul\":16843:16852   */\n      dup2\n        /* \"#utility.yul\":16837:16841   */\n      dup2\n        /* \"#utility.yul\":16833:16853   */\n      sub\n        /* \"#utility.yul\":16828:16830   */\n      0x20\n        /* \"#utility.yul\":16817:16826   */\n      dup4\n        /* \"#utility.yul\":16813:16831   */\n      add\n        /* \"#utility.yul\":16806:16854   */\n      mstore\n        /* \"#utility.yul\":16871:16979   */\n      tag_431\n        /* \"#utility.yul\":16974:16978   */\n      dup2\n        /* \"#utility.yul\":16965:16971   */\n      dup5\n        /* \"#utility.yul\":16871:16979   */\n      tag_323\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":16863:16979   */\n      swap1\n      pop\n        /* \"#utility.yul\":16578:16986   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16992:17202   */\n    tag_23:\n      0x00\n        /* \"#utility.yul\":17117:17119   */\n      0x20\n        /* \"#utility.yul\":17106:17115   */\n      dup3\n        /* \"#utility.yul\":17102:17120   */\n      add\n        /* \"#utility.yul\":17094:17120   */\n      swap1\n      pop\n        /* \"#utility.yul\":17130:17195   */\n      tag_433\n        /* \"#utility.yul\":17192:17193   */\n      0x00\n        /* \"#utility.yul\":17181:17190   */\n      dup4\n        /* \"#utility.yul\":17177:17194   */\n      add\n        /* \"#utility.yul\":17168:17174   */\n      dup5\n        /* \"#utility.yul\":17130:17195   */\n      tag_337\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":17084:17202   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17208:17521   */\n    tag_29:\n      0x00\n        /* \"#utility.yul\":17359:17361   */\n      0x20\n        /* \"#utility.yul\":17348:17357   */\n      dup3\n        /* \"#utility.yul\":17344:17362   */\n      add\n        /* \"#utility.yul\":17336:17362   */\n      swap1\n      pop\n        /* \"#utility.yul\":17408:17417   */\n      dup2\n        /* \"#utility.yul\":17402:17406   */\n      dup2\n        /* \"#utility.yul\":17398:17418   */\n      sub\n        /* \"#utility.yul\":17394:17395   */\n      0x00\n        /* \"#utility.yul\":17383:17392   */\n      dup4\n        /* \"#utility.yul\":17379:17396   */\n      add\n        /* \"#utility.yul\":17372:17419   */\n      mstore\n        /* \"#utility.yul\":17436:17514   */\n      tag_435\n        /* \"#utility.yul\":17509:17513   */\n      dup2\n        /* \"#utility.yul\":17500:17506   */\n      dup5\n        /* \"#utility.yul\":17436:17514   */\n      tag_351\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":17428:17514   */\n      swap1\n      pop\n        /* \"#utility.yul\":17326:17521   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17527:17946   */\n    tag_179:\n      0x00\n        /* \"#utility.yul\":17731:17733   */\n      0x20\n        /* \"#utility.yul\":17720:17729   */\n      dup3\n        /* \"#utility.yul\":17716:17734   */\n      add\n        /* \"#utility.yul\":17708:17734   */\n      swap1\n      pop\n        /* \"#utility.yul\":17780:17789   */\n      dup2\n        /* \"#utility.yul\":17774:17778   */\n      dup2\n        /* \"#utility.yul\":17770:17790   */\n      sub\n        /* \"#utility.yul\":17766:17767   */\n      0x00\n        /* \"#utility.yul\":17755:17764   */\n      dup4\n        /* \"#utility.yul\":17751:17768   */\n      add\n        /* \"#utility.yul\":17744:17791   */\n      mstore\n        /* \"#utility.yul\":17808:17939   */\n      tag_437\n        /* \"#utility.yul\":17934:17938   */\n      dup2\n        /* \"#utility.yul\":17808:17939   */\n      tag_359\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":17800:17939   */\n      swap1\n      pop\n        /* \"#utility.yul\":17698:17946   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17952:18371   */\n    tag_183:\n      0x00\n        /* \"#utility.yul\":18156:18158   */\n      0x20\n        /* \"#utility.yul\":18145:18154   */\n      dup3\n        /* \"#utility.yul\":18141:18159   */\n      add\n        /* \"#utility.yul\":18133:18159   */\n      swap1\n      pop\n        /* \"#utility.yul\":18205:18214   */\n      dup2\n        /* \"#utility.yul\":18199:18203   */\n      dup2\n        /* \"#utility.yul\":18195:18215   */\n      sub\n        /* \"#utility.yul\":18191:18192   */\n      0x00\n        /* \"#utility.yul\":18180:18189   */\n      dup4\n        /* \"#utility.yul\":18176:18193   */\n      add\n        /* \"#utility.yul\":18169:18216   */\n      mstore\n        /* \"#utility.yul\":18233:18364   */\n      tag_439\n        /* \"#utility.yul\":18359:18363   */\n      dup2\n        /* \"#utility.yul\":18233:18364   */\n      tag_364\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":18225:18364   */\n      swap1\n      pop\n        /* \"#utility.yul\":18123:18371   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18377:18796   */\n    tag_56:\n      0x00\n        /* \"#utility.yul\":18581:18583   */\n      0x20\n        /* \"#utility.yul\":18570:18579   */\n      dup3\n        /* \"#utility.yul\":18566:18584   */\n      add\n        /* \"#utility.yul\":18558:18584   */\n      swap1\n      pop\n        /* \"#utility.yul\":18630:18639   */\n      dup2\n        /* \"#utility.yul\":18624:18628   */\n      dup2\n        /* \"#utility.yul\":18620:18640   */\n      sub\n        /* \"#utility.yul\":18616:18617   */\n      0x00\n        /* \"#utility.yul\":18605:18614   */\n      dup4\n        /* \"#utility.yul\":18601:18618   */\n      add\n        /* \"#utility.yul\":18594:18641   */\n      mstore\n        /* \"#utility.yul\":18658:18789   */\n      tag_441\n        /* \"#utility.yul\":18784:18788   */\n      dup2\n        /* \"#utility.yul\":18658:18789   */\n      tag_369\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":18650:18789   */\n      swap1\n      pop\n        /* \"#utility.yul\":18548:18796   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18802:19221   */\n    tag_107:\n      0x00\n        /* \"#utility.yul\":19006:19008   */\n      0x20\n        /* \"#utility.yul\":18995:19004   */\n      dup3\n        /* \"#utility.yul\":18991:19009   */\n      add\n        /* \"#utility.yul\":18983:19009   */\n      swap1\n      pop\n        /* \"#utility.yul\":19055:19064   */\n      dup2\n        /* \"#utility.yul\":19049:19053   */\n      dup2\n        /* \"#utility.yul\":19045:19065   */\n      sub\n        /* \"#utility.yul\":19041:19042   */\n      0x00\n        /* \"#utility.yul\":19030:19039   */\n      dup4\n        /* \"#utility.yul\":19026:19043   */\n      add\n        /* \"#utility.yul\":19019:19066   */\n      mstore\n        /* \"#utility.yul\":19083:19214   */\n      tag_443\n        /* \"#utility.yul\":19209:19213   */\n      dup2\n        /* \"#utility.yul\":19083:19214   */\n      tag_374\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":19075:19214   */\n      swap1\n      pop\n        /* \"#utility.yul\":18973:19221   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19227:19646   */\n    tag_118:\n      0x00\n        /* \"#utility.yul\":19431:19433   */\n      0x20\n        /* \"#utility.yul\":19420:19429   */\n      dup3\n        /* \"#utility.yul\":19416:19434   */\n      add\n        /* \"#utility.yul\":19408:19434   */\n      swap1\n      pop\n        /* \"#utility.yul\":19480:19489   */\n      dup2\n        /* \"#utility.yul\":19474:19478   */\n      dup2\n        /* \"#utility.yul\":19470:19490   */\n      sub\n        /* \"#utility.yul\":19466:19467   */\n      0x00\n        /* \"#utility.yul\":19455:19464   */\n      dup4\n        /* \"#utility.yul\":19451:19468   */\n      add\n        /* \"#utility.yul\":19444:19491   */\n      mstore\n        /* \"#utility.yul\":19508:19639   */\n      tag_445\n        /* \"#utility.yul\":19634:19638   */\n      dup2\n        /* \"#utility.yul\":19508:19639   */\n      tag_379\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":19500:19639   */\n      swap1\n      pop\n        /* \"#utility.yul\":19398:19646   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19652:20071   */\n    tag_77:\n      0x00\n        /* \"#utility.yul\":19856:19858   */\n      0x20\n        /* \"#utility.yul\":19845:19854   */\n      dup3\n        /* \"#utility.yul\":19841:19859   */\n      add\n        /* \"#utility.yul\":19833:19859   */\n      swap1\n      pop\n        /* \"#utility.yul\":19905:19914   */\n      dup2\n        /* \"#utility.yul\":19899:19903   */\n      dup2\n        /* \"#utility.yul\":19895:19915   */\n      sub\n        /* \"#utility.yul\":19891:19892   */\n      0x00\n        /* \"#utility.yul\":19880:19889   */\n      dup4\n        /* \"#utility.yul\":19876:19893   */\n      add\n        /* \"#utility.yul\":19869:19916   */\n      mstore\n        /* \"#utility.yul\":19933:20064   */\n      tag_447\n        /* \"#utility.yul\":20059:20063   */\n      dup2\n        /* \"#utility.yul\":19933:20064   */\n      tag_384\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":19925:20064   */\n      swap1\n      pop\n        /* \"#utility.yul\":19823:20071   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20077:20496   */\n    tag_129:\n      0x00\n        /* \"#utility.yul\":20281:20283   */\n      0x20\n        /* \"#utility.yul\":20270:20279   */\n      dup3\n        /* \"#utility.yul\":20266:20284   */\n      add\n        /* \"#utility.yul\":20258:20284   */\n      swap1\n      pop\n        /* \"#utility.yul\":20330:20339   */\n      dup2\n        /* \"#utility.yul\":20324:20328   */\n      dup2\n        /* \"#utility.yul\":20320:20340   */\n      sub\n        /* \"#utility.yul\":20316:20317   */\n      0x00\n        /* \"#utility.yul\":20305:20314   */\n      dup4\n        /* \"#utility.yul\":20301:20318   */\n      add\n        /* \"#utility.yul\":20294:20341   */\n      mstore\n        /* \"#utility.yul\":20358:20489   */\n      tag_449\n        /* \"#utility.yul\":20484:20488   */\n      dup2\n        /* \"#utility.yul\":20358:20489   */\n      tag_389\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":20350:20489   */\n      swap1\n      pop\n        /* \"#utility.yul\":20248:20496   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20502:20921   */\n    tag_140:\n      0x00\n        /* \"#utility.yul\":20706:20708   */\n      0x20\n        /* \"#utility.yul\":20695:20704   */\n      dup3\n        /* \"#utility.yul\":20691:20709   */\n      add\n        /* \"#utility.yul\":20683:20709   */\n      swap1\n      pop\n        /* \"#utility.yul\":20755:20764   */\n      dup2\n        /* \"#utility.yul\":20749:20753   */\n      dup2\n        /* \"#utility.yul\":20745:20765   */\n      sub\n        /* \"#utility.yul\":20741:20742   */\n      0x00\n        /* \"#utility.yul\":20730:20739   */\n      dup4\n        /* \"#utility.yul\":20726:20743   */\n      add\n        /* \"#utility.yul\":20719:20766   */\n      mstore\n        /* \"#utility.yul\":20783:20914   */\n      tag_451\n        /* \"#utility.yul\":20909:20913   */\n      dup2\n        /* \"#utility.yul\":20783:20914   */\n      tag_394\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":20775:20914   */\n      swap1\n      pop\n        /* \"#utility.yul\":20673:20921   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20927:21346   */\n    tag_83:\n      0x00\n        /* \"#utility.yul\":21131:21133   */\n      0x20\n        /* \"#utility.yul\":21120:21129   */\n      dup3\n        /* \"#utility.yul\":21116:21134   */\n      add\n        /* \"#utility.yul\":21108:21134   */\n      swap1\n      pop\n        /* \"#utility.yul\":21180:21189   */\n      dup2\n        /* \"#utility.yul\":21174:21178   */\n      dup2\n        /* \"#utility.yul\":21170:21190   */\n      sub\n        /* \"#utility.yul\":21166:21167   */\n      0x00\n        /* \"#utility.yul\":21155:21164   */\n      dup4\n        /* \"#utility.yul\":21151:21168   */\n      add\n        /* \"#utility.yul\":21144:21191   */\n      mstore\n        /* \"#utility.yul\":21208:21339   */\n      tag_453\n        /* \"#utility.yul\":21334:21338   */\n      dup2\n        /* \"#utility.yul\":21208:21339   */\n      tag_399\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":21200:21339   */\n      swap1\n      pop\n        /* \"#utility.yul\":21098:21346   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21352:21771   */\n    tag_115:\n      0x00\n        /* \"#utility.yul\":21556:21558   */\n      0x20\n        /* \"#utility.yul\":21545:21554   */\n      dup3\n        /* \"#utility.yul\":21541:21559   */\n      add\n        /* \"#utility.yul\":21533:21559   */\n      swap1\n      pop\n        /* \"#utility.yul\":21605:21614   */\n      dup2\n        /* \"#utility.yul\":21599:21603   */\n      dup2\n        /* \"#utility.yul\":21595:21615   */\n      sub\n        /* \"#utility.yul\":21591:21592   */\n      0x00\n        /* \"#utility.yul\":21580:21589   */\n      dup4\n        /* \"#utility.yul\":21576:21593   */\n      add\n        /* \"#utility.yul\":21569:21616   */\n      mstore\n        /* \"#utility.yul\":21633:21764   */\n      tag_455\n        /* \"#utility.yul\":21759:21763   */\n      dup2\n        /* \"#utility.yul\":21633:21764   */\n      tag_404\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":21625:21764   */\n      swap1\n      pop\n        /* \"#utility.yul\":21523:21771   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21777:21999   */\n    tag_17:\n      0x00\n        /* \"#utility.yul\":21908:21910   */\n      0x20\n        /* \"#utility.yul\":21897:21906   */\n      dup3\n        /* \"#utility.yul\":21893:21911   */\n      add\n        /* \"#utility.yul\":21885:21911   */\n      swap1\n      pop\n        /* \"#utility.yul\":21921:21992   */\n      tag_457\n        /* \"#utility.yul\":21989:21990   */\n      0x00\n        /* \"#utility.yul\":21978:21987   */\n      dup4\n        /* \"#utility.yul\":21974:21991   */\n      add\n        /* \"#utility.yul\":21965:21971   */\n      dup5\n        /* \"#utility.yul\":21921:21992   */\n      tag_412\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":21875:21999   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22005:22337   */\n    tag_154:\n      0x00\n        /* \"#utility.yul\":22164:22166   */\n      0x40\n        /* \"#utility.yul\":22153:22162   */\n      dup3\n        /* \"#utility.yul\":22149:22167   */\n      add\n        /* \"#utility.yul\":22141:22167   */\n      swap1\n      pop\n        /* \"#utility.yul\":22177:22248   */\n      tag_459\n        /* \"#utility.yul\":22245:22246   */\n      0x00\n        /* \"#utility.yul\":22234:22243   */\n      dup4\n        /* \"#utility.yul\":22230:22247   */\n      add\n        /* \"#utility.yul\":22221:22227   */\n      dup6\n        /* \"#utility.yul\":22177:22248   */\n      tag_412\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":22258:22330   */\n      tag_460\n        /* \"#utility.yul\":22326:22328   */\n      0x20\n        /* \"#utility.yul\":22315:22324   */\n      dup4\n        /* \"#utility.yul\":22311:22329   */\n      add\n        /* \"#utility.yul\":22302:22308   */\n      dup5\n        /* \"#utility.yul\":22258:22330   */\n      tag_412\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":22131:22337   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22343:22472   */\n    tag_215:\n      0x00\n        /* \"#utility.yul\":22404:22424   */\n      tag_462\n      tag_463\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":22394:22424   */\n      swap1\n      pop\n        /* \"#utility.yul\":22433:22466   */\n      tag_464\n        /* \"#utility.yul\":22461:22465   */\n      dup3\n        /* \"#utility.yul\":22453:22459   */\n      dup3\n        /* \"#utility.yul\":22433:22466   */\n      tag_465\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":22384:22472   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22478:22553   */\n    tag_463:\n      0x00\n        /* \"#utility.yul\":22544:22546   */\n      0x40\n        /* \"#utility.yul\":22538:22547   */\n      mload\n        /* \"#utility.yul\":22528:22547   */\n      swap1\n      pop\n        /* \"#utility.yul\":22518:22553   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":22559:22870   */\n    tag_214:\n      0x00\n        /* \"#utility.yul\":22726:22744   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":22718:22724   */\n      dup3\n        /* \"#utility.yul\":22715:22745   */\n      gt\n        /* \"#utility.yul\":22712:22714   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":22748:22766   */\n      tag_469\n      tag_470\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":22712:22714   */\n    tag_468:\n        /* \"#utility.yul\":22798:22802   */\n      0x20\n        /* \"#utility.yul\":22790:22796   */\n      dup3\n        /* \"#utility.yul\":22786:22803   */\n      mul\n        /* \"#utility.yul\":22778:22803   */\n      swap1\n      pop\n        /* \"#utility.yul\":22858:22862   */\n      0x20\n        /* \"#utility.yul\":22852:22856   */\n      dup2\n        /* \"#utility.yul\":22848:22863   */\n      add\n        /* \"#utility.yul\":22840:22863   */\n      swap1\n      pop\n        /* \"#utility.yul\":22641:22870   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22876:23187   */\n    tag_226:\n      0x00\n        /* \"#utility.yul\":23043:23061   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":23035:23041   */\n      dup3\n        /* \"#utility.yul\":23032:23062   */\n      gt\n        /* \"#utility.yul\":23029:23031   */\n      iszero\n      tag_472\n      jumpi\n        /* \"#utility.yul\":23065:23083   */\n      tag_473\n      tag_470\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":23029:23031   */\n    tag_472:\n        /* \"#utility.yul\":23115:23119   */\n      0x20\n        /* \"#utility.yul\":23107:23113   */\n      dup3\n        /* \"#utility.yul\":23103:23120   */\n      mul\n        /* \"#utility.yul\":23095:23120   */\n      swap1\n      pop\n        /* \"#utility.yul\":23175:23179   */\n      0x20\n        /* \"#utility.yul\":23169:23173   */\n      dup2\n        /* \"#utility.yul\":23165:23180   */\n      add\n        /* \"#utility.yul\":23157:23180   */\n      swap1\n      pop\n        /* \"#utility.yul\":22958:23187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23193:23500   */\n    tag_237:\n      0x00\n        /* \"#utility.yul\":23344:23362   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":23336:23342   */\n      dup3\n        /* \"#utility.yul\":23333:23363   */\n      gt\n        /* \"#utility.yul\":23330:23332   */\n      iszero\n      tag_475\n      jumpi\n        /* \"#utility.yul\":23366:23384   */\n      tag_476\n      tag_470\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":23330:23332   */\n    tag_475:\n        /* \"#utility.yul\":23404:23433   */\n      tag_477\n        /* \"#utility.yul\":23426:23432   */\n      dup3\n        /* \"#utility.yul\":23404:23433   */\n      tag_350\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":23396:23433   */\n      swap1\n      pop\n        /* \"#utility.yul\":23488:23492   */\n      0x20\n        /* \"#utility.yul\":23482:23486   */\n      dup2\n        /* \"#utility.yul\":23478:23493   */\n      add\n        /* \"#utility.yul\":23470:23493   */\n      swap1\n      pop\n        /* \"#utility.yul\":23259:23500   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23506:23638   */\n    tag_330:\n      0x00\n        /* \"#utility.yul\":23596:23599   */\n      dup2\n        /* \"#utility.yul\":23588:23599   */\n      swap1\n      pop\n        /* \"#utility.yul\":23626:23630   */\n      0x20\n        /* \"#utility.yul\":23621:23624   */\n      dup3\n        /* \"#utility.yul\":23617:23631   */\n      add\n        /* \"#utility.yul\":23609:23631   */\n      swap1\n      pop\n        /* \"#utility.yul\":23578:23638   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23644:23758   */\n    tag_326:\n      0x00\n        /* \"#utility.yul\":23745:23750   */\n      dup2\n        /* \"#utility.yul\":23739:23751   */\n      mload\n        /* \"#utility.yul\":23729:23751   */\n      swap1\n      pop\n        /* \"#utility.yul\":23718:23758   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23764:23862   */\n    tag_344:\n      0x00\n        /* \"#utility.yul\":23849:23854   */\n      dup2\n        /* \"#utility.yul\":23843:23855   */\n      mload\n        /* \"#utility.yul\":23833:23855   */\n      swap1\n      pop\n        /* \"#utility.yul\":23822:23862   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23868:23967   */\n    tag_354:\n      0x00\n        /* \"#utility.yul\":23954:23959   */\n      dup2\n        /* \"#utility.yul\":23948:23960   */\n      mload\n        /* \"#utility.yul\":23938:23960   */\n      swap1\n      pop\n        /* \"#utility.yul\":23927:23967   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23973:24086   */\n    tag_336:\n      0x00\n        /* \"#utility.yul\":24075:24079   */\n      0x20\n        /* \"#utility.yul\":24070:24073   */\n      dup3\n        /* \"#utility.yul\":24066:24080   */\n      add\n        /* \"#utility.yul\":24058:24080   */\n      swap1\n      pop\n        /* \"#utility.yul\":24048:24086   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24092:24276   */\n    tag_328:\n      0x00\n        /* \"#utility.yul\":24225:24231   */\n      dup3\n        /* \"#utility.yul\":24220:24223   */\n      dup3\n        /* \"#utility.yul\":24213:24232   */\n      mstore\n        /* \"#utility.yul\":24265:24269   */\n      0x20\n        /* \"#utility.yul\":24260:24263   */\n      dup3\n        /* \"#utility.yul\":24256:24270   */\n      add\n        /* \"#utility.yul\":24241:24270   */\n      swap1\n      pop\n        /* \"#utility.yul\":24203:24276   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24282:24450   */\n    tag_346:\n      0x00\n        /* \"#utility.yul\":24399:24405   */\n      dup3\n        /* \"#utility.yul\":24394:24397   */\n      dup3\n        /* \"#utility.yul\":24387:24406   */\n      mstore\n        /* \"#utility.yul\":24439:24443   */\n      0x20\n        /* \"#utility.yul\":24434:24437   */\n      dup3\n        /* \"#utility.yul\":24430:24444   */\n      add\n        /* \"#utility.yul\":24415:24444   */\n      swap1\n      pop\n        /* \"#utility.yul\":24377:24450   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24456:24625   */\n    tag_356:\n      0x00\n        /* \"#utility.yul\":24574:24580   */\n      dup3\n        /* \"#utility.yul\":24569:24572   */\n      dup3\n        /* \"#utility.yul\":24562:24581   */\n      mstore\n        /* \"#utility.yul\":24614:24618   */\n      0x20\n        /* \"#utility.yul\":24609:24612   */\n      dup3\n        /* \"#utility.yul\":24605:24619   */\n      add\n        /* \"#utility.yul\":24590:24619   */\n      swap1\n      pop\n        /* \"#utility.yul\":24552:24625   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24631:24936   */\n    tag_131:\n      0x00\n        /* \"#utility.yul\":24690:24710   */\n      tag_487\n        /* \"#utility.yul\":24708:24709   */\n      dup3\n        /* \"#utility.yul\":24690:24710   */\n      tag_411\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":24685:24710   */\n      swap2\n      pop\n        /* \"#utility.yul\":24724:24744   */\n      tag_488\n        /* \"#utility.yul\":24742:24743   */\n      dup4\n        /* \"#utility.yul\":24724:24744   */\n      tag_411\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":24719:24744   */\n      swap3\n      pop\n        /* \"#utility.yul\":24878:24879   */\n      dup3\n        /* \"#utility.yul\":24810:24876   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":24806:24880   */\n      sub\n        /* \"#utility.yul\":24803:24804   */\n      dup3\n        /* \"#utility.yul\":24800:24881   */\n      gt\n        /* \"#utility.yul\":24797:24799   */\n      iszero\n      tag_489\n      jumpi\n        /* \"#utility.yul\":24884:24902   */\n      tag_490\n      tag_491\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":24797:24799   */\n    tag_489:\n        /* \"#utility.yul\":24928:24929   */\n      dup3\n        /* \"#utility.yul\":24925:24926   */\n      dup3\n        /* \"#utility.yul\":24921:24930   */\n      add\n        /* \"#utility.yul\":24914:24930   */\n      swap1\n      pop\n        /* \"#utility.yul\":24675:24936   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24942:25038   */\n    tag_322:\n      0x00\n        /* \"#utility.yul\":25008:25032   */\n      tag_493\n        /* \"#utility.yul\":25026:25031   */\n      dup3\n        /* \"#utility.yul\":25008:25032   */\n      tag_494\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":24997:25032   */\n      swap1\n      pop\n        /* \"#utility.yul\":24987:25038   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25044:25134   */\n    tag_340:\n      0x00\n        /* \"#utility.yul\":25121:25126   */\n      dup2\n        /* \"#utility.yul\":25114:25127   */\n      iszero\n        /* \"#utility.yul\":25107:25128   */\n      iszero\n        /* \"#utility.yul\":25096:25128   */\n      swap1\n      pop\n        /* \"#utility.yul\":25086:25134   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25140:25289   */\n    tag_496:\n      0x00\n        /* \"#utility.yul\":25216:25282   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":25209:25214   */\n      dup3\n        /* \"#utility.yul\":25205:25283   */\n      and\n        /* \"#utility.yul\":25194:25283   */\n      swap1\n      pop\n        /* \"#utility.yul\":25184:25289   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25295:25421   */\n    tag_494:\n      0x00\n        /* \"#utility.yul\":25372:25414   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":25365:25370   */\n      dup3\n        /* \"#utility.yul\":25361:25415   */\n      and\n        /* \"#utility.yul\":25350:25415   */\n      swap1\n      pop\n        /* \"#utility.yul\":25340:25421   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25427:25504   */\n    tag_411:\n      0x00\n        /* \"#utility.yul\":25493:25498   */\n      dup2\n        /* \"#utility.yul\":25482:25498   */\n      swap1\n      pop\n        /* \"#utility.yul\":25472:25504   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25510:25664   */\n    tag_240:\n        /* \"#utility.yul\":25594:25600   */\n      dup3\n        /* \"#utility.yul\":25589:25592   */\n      dup2\n        /* \"#utility.yul\":25584:25587   */\n      dup4\n        /* \"#utility.yul\":25571:25601   */\n      calldatacopy\n        /* \"#utility.yul\":25656:25657   */\n      0x00\n        /* \"#utility.yul\":25647:25653   */\n      dup4\n        /* \"#utility.yul\":25642:25645   */\n      dup4\n        /* \"#utility.yul\":25638:25654   */\n      add\n        /* \"#utility.yul\":25631:25658   */\n      mstore\n        /* \"#utility.yul\":25561:25664   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25670:25977   */\n    tag_348:\n        /* \"#utility.yul\":25738:25739   */\n      0x00\n        /* \"#utility.yul\":25748:25861   */\n    tag_502:\n        /* \"#utility.yul\":25762:25768   */\n      dup4\n        /* \"#utility.yul\":25759:25760   */\n      dup2\n        /* \"#utility.yul\":25756:25769   */\n      lt\n        /* \"#utility.yul\":25748:25861   */\n      iszero\n      tag_504\n      jumpi\n        /* \"#utility.yul\":25847:25848   */\n      dup1\n        /* \"#utility.yul\":25842:25845   */\n      dup3\n        /* \"#utility.yul\":25838:25849   */\n      add\n        /* \"#utility.yul\":25832:25850   */\n      mload\n        /* \"#utility.yul\":25828:25829   */\n      dup2\n        /* \"#utility.yul\":25823:25826   */\n      dup5\n        /* \"#utility.yul\":25819:25830   */\n      add\n        /* \"#utility.yul\":25812:25851   */\n      mstore\n        /* \"#utility.yul\":25784:25786   */\n      0x20\n        /* \"#utility.yul\":25781:25782   */\n      dup2\n        /* \"#utility.yul\":25777:25787   */\n      add\n        /* \"#utility.yul\":25772:25787   */\n      swap1\n      pop\n        /* \"#utility.yul\":25748:25861   */\n      jump(tag_502)\n    tag_504:\n        /* \"#utility.yul\":25879:25885   */\n      dup4\n        /* \"#utility.yul\":25876:25877   */\n      dup2\n        /* \"#utility.yul\":25873:25886   */\n      gt\n        /* \"#utility.yul\":25870:25872   */\n      iszero\n      tag_505\n      jumpi\n        /* \"#utility.yul\":25959:25960   */\n      0x00\n        /* \"#utility.yul\":25950:25956   */\n      dup5\n        /* \"#utility.yul\":25945:25948   */\n      dup5\n        /* \"#utility.yul\":25941:25957   */\n      add\n        /* \"#utility.yul\":25934:25961   */\n      mstore\n        /* \"#utility.yul\":25870:25872   */\n    tag_505:\n        /* \"#utility.yul\":25719:25977   */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25983:26303   */\n    tag_64:\n      0x00\n        /* \"#utility.yul\":26064:26065   */\n      0x02\n        /* \"#utility.yul\":26058:26062   */\n      dup3\n        /* \"#utility.yul\":26054:26066   */\n      div\n        /* \"#utility.yul\":26044:26066   */\n      swap1\n      pop\n        /* \"#utility.yul\":26111:26112   */\n      0x01\n        /* \"#utility.yul\":26105:26109   */\n      dup3\n        /* \"#utility.yul\":26101:26113   */\n      and\n        /* \"#utility.yul\":26132:26150   */\n      dup1\n        /* \"#utility.yul\":26122:26124   */\n      tag_507\n      jumpi\n        /* \"#utility.yul\":26188:26192   */\n      0x7f\n        /* \"#utility.yul\":26180:26186   */\n      dup3\n        /* \"#utility.yul\":26176:26193   */\n      and\n        /* \"#utility.yul\":26166:26193   */\n      swap2\n      pop\n        /* \"#utility.yul\":26122:26124   */\n    tag_507:\n        /* \"#utility.yul\":26250:26252   */\n      0x20\n        /* \"#utility.yul\":26242:26248   */\n      dup3\n        /* \"#utility.yul\":26239:26253   */\n      lt\n        /* \"#utility.yul\":26219:26237   */\n      dup2\n        /* \"#utility.yul\":26216:26254   */\n      eq\n        /* \"#utility.yul\":26213:26215   */\n      iszero\n      tag_508\n      jumpi\n        /* \"#utility.yul\":26269:26287   */\n      tag_509\n      tag_510\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":26213:26215   */\n    tag_508:\n        /* \"#utility.yul\":26034:26303   */\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26309:26590   */\n    tag_465:\n        /* \"#utility.yul\":26392:26419   */\n      tag_512\n        /* \"#utility.yul\":26414:26418   */\n      dup3\n        /* \"#utility.yul\":26392:26419   */\n      tag_350\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":26384:26390   */\n      dup2\n        /* \"#utility.yul\":26380:26420   */\n      add\n        /* \"#utility.yul\":26522:26528   */\n      dup2\n        /* \"#utility.yul\":26510:26520   */\n      dup2\n        /* \"#utility.yul\":26507:26529   */\n      lt\n        /* \"#utility.yul\":26486:26504   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":26474:26484   */\n      dup3\n        /* \"#utility.yul\":26471:26505   */\n      gt\n        /* \"#utility.yul\":26468:26530   */\n      or\n        /* \"#utility.yul\":26465:26467   */\n      iszero\n      tag_513\n      jumpi\n        /* \"#utility.yul\":26533:26551   */\n      tag_514\n      tag_470\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":26465:26467   */\n    tag_513:\n        /* \"#utility.yul\":26573:26583   */\n      dup1\n        /* \"#utility.yul\":26569:26571   */\n      0x40\n        /* \"#utility.yul\":26562:26584   */\n      mstore\n        /* \"#utility.yul\":26352:26590   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26596:26829   */\n    tag_94:\n      0x00\n        /* \"#utility.yul\":26658:26682   */\n      tag_516\n        /* \"#utility.yul\":26676:26681   */\n      dup3\n        /* \"#utility.yul\":26658:26682   */\n      tag_411\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":26649:26682   */\n      swap2\n      pop\n        /* \"#utility.yul\":26704:26770   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":26697:26702   */\n      dup3\n        /* \"#utility.yul\":26694:26771   */\n      eq\n        /* \"#utility.yul\":26691:26693   */\n      iszero\n      tag_517\n      jumpi\n        /* \"#utility.yul\":26774:26792   */\n      tag_518\n      tag_491\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":26691:26693   */\n    tag_517:\n        /* \"#utility.yul\":26821:26822   */\n      0x01\n        /* \"#utility.yul\":26814:26819   */\n      dup3\n        /* \"#utility.yul\":26810:26823   */\n      add\n        /* \"#utility.yul\":26803:26823   */\n      swap1\n      pop\n        /* \"#utility.yul\":26639:26829   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26835:27015   */\n    tag_491:\n        /* \"#utility.yul\":26883:26960   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":26880:26881   */\n      0x00\n        /* \"#utility.yul\":26873:26961   */\n      mstore\n        /* \"#utility.yul\":26980:26984   */\n      0x11\n        /* \"#utility.yul\":26977:26978   */\n      0x04\n        /* \"#utility.yul\":26970:26985   */\n      mstore\n        /* \"#utility.yul\":27004:27008   */\n      0x24\n        /* \"#utility.yul\":27001:27002   */\n      0x00\n        /* \"#utility.yul\":26994:27009   */\n      revert\n        /* \"#utility.yul\":27021:27201   */\n    tag_510:\n        /* \"#utility.yul\":27069:27146   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":27066:27067   */\n      0x00\n        /* \"#utility.yul\":27059:27147   */\n      mstore\n        /* \"#utility.yul\":27166:27170   */\n      0x22\n        /* \"#utility.yul\":27163:27164   */\n      0x04\n        /* \"#utility.yul\":27156:27171   */\n      mstore\n        /* \"#utility.yul\":27190:27194   */\n      0x24\n        /* \"#utility.yul\":27187:27188   */\n      0x00\n        /* \"#utility.yul\":27180:27195   */\n      revert\n        /* \"#utility.yul\":27207:27387   */\n    tag_470:\n        /* \"#utility.yul\":27255:27332   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":27252:27253   */\n      0x00\n        /* \"#utility.yul\":27245:27333   */\n      mstore\n        /* \"#utility.yul\":27352:27356   */\n      0x41\n        /* \"#utility.yul\":27349:27350   */\n      0x04\n        /* \"#utility.yul\":27342:27357   */\n      mstore\n        /* \"#utility.yul\":27376:27380   */\n      0x24\n        /* \"#utility.yul\":27373:27374   */\n      0x00\n        /* \"#utility.yul\":27366:27381   */\n      revert\n        /* \"#utility.yul\":27393:27576   */\n    tag_173:\n      0x00\n        /* \"#utility.yul\":27466:27467   */\n      0x03\n        /* \"#utility.yul\":27448:27464   */\n      returndatasize\n        /* \"#utility.yul\":27445:27468   */\n      gt\n        /* \"#utility.yul\":27442:27444   */\n      iszero\n      tag_523\n      jumpi\n        /* \"#utility.yul\":27504:27505   */\n      0x04\n        /* \"#utility.yul\":27501:27502   */\n      0x00\n        /* \"#utility.yul\":27498:27499   */\n      dup1\n        /* \"#utility.yul\":27483:27506   */\n      returndatacopy\n        /* \"#utility.yul\":27526:27560   */\n      tag_524\n        /* \"#utility.yul\":27557:27558   */\n      0x00\n        /* \"#utility.yul\":27551:27559   */\n      mload\n        /* \"#utility.yul\":27526:27560   */\n      tag_525\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":27519:27560   */\n      swap1\n      pop\n        /* \"#utility.yul\":27442:27444   */\n    tag_523:\n        /* \"#utility.yul\":27432:27576   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":27582:27684   */\n    tag_350:\n      0x00\n        /* \"#utility.yul\":27674:27676   */\n      0x1f\n        /* \"#utility.yul\":27670:27677   */\n      not\n        /* \"#utility.yul\":27665:27667   */\n      0x1f\n        /* \"#utility.yul\":27658:27663   */\n      dup4\n        /* \"#utility.yul\":27654:27668   */\n      add\n        /* \"#utility.yul\":27650:27678   */\n      and\n        /* \"#utility.yul\":27640:27678   */\n      swap1\n      pop\n        /* \"#utility.yul\":27630:27684   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27690:27796   */\n    tag_525:\n      0x00\n        /* \"#utility.yul\":27783:27788   */\n      dup2\n        /* \"#utility.yul\":27778:27781   */\n      0xe0\n        /* \"#utility.yul\":27774:27789   */\n      shr\n        /* \"#utility.yul\":27753:27789   */\n      swap1\n      pop\n        /* \"#utility.yul\":27743:27796   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27802:28041   */\n    tag_363:\n        /* \"#utility.yul\":27942:27976   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2045524331313535\n        /* \"#utility.yul\":27938:27939   */\n      0x00\n        /* \"#utility.yul\":27930:27936   */\n      dup3\n        /* \"#utility.yul\":27926:27940   */\n      add\n        /* \"#utility.yul\":27919:27977   */\n      mstore\n        /* \"#utility.yul\":28011:28033   */\n      0x526563656976657220696d706c656d656e746572000000000000000000000000\n        /* \"#utility.yul\":28006:28008   */\n      0x20\n        /* \"#utility.yul\":27998:28004   */\n      dup3\n        /* \"#utility.yul\":27994:28009   */\n      add\n        /* \"#utility.yul\":27987:28034   */\n      mstore\n        /* \"#utility.yul\":27908:28041   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28047:28274   */\n    tag_368:\n        /* \"#utility.yul\":28187:28221   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":28183:28184   */\n      0x00\n        /* \"#utility.yul\":28175:28181   */\n      dup3\n        /* \"#utility.yul\":28171:28185   */\n      add\n        /* \"#utility.yul\":28164:28222   */\n      mstore\n        /* \"#utility.yul\":28256:28266   */\n      0x6420746f6b656e73000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":28251:28253   */\n      0x20\n        /* \"#utility.yul\":28243:28249   */\n      dup3\n        /* \"#utility.yul\":28239:28254   */\n      add\n        /* \"#utility.yul\":28232:28267   */\n      mstore\n        /* \"#utility.yul\":28153:28274   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28280:28510   */\n    tag_373:\n        /* \"#utility.yul\":28420:28454   */\n      0x455243313135353a2062616c616e636520717565727920666f7220746865207a\n        /* \"#utility.yul\":28416:28417   */\n      0x00\n        /* \"#utility.yul\":28408:28414   */\n      dup3\n        /* \"#utility.yul\":28404:28418   */\n      add\n        /* \"#utility.yul\":28397:28455   */\n      mstore\n        /* \"#utility.yul\":28489:28502   */\n      0x65726f2061646472657373000000000000000000000000000000000000000000\n        /* \"#utility.yul\":28484:28486   */\n      0x20\n        /* \"#utility.yul\":28476:28482   */\n      dup3\n        /* \"#utility.yul\":28472:28487   */\n      add\n        /* \"#utility.yul\":28465:28503   */\n      mstore\n        /* \"#utility.yul\":28386:28510   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28516:28744   */\n    tag_378:\n        /* \"#utility.yul\":28656:28690   */\n      0x455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72\n        /* \"#utility.yul\":28652:28653   */\n      0x00\n        /* \"#utility.yul\":28644:28650   */\n      dup3\n        /* \"#utility.yul\":28640:28654   */\n      add\n        /* \"#utility.yul\":28633:28691   */\n      mstore\n        /* \"#utility.yul\":28725:28736   */\n      0x20617070726f7665640000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":28720:28722   */\n      0x20\n        /* \"#utility.yul\":28712:28718   */\n      dup3\n        /* \"#utility.yul\":28708:28723   */\n      add\n        /* \"#utility.yul\":28701:28737   */\n      mstore\n        /* \"#utility.yul\":28622:28744   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28750:28974   */\n    tag_383:\n        /* \"#utility.yul\":28890:28924   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":28886:28887   */\n      0x00\n        /* \"#utility.yul\":28878:28884   */\n      dup3\n        /* \"#utility.yul\":28874:28888   */\n      add\n        /* \"#utility.yul\":28867:28925   */\n      mstore\n        /* \"#utility.yul\":28959:28966   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":28954:28956   */\n      0x20\n        /* \"#utility.yul\":28946:28952   */\n      dup3\n        /* \"#utility.yul\":28942:28957   */\n      add\n        /* \"#utility.yul\":28935:28967   */\n      mstore\n        /* \"#utility.yul\":28856:28974   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28980:29217   */\n    tag_388:\n        /* \"#utility.yul\":29120:29154   */\n      0x455243313135353a207472616e736665722063616c6c6572206973206e6f7420\n        /* \"#utility.yul\":29116:29117   */\n      0x00\n        /* \"#utility.yul\":29108:29114   */\n      dup3\n        /* \"#utility.yul\":29104:29118   */\n      add\n        /* \"#utility.yul\":29097:29155   */\n      mstore\n        /* \"#utility.yul\":29189:29209   */\n      0x6f776e6572206e6f7220617070726f7665640000000000000000000000000000\n        /* \"#utility.yul\":29184:29186   */\n      0x20\n        /* \"#utility.yul\":29176:29182   */\n      dup3\n        /* \"#utility.yul\":29172:29187   */\n      add\n        /* \"#utility.yul\":29165:29210   */\n      mstore\n        /* \"#utility.yul\":29086:29217   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29223:29452   */\n    tag_393:\n        /* \"#utility.yul\":29363:29397   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":29359:29360   */\n      0x00\n        /* \"#utility.yul\":29351:29357   */\n      dup3\n        /* \"#utility.yul\":29347:29361   */\n      add\n        /* \"#utility.yul\":29340:29398   */\n      mstore\n        /* \"#utility.yul\":29432:29444   */\n      0x72207472616e7366657200000000000000000000000000000000000000000000\n        /* \"#utility.yul\":29427:29429   */\n      0x20\n        /* \"#utility.yul\":29419:29425   */\n      dup3\n        /* \"#utility.yul\":29415:29430   */\n      add\n        /* \"#utility.yul\":29408:29445   */\n      mstore\n        /* \"#utility.yul\":29329:29452   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29458:29686   */\n    tag_398:\n        /* \"#utility.yul\":29598:29632   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":29594:29595   */\n      0x00\n        /* \"#utility.yul\":29586:29592   */\n      dup3\n        /* \"#utility.yul\":29582:29596   */\n      add\n        /* \"#utility.yul\":29575:29633   */\n      mstore\n        /* \"#utility.yul\":29667:29678   */\n      0x20666f722073656c660000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":29662:29664   */\n      0x20\n        /* \"#utility.yul\":29654:29660   */\n      dup3\n        /* \"#utility.yul\":29650:29665   */\n      add\n        /* \"#utility.yul\":29643:29679   */\n      mstore\n        /* \"#utility.yul\":29564:29686   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29692:29920   */\n    tag_403:\n        /* \"#utility.yul\":29832:29866   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":29828:29829   */\n      0x00\n        /* \"#utility.yul\":29820:29826   */\n      dup3\n        /* \"#utility.yul\":29816:29830   */\n      add\n        /* \"#utility.yul\":29809:29867   */\n      mstore\n        /* \"#utility.yul\":29901:29912   */\n      0x206d69736d617463680000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":29896:29898   */\n      0x20\n        /* \"#utility.yul\":29888:29894   */\n      dup3\n        /* \"#utility.yul\":29884:29899   */\n      add\n        /* \"#utility.yul\":29877:29913   */\n      mstore\n        /* \"#utility.yul\":29798:29920   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29926:30153   */\n    tag_408:\n        /* \"#utility.yul\":30066:30100   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":30062:30063   */\n      0x00\n        /* \"#utility.yul\":30054:30060   */\n      dup3\n        /* \"#utility.yul\":30050:30064   */\n      add\n        /* \"#utility.yul\":30043:30101   */\n      mstore\n        /* \"#utility.yul\":30135:30145   */\n      0x6d69736d61746368000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":30130:30132   */\n      0x20\n        /* \"#utility.yul\":30122:30128   */\n      dup3\n        /* \"#utility.yul\":30118:30133   */\n      add\n        /* \"#utility.yul\":30111:30146   */\n      mstore\n        /* \"#utility.yul\":30032:30153   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30159:30870   */\n    tag_175:\n      0x00\n        /* \"#utility.yul\":30236:30240   */\n      0x44\n        /* \"#utility.yul\":30218:30234   */\n      returndatasize\n        /* \"#utility.yul\":30215:30241   */\n      lt\n        /* \"#utility.yul\":30212:30214   */\n      iszero\n      tag_539\n      jumpi\n        /* \"#utility.yul\":30244:30249   */\n      jump(tag_538)\n        /* \"#utility.yul\":30212:30214   */\n    tag_539:\n        /* \"#utility.yul\":30273:30293   */\n      tag_540\n      tag_463\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":30348:30349   */\n      0x04\n        /* \"#utility.yul\":30330:30346   */\n      returndatasize\n        /* \"#utility.yul\":30326:30350   */\n      sub\n        /* \"#utility.yul\":30323:30324   */\n      0x04\n        /* \"#utility.yul\":30317:30321   */\n      dup3\n        /* \"#utility.yul\":30302:30351   */\n      returndatacopy\n        /* \"#utility.yul\":30381:30385   */\n      dup1\n        /* \"#utility.yul\":30375:30386   */\n      mload\n        /* \"#utility.yul\":30480:30496   */\n      returndatasize\n        /* \"#utility.yul\":30473:30477   */\n      0x24\n        /* \"#utility.yul\":30465:30471   */\n      dup3\n        /* \"#utility.yul\":30461:30478   */\n      add\n        /* \"#utility.yul\":30458:30497   */\n      gt\n        /* \"#utility.yul\":30425:30443   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":30417:30423   */\n      dup3\n        /* \"#utility.yul\":30414:30444   */\n      gt\n        /* \"#utility.yul\":30398:30511   */\n      or\n        /* \"#utility.yul\":30395:30397   */\n      iszero\n      tag_541\n      jumpi\n        /* \"#utility.yul\":30526:30531   */\n      pop\n      pop\n      jump(tag_538)\n        /* \"#utility.yul\":30395:30397   */\n    tag_541:\n        /* \"#utility.yul\":30572:30578   */\n      dup1\n        /* \"#utility.yul\":30566:30570   */\n      dup3\n        /* \"#utility.yul\":30562:30579   */\n      add\n        /* \"#utility.yul\":30608:30611   */\n      dup1\n        /* \"#utility.yul\":30602:30612   */\n      mload\n        /* \"#utility.yul\":30635:30653   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":30627:30633   */\n      dup2\n        /* \"#utility.yul\":30624:30654   */\n      gt\n        /* \"#utility.yul\":30621:30623   */\n      iszero\n      tag_542\n      jumpi\n        /* \"#utility.yul\":30657:30662   */\n      pop\n      pop\n      pop\n      pop\n      jump(tag_538)\n        /* \"#utility.yul\":30621:30623   */\n    tag_542:\n        /* \"#utility.yul\":30705:30711   */\n      dup1\n        /* \"#utility.yul\":30698:30702   */\n      0x20\n        /* \"#utility.yul\":30693:30696   */\n      dup4\n        /* \"#utility.yul\":30689:30703   */\n      add\n        /* \"#utility.yul\":30685:30712   */\n      add\n        /* \"#utility.yul\":30764:30765   */\n      0x04\n        /* \"#utility.yul\":30746:30762   */\n      returndatasize\n        /* \"#utility.yul\":30742:30766   */\n      sub\n        /* \"#utility.yul\":30736:30740   */\n      dup6\n        /* \"#utility.yul\":30732:30767   */\n      add\n        /* \"#utility.yul\":30727:30730   */\n      dup2\n        /* \"#utility.yul\":30724:30768   */\n      gt\n        /* \"#utility.yul\":30721:30723   */\n      iszero\n      tag_543\n      jumpi\n        /* \"#utility.yul\":30771:30776   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_538)\n        /* \"#utility.yul\":30721:30723   */\n    tag_543:\n        /* \"#utility.yul\":30788:30845   */\n      tag_544\n        /* \"#utility.yul\":30836:30842   */\n      dup3\n        /* \"#utility.yul\":30830:30834   */\n      0x20\n        /* \"#utility.yul\":30826:30843   */\n      add\n        /* \"#utility.yul\":30818:30824   */\n      dup6\n        /* \"#utility.yul\":30814:30844   */\n      add\n        /* \"#utility.yul\":30808:30812   */\n      dup7\n        /* \"#utility.yul\":30788:30845   */\n      tag_465\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":30861:30864   */\n      dup3\n        /* \"#utility.yul\":30854:30864   */\n      swap6\n      pop\n        /* \"#utility.yul\":30202:30870   */\n      pop\n      pop\n      pop\n      pop\n      pop\n    tag_538:\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":30876:30998   */\n    tag_243:\n        /* \"#utility.yul\":30949:30973   */\n      tag_546\n        /* \"#utility.yul\":30967:30972   */\n      dup2\n        /* \"#utility.yul\":30949:30973   */\n      tag_322\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":30942:30947   */\n      dup2\n        /* \"#utility.yul\":30939:30974   */\n      eq\n        /* \"#utility.yul\":30929:30931   */\n      tag_547\n      jumpi\n        /* \"#utility.yul\":30988:30989   */\n      0x00\n        /* \"#utility.yul\":30985:30986   */\n      dup1\n        /* \"#utility.yul\":30978:30990   */\n      revert\n        /* \"#utility.yul\":30929:30931   */\n    tag_547:\n        /* \"#utility.yul\":30919:30998   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31004:31120   */\n    tag_255:\n        /* \"#utility.yul\":31074:31095   */\n      tag_549\n        /* \"#utility.yul\":31089:31094   */\n      dup2\n        /* \"#utility.yul\":31074:31095   */\n      tag_340\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":31067:31072   */\n      dup2\n        /* \"#utility.yul\":31064:31096   */\n      eq\n        /* \"#utility.yul\":31054:31056   */\n      tag_550\n      jumpi\n        /* \"#utility.yul\":31110:31111   */\n      0x00\n        /* \"#utility.yul\":31107:31108   */\n      dup1\n        /* \"#utility.yul\":31100:31112   */\n      revert\n        /* \"#utility.yul\":31054:31056   */\n    tag_550:\n        /* \"#utility.yul\":31044:31120   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31126:31246   */\n    tag_259:\n        /* \"#utility.yul\":31198:31221   */\n      tag_552\n        /* \"#utility.yul\":31215:31220   */\n      dup2\n        /* \"#utility.yul\":31198:31221   */\n      tag_496\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":31191:31196   */\n      dup2\n        /* \"#utility.yul\":31188:31222   */\n      eq\n        /* \"#utility.yul\":31178:31180   */\n      tag_553\n      jumpi\n        /* \"#utility.yul\":31236:31237   */\n      0x00\n        /* \"#utility.yul\":31233:31234   */\n      dup1\n        /* \"#utility.yul\":31226:31238   */\n      revert\n        /* \"#utility.yul\":31178:31180   */\n    tag_553:\n        /* \"#utility.yul\":31168:31246   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31252:31374   */\n    tag_269:\n        /* \"#utility.yul\":31325:31349   */\n      tag_555\n        /* \"#utility.yul\":31343:31348   */\n      dup2\n        /* \"#utility.yul\":31325:31349   */\n      tag_411\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":31318:31323   */\n      dup2\n        /* \"#utility.yul\":31315:31350   */\n      eq\n        /* \"#utility.yul\":31305:31307   */\n      tag_556\n      jumpi\n        /* \"#utility.yul\":31364:31365   */\n      0x00\n        /* \"#utility.yul\":31361:31362   */\n      dup1\n        /* \"#utility.yul\":31354:31366   */\n      revert\n        /* \"#utility.yul\":31305:31307   */\n    tag_556:\n        /* \"#utility.yul\":31295:31374   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122087f9a399984c43695048022fd22fd1edbcf77b323b57d25e9cad6ce1288b851964736f6c63430008010033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3004:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "102:259:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "112:75:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "179:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "137:41:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "137:49:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "121:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "121:66:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "112:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "203:5:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "210:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "196:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "196:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "196:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "226:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "241:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "248:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "237:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "237:16:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "230:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "291:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "300:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "303:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "293:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "293:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "293:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "272:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "277:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "268:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "268:16:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "286:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "265:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "265:25:1"
															},
															"nodeType": "YulIf",
															"src": "262:2:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "338:3:1"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "343:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "348:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "316:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:39:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "75:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "80:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "88:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "96:5:1",
														"type": ""
													}
												],
												"src": "7:354:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "454:215:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "503:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "512:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "515:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "505:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "505:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "505:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "482:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "490:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "478:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "478:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "497:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "474:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "474:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "467:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "467:35:1"
															},
															"nodeType": "YulIf",
															"src": "464:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "528:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "548:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "542:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "542:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "532:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "564:99:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "636:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "644:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "632:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "632:17:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "651:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "659:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "573:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "573:90:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "564:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "432:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "440:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "448:5:1",
														"type": ""
													}
												],
												"src": "381:288:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "762:303:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "808:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "817:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "820:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "810:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "810:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "810:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "783:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "792:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "779:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "779:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "804:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "775:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "775:32:1"
															},
															"nodeType": "YulIf",
															"src": "772:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "834:224:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "849:38:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "873:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "884:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "869:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "869:17:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "863:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "863:24:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "853:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "934:16:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "943:1:1",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "946:1:1",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "936:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "936:12:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "936:12:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "906:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "914:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "903:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "903:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "900:2:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "964:84:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1020:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1031:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1016:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1016:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1040:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "974:41:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "974:74:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "964:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "732:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "743:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "755:6:1",
														"type": ""
													}
												],
												"src": "675:390:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1112:88:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1122:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1132:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1132:20:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1122:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1181:6:1"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1189:4:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1161:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1161:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1161:33:1"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1096:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1105:6:1",
														"type": ""
													}
												],
												"src": "1071:129:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1256:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1272:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1266:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1266:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1239:6:1",
														"type": ""
													}
												],
												"src": "1206:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1354:241:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1459:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1461:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1461:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1461:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1431:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1439:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1428:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1428:30:1"
															},
															"nodeType": "YulIf",
															"src": "1425:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1491:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1521:6:1"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1499:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1499:29:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1565:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1577:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1583:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1573:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1573:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1565:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1338:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1349:4:1",
														"type": ""
													}
												],
												"src": "1287:308:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1650:258:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1660:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1669:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1664:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1729:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1754:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1759:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1750:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1750:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1773:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1778:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1769:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1769:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1763:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1763:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1743:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1743:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1743:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1690:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1693:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1687:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1687:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1701:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1703:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1712:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1715:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1708:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1708:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1703:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1683:3:1",
																"statements": []
															},
															"src": "1679:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1826:76:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1876:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "1881:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1872:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1872:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1890:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1865:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1865:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1865:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1807:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1810:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1804:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1804:13:1"
															},
															"nodeType": "YulIf",
															"src": "1801:2:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1632:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1637:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1642:6:1",
														"type": ""
													}
												],
												"src": "1601:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1965:269:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1975:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1989:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1995:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1985:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1975:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2006:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2036:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2042:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2032:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2010:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2083:51:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2097:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2111:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2119:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2107:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2107:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2097:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2063:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2056:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2056:26:1"
															},
															"nodeType": "YulIf",
															"src": "2053:2:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2186:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "2200:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2200:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2200:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2150:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2173:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2181:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2170:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2170:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2147:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2147:38:1"
															},
															"nodeType": "YulIf",
															"src": "2144:2:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1949:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1958:6:1",
														"type": ""
													}
												],
												"src": "1914:320:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2283:238:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2293:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2315:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "2345:4:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2323:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2323:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2311:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2311:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2297:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2462:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2464:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2464:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2464:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2405:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2417:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2402:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2402:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2441:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2453:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2438:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2438:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2399:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2399:62:1"
															},
															"nodeType": "YulIf",
															"src": "2396:2:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2500:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2504:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2493:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2493:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2493:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2269:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2277:4:1",
														"type": ""
													}
												],
												"src": "2240:281:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2555:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2572:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2575:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2565:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2565:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2565:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2669:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2672:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2662:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2662:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2662:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2693:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2696:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2686:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2686:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2686:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "2527:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2741:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2758:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2761:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2751:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2751:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2751:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2855:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2858:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2848:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2848:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2848:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2879:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2882:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2872:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2872:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2872:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2713:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2947:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2957:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2975:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2982:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2971:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2971:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2991:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2987:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2987:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2967:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2967:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2957:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2930:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2940:6:1",
														"type": ""
													}
												],
												"src": "2899:102:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2994 CODESIZE SUB DUP1 PUSH3 0x2994 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x18D JUMP JUMPDEST PUSH3 0x48 DUP2 PUSH3 0x4F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x342 JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x67 SWAP3 SWAP2 SWAP1 PUSH3 0x6B JUMP JUMPDEST POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x79 SWAP1 PUSH3 0x267 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9D JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE9 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB8 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE9 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE9 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE8 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xCB JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xF8 SWAP2 SWAP1 PUSH3 0xFC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x117 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0xFD JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x132 PUSH3 0x12C DUP5 PUSH3 0x1FB JUMP JUMPDEST PUSH3 0x1D2 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x158 DUP5 DUP3 DUP6 PUSH3 0x231 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x184 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x11B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1C9 DUP5 DUP3 DUP6 ADD PUSH3 0x160 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1DE PUSH3 0x1F1 JUMP JUMPDEST SWAP1 POP PUSH3 0x1EC DUP3 DUP3 PUSH3 0x29D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x219 JUMPI PUSH3 0x218 PUSH3 0x302 JUMP JUMPDEST JUMPDEST PUSH3 0x224 DUP3 PUSH3 0x331 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x251 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x234 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x261 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x280 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x297 JUMPI PUSH3 0x296 PUSH3 0x2D3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2A8 DUP3 PUSH3 0x331 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x2CA JUMPI PUSH3 0x2C9 PUSH3 0x302 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2642 DUP1 PUSH3 0x352 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x1B4 JUMPI PUSH2 0x87 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x11C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x17DF JUMP JUMPDEST PUSH2 0x1D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x1E1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x1887 JUMP JUMPDEST PUSH2 0x299 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x1C9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x18D9 JUMP JUMPDEST PUSH2 0x37B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x1CBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x1655 JUMP JUMPDEST PUSH2 0x40F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x181B JUMP JUMPDEST PUSH2 0x4B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x1C46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x17A3 JUMP JUMPDEST PUSH2 0x661 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x1619 JUMP JUMPDEST PUSH2 0x677 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x1C9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x1714 JUMP JUMPDEST PUSH2 0x70B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x241 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x238 SWAP1 PUSH2 0x1D1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x364 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x374 JUMPI POP PUSH2 0x373 DUP3 PUSH2 0x7AC JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x38A SWAP1 PUSH2 0x208B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3B6 SWAP1 PUSH2 0x208B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x403 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x403 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3E6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x417 PUSH2 0x816 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x45D JUMPI POP PUSH2 0x45C DUP6 PUSH2 0x457 PUSH2 0x816 JUMP JUMPDEST PUSH2 0x677 JUMP JUMPDEST JUMPDEST PUSH2 0x49C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x493 SWAP1 PUSH2 0x1D7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4A9 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x81E JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x4F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4ED SWAP1 PUSH2 0x1DDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x539 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x567 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x656 JUMPI PUSH2 0x600 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5B2 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x5F3 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1D0 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x639 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x64F SWAP1 PUSH2 0x20EE JUMP JUMPDEST SWAP1 POP PUSH2 0x56D JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x673 PUSH2 0x66C PUSH2 0x816 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xB7E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x713 PUSH2 0x816 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x759 JUMPI POP PUSH2 0x758 DUP6 PUSH2 0x753 PUSH2 0x816 JUMP JUMPDEST PUSH2 0x677 JUMP JUMPDEST JUMPDEST PUSH2 0x798 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78F SWAP1 PUSH2 0x1D3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7A5 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xCEB JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x862 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x859 SWAP1 PUSH2 0x1DFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C9 SWAP1 PUSH2 0x1D5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8DC PUSH2 0x816 JUMP JUMPDEST SWAP1 POP PUSH2 0x8EC DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xAE9 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x933 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x978 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xA19 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA10 SWAP1 PUSH2 0x1D9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xACE SWAP2 SWAP1 PUSH2 0x1F7F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0xAE2 SWAP1 PUSH2 0x20EE JUMP JUMPDEST SWAP1 POP PUSH2 0x8EF JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xB60 SWAP3 SWAP2 SWAP1 PUSH2 0x1C68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xB76 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xF75 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xBED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE4 SWAP1 PUSH2 0x1DBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xCDE SWAP2 SWAP1 PUSH2 0x1C9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD5B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD52 SWAP1 PUSH2 0x1D5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD65 PUSH2 0x816 JUMP JUMPDEST SWAP1 POP PUSH2 0xD85 DUP2 DUP8 DUP8 PUSH2 0xD76 DUP9 PUSH2 0x115C JUMP JUMPDEST PUSH2 0xD7F DUP9 PUSH2 0x115C JUMP JUMPDEST DUP8 PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xE1C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE13 SWAP1 PUSH2 0x1D9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP2 SUB PUSH1 0x0 DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x0 DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xED1 SWAP2 SWAP1 PUSH2 0x1F7F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0xF4E SWAP3 SWAP2 SWAP1 PUSH2 0x1E37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xF64 DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x1222 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF94 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1409 JUMP JUMPDEST ISZERO PUSH2 0x1154 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFDA SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B84 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1025 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1022 SWAP2 SWAP1 PUSH2 0x18B0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x10CB JUMPI PUSH2 0x1031 PUSH2 0x21C4 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x108E JUMPI POP PUSH2 0x1046 PUSH2 0x251A JUMP JUMPDEST DUP1 PUSH2 0x1051 JUMPI POP PUSH2 0x1090 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1085 SWAP2 SWAP1 PUSH2 0x1CBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C2 SWAP1 PUSH2 0x1CDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1152 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1149 SWAP1 PUSH2 0x1CFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11A1 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x11CF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x120D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1241 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1409 JUMP JUMPDEST ISZERO PUSH2 0x1401 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1287 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BEC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x12D2 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12CF SWAP2 SWAP1 PUSH2 0x18B0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1378 JUMPI PUSH2 0x12DE PUSH2 0x21C4 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x133B JUMPI POP PUSH2 0x12F3 PUSH2 0x251A JUMP JUMPDEST DUP1 PUSH2 0x12FE JUMPI POP PUSH2 0x133D JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1332 SWAP2 SWAP1 PUSH2 0x1CBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x136F SWAP1 PUSH2 0x1CDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x13FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13F6 SWAP1 PUSH2 0x1CFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x142F PUSH2 0x142A DUP5 PUSH2 0x1E85 JUMP JUMPDEST PUSH2 0x1E60 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x144E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x147E JUMPI DUP2 PUSH2 0x1464 DUP9 DUP3 PUSH2 0x1532 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1451 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x149B PUSH2 0x1496 DUP5 PUSH2 0x1EB1 JUMP JUMPDEST PUSH2 0x1E60 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x14BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x14EA JUMPI DUP2 PUSH2 0x14D0 DUP9 DUP3 PUSH2 0x1604 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x14BD JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1507 PUSH2 0x1502 DUP5 PUSH2 0x1EDD JUMP JUMPDEST PUSH2 0x1E60 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x151F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x152A DUP5 DUP3 DUP6 PUSH2 0x2049 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1541 DUP2 PUSH2 0x25B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1558 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1568 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x141C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1582 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1592 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1488 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15AA DUP2 PUSH2 0x25C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15BF DUP2 PUSH2 0x25DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x15D4 DUP2 PUSH2 0x25DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x15EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x15FB DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x14F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1613 DUP2 PUSH2 0x25F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x162C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x163A DUP6 DUP3 DUP7 ADD PUSH2 0x1532 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x164B DUP6 DUP3 DUP7 ADD PUSH2 0x1532 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x166D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x167B DUP9 DUP3 DUP10 ADD PUSH2 0x1532 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x168C DUP9 DUP3 DUP10 ADD PUSH2 0x1532 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16B5 DUP9 DUP3 DUP10 ADD PUSH2 0x1571 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16DE DUP9 DUP3 DUP10 ADD PUSH2 0x1571 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1707 DUP9 DUP3 DUP10 ADD PUSH2 0x15DA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x172C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x173A DUP9 DUP3 DUP10 ADD PUSH2 0x1532 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x174B DUP9 DUP3 DUP10 ADD PUSH2 0x1532 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x175C DUP9 DUP3 DUP10 ADD PUSH2 0x1604 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x176D DUP9 DUP3 DUP10 ADD PUSH2 0x1604 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x178A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1796 DUP9 DUP3 DUP10 ADD PUSH2 0x15DA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x17C4 DUP6 DUP3 DUP7 ADD PUSH2 0x1532 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17D5 DUP6 DUP3 DUP7 ADD PUSH2 0x159B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1800 DUP6 DUP3 DUP7 ADD PUSH2 0x1532 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1811 DUP6 DUP3 DUP7 ADD PUSH2 0x1604 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x182E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1848 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1854 DUP6 DUP3 DUP7 ADD PUSH2 0x1547 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1871 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x187D DUP6 DUP3 DUP7 ADD PUSH2 0x1571 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1899 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18A7 DUP5 DUP3 DUP6 ADD PUSH2 0x15B0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18D0 DUP5 DUP3 DUP6 ADD PUSH2 0x15C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18F9 DUP5 DUP3 DUP6 ADD PUSH2 0x1604 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x190E DUP4 DUP4 PUSH2 0x1B66 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1923 DUP2 PUSH2 0x1FD5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1934 DUP3 PUSH2 0x1F1E JUMP JUMPDEST PUSH2 0x193E DUP2 DUP6 PUSH2 0x1F4C JUMP JUMPDEST SWAP4 POP PUSH2 0x1949 DUP4 PUSH2 0x1F0E JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x197A JUMPI DUP2 MLOAD PUSH2 0x1961 DUP9 DUP3 PUSH2 0x1902 JUMP JUMPDEST SWAP8 POP PUSH2 0x196C DUP4 PUSH2 0x1F3F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x194D JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1990 DUP2 PUSH2 0x1FE7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19A1 DUP3 PUSH2 0x1F29 JUMP JUMPDEST PUSH2 0x19AB DUP2 DUP6 PUSH2 0x1F5D JUMP JUMPDEST SWAP4 POP PUSH2 0x19BB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2058 JUMP JUMPDEST PUSH2 0x19C4 DUP2 PUSH2 0x21E6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19DA DUP3 PUSH2 0x1F34 JUMP JUMPDEST PUSH2 0x19E4 DUP2 DUP6 PUSH2 0x1F6E JUMP JUMPDEST SWAP4 POP PUSH2 0x19F4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2058 JUMP JUMPDEST PUSH2 0x19FD DUP2 PUSH2 0x21E6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A15 PUSH1 0x34 DUP4 PUSH2 0x1F6E JUMP JUMPDEST SWAP2 POP PUSH2 0x1A20 DUP3 PUSH2 0x2204 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A38 PUSH1 0x28 DUP4 PUSH2 0x1F6E JUMP JUMPDEST SWAP2 POP PUSH2 0x1A43 DUP3 PUSH2 0x2253 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A5B PUSH1 0x2B DUP4 PUSH2 0x1F6E JUMP JUMPDEST SWAP2 POP PUSH2 0x1A66 DUP3 PUSH2 0x22A2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A7E PUSH1 0x29 DUP4 PUSH2 0x1F6E JUMP JUMPDEST SWAP2 POP PUSH2 0x1A89 DUP3 PUSH2 0x22F1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AA1 PUSH1 0x25 DUP4 PUSH2 0x1F6E JUMP JUMPDEST SWAP2 POP PUSH2 0x1AAC DUP3 PUSH2 0x2340 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AC4 PUSH1 0x32 DUP4 PUSH2 0x1F6E JUMP JUMPDEST SWAP2 POP PUSH2 0x1ACF DUP3 PUSH2 0x238F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AE7 PUSH1 0x2A DUP4 PUSH2 0x1F6E JUMP JUMPDEST SWAP2 POP PUSH2 0x1AF2 DUP3 PUSH2 0x23DE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B0A PUSH1 0x29 DUP4 PUSH2 0x1F6E JUMP JUMPDEST SWAP2 POP PUSH2 0x1B15 DUP3 PUSH2 0x242D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B2D PUSH1 0x29 DUP4 PUSH2 0x1F6E JUMP JUMPDEST SWAP2 POP PUSH2 0x1B38 DUP3 PUSH2 0x247C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B50 PUSH1 0x28 DUP4 PUSH2 0x1F6E JUMP JUMPDEST SWAP2 POP PUSH2 0x1B5B DUP3 PUSH2 0x24CB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B6F DUP2 PUSH2 0x203F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1B7E DUP2 PUSH2 0x203F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1B99 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x191A JUMP JUMPDEST PUSH2 0x1BA6 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x191A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1BB8 DUP2 DUP7 PUSH2 0x1929 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1BCC DUP2 DUP6 PUSH2 0x1929 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1BE0 DUP2 DUP5 PUSH2 0x1996 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1C01 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x191A JUMP JUMPDEST PUSH2 0x1C0E PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x191A JUMP JUMPDEST PUSH2 0x1C1B PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1B75 JUMP JUMPDEST PUSH2 0x1C28 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1B75 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1C3A DUP2 DUP5 PUSH2 0x1996 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C60 DUP2 DUP5 PUSH2 0x1929 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C82 DUP2 DUP6 PUSH2 0x1929 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1C96 DUP2 DUP5 PUSH2 0x1929 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CB4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1987 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CD4 DUP2 DUP5 PUSH2 0x19CF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CF5 DUP2 PUSH2 0x1A08 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D15 DUP2 PUSH2 0x1A2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D35 DUP2 PUSH2 0x1A4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D55 DUP2 PUSH2 0x1A71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D75 DUP2 PUSH2 0x1A94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D95 DUP2 PUSH2 0x1AB7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DB5 DUP2 PUSH2 0x1ADA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DD5 DUP2 PUSH2 0x1AFD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DF5 DUP2 PUSH2 0x1B20 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E15 DUP2 PUSH2 0x1B43 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E31 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B75 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E4C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1B75 JUMP JUMPDEST PUSH2 0x1E59 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B75 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E6A PUSH2 0x1E7B JUMP JUMPDEST SWAP1 POP PUSH2 0x1E76 DUP3 DUP3 PUSH2 0x20BD JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1EA0 JUMPI PUSH2 0x1E9F PUSH2 0x2195 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1ECC JUMPI PUSH2 0x1ECB PUSH2 0x2195 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1EF8 JUMPI PUSH2 0x1EF7 PUSH2 0x2195 JUMP JUMPDEST JUMPDEST PUSH2 0x1F01 DUP3 PUSH2 0x21E6 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F8A DUP3 PUSH2 0x203F JUMP JUMPDEST SWAP2 POP PUSH2 0x1F95 DUP4 PUSH2 0x203F JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1FCA JUMPI PUSH2 0x1FC9 PUSH2 0x2137 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FE0 DUP3 PUSH2 0x201F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2076 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x205B JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2085 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x20A3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x20B7 JUMPI PUSH2 0x20B6 PUSH2 0x2166 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20C6 DUP3 PUSH2 0x21E6 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x20E5 JUMPI PUSH2 0x20E4 PUSH2 0x2195 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20F9 DUP3 PUSH2 0x203F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x212C JUMPI PUSH2 0x212B PUSH2 0x2137 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x21E3 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH2 0x21E0 PUSH1 0x0 MLOAD PUSH2 0x21F7 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65726F2061646472657373000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20617070726F7665640000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572206E6F7220617070726F7665640000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x252A JUMPI PUSH2 0x25AD JUMP JUMPDEST PUSH2 0x2532 PUSH2 0x1E7B JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x255A JUMPI POP POP PUSH2 0x25AD JUMP JUMPDEST DUP1 DUP3 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2578 JUMPI POP POP POP POP PUSH2 0x25AD JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x4 RETURNDATASIZE SUB DUP6 ADD DUP2 GT ISZERO PUSH2 0x2595 JUMPI POP POP POP POP POP PUSH2 0x25AD JUMP JUMPDEST PUSH2 0x25A4 DUP3 PUSH1 0x20 ADD DUP6 ADD DUP7 PUSH2 0x20BD JUMP JUMPDEST DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x25B9 DUP2 PUSH2 0x1FD5 JUMP JUMPDEST DUP2 EQ PUSH2 0x25C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x25D0 DUP2 PUSH2 0x1FE7 JUMP JUMPDEST DUP2 EQ PUSH2 0x25DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x25E7 DUP2 PUSH2 0x1FF3 JUMP JUMPDEST DUP2 EQ PUSH2 0x25F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x25FE DUP2 PUSH2 0x203F JUMP JUMPDEST DUP2 EQ PUSH2 0x2609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0xF9 LOG3 SWAP10 SWAP9 0x4C NUMBER PUSH10 0x5048022FD22FD1EDBCF7 PUSH28 0x323B57D25E9CAD6CE1288B851964736F6C6343000801003300000000 ",
							"sourceMap": "21284:15165:0:-:0;;;21836:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21879:13;21887:4;21879:7;;;:13;;:::i;:::-;21836:64;21284:15165;;28890:88;28964:6;28957:4;:13;;;;;;;;;;;;:::i;:::-;;28890:88;:::o;21284:15165::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:354:1:-;;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:2;;;303:1;300;293:12;262:2;316:39;348:6;343:3;338;316:39;:::i;:::-;102:259;;;;;;:::o;381:288::-;;497:3;490:4;482:6;478:17;474:27;464:2;;515:1;512;505:12;464:2;548:6;542:13;573:90;659:3;651:6;644:4;636:6;632:17;573:90;:::i;:::-;564:99;;454:215;;;;;:::o;675:390::-;;804:2;792:9;783:7;779:23;775:32;772:2;;;820:1;817;810:12;772:2;884:1;873:9;869:17;863:24;914:18;906:6;903:30;900:2;;;946:1;943;936:12;900:2;974:74;1040:7;1031:6;1020:9;1016:22;974:74;:::i;:::-;964:84;;834:224;762:303;;;;:::o;1071:129::-;;1132:20;;:::i;:::-;1122:30;;1161:33;1189:4;1181:6;1161:33;:::i;:::-;1112:88;;;:::o;1206:75::-;;1272:2;1266:9;1256:19;;1246:35;:::o;1287:308::-;;1439:18;1431:6;1428:30;1425:2;;;1461:18;;:::i;:::-;1425:2;1499:29;1521:6;1499:29;:::i;:::-;1491:37;;1583:4;1577;1573:15;1565:23;;1354:241;;;:::o;1601:307::-;1669:1;1679:113;1693:6;1690:1;1687:13;1679:113;;;1778:1;1773:3;1769:11;1763:18;1759:1;1754:3;1750:11;1743:39;1715:2;1712:1;1708:10;1703:15;;1679:113;;;1810:6;1807:1;1804:13;1801:2;;;1890:1;1881:6;1876:3;1872:16;1865:27;1801:2;1650:258;;;;:::o;1914:320::-;;1995:1;1989:4;1985:12;1975:22;;2042:1;2036:4;2032:12;2063:18;2053:2;;2119:4;2111:6;2107:17;2097:27;;2053:2;2181;2173:6;2170:14;2150:18;2147:38;2144:2;;;2200:18;;:::i;:::-;2144:2;1965:269;;;;:::o;2240:281::-;2323:27;2345:4;2323:27;:::i;:::-;2315:6;2311:40;2453:6;2441:10;2438:22;2417:18;2405:10;2402:34;2399:62;2396:2;;;2464:18;;:::i;:::-;2396:2;2504:10;2500:2;2493:22;2283:238;;;:::o;2527:180::-;2575:77;2572:1;2565:88;2672:4;2669:1;2662:15;2696:4;2693:1;2686:15;2713:180;2761:77;2758:1;2751:88;2858:4;2855:1;2848:15;2882:4;2879:1;2872:15;2899:102;;2991:2;2987:7;2982:2;2975:5;2971:14;2967:28;2957:38;;2947:54;;;:::o;21284:15165:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:31377:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "126:521:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "136:90:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "218:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "161:56:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "161:64:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "145:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "145:81:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "136:5:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "235:16:1",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "246:5:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "239:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "267:5:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "274:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "260:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "260:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "260:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "282:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "293:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "300:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "289:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "289:16:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "282:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "314:17:1",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "325:6:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "318:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "380:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "389:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "392:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "382:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "382:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "382:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "350:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "359:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "367:4:1",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "355:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "355:17:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "346:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "346:27:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "375:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "343:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:36:1"
															},
															"nodeType": "YulIf",
															"src": "340:2:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "465:176:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "479:21:1",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "497:3:1"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "483:10:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "520:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "546:10:1"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "558:3:1"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nodeType": "YulIdentifier",
																						"src": "525:20:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "525:37:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "513:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "513:50:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "513:50:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "576:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "587:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "592:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "583:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "583:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "576:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "610:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "621:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "626:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "617:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "617:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "610:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "427:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "430:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "424:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "424:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "438:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "440:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "449:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "452:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "445:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "445:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "440:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "409:14:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "411:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "420:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "415:1:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "405:236:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "96:6:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "104:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "112:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "120:5:1",
														"type": ""
													}
												],
												"src": "24:623:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "772:521:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "782:90:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "864:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "807:56:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "807:64:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "791:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "791:81:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "782:5:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "881:16:1",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "892:5:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "885:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "913:5:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "920:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "906:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "906:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "906:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "928:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "939:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "946:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:16:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "928:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "960:17:1",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "971:6:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "964:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1026:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1035:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1038:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1028:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1028:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1028:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "996:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1005:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1013:4:1",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "1001:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1001:17:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "992:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "992:27:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1021:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "989:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "989:36:1"
															},
															"nodeType": "YulIf",
															"src": "986:2:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1111:176:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1125:21:1",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "1143:3:1"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "1129:10:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1166:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "1192:10:1"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "1204:3:1"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nodeType": "YulIdentifier",
																						"src": "1171:20:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1171:37:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1159:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1159:50:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1159:50:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1222:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1233:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1238:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1229:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1229:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1222:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1256:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1267:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1272:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1263:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1263:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1256:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1073:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1076:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1070:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1070:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1084:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1086:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1095:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1098:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1091:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1091:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1086:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1055:14:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1057:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1066:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "1061:1:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "1051:236:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "742:6:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "750:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "758:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "766:5:1",
														"type": ""
													}
												],
												"src": "670:623:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1382:260:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1392:74:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1458:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1417:40:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1417:48:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1401:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1401:65:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1392:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1482:5:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1489:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1475:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1475:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1475:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1505:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1520:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1527:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1516:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1516:16:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1509:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1570:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1579:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1582:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1572:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1572:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1572:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1551:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1556:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1547:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1547:16:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1565:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1544:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1544:25:1"
															},
															"nodeType": "YulIf",
															"src": "1541:2:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1619:3:1"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "1624:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1629:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1595:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1595:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1595:41:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1355:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1360:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1368:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1376:5:1",
														"type": ""
													}
												],
												"src": "1299:343:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1700:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1710:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1732:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1719:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1719:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1710:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1775:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1748:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1748:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1748:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1678:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1686:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1694:5:1",
														"type": ""
													}
												],
												"src": "1648:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1887:226:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1936:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1945:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1948:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1938:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1938:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1938:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1915:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1923:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1911:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1911:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1930:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1907:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1907:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1900:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1900:35:1"
															},
															"nodeType": "YulIf",
															"src": "1897:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1961:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1988:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1975:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1975:20:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1965:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2004:103:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2080:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2088:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2076:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2076:17:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2095:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2103:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2013:62:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2013:94:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2004:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1865:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1873:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1881:5:1",
														"type": ""
													}
												],
												"src": "1810:303:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2213:226:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2262:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2274:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2264:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2264:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2264:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2241:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2249:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2237:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2237:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2256:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2233:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2233:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2226:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2226:35:1"
															},
															"nodeType": "YulIf",
															"src": "2223:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2287:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2314:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2301:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2301:20:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2291:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2330:103:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2406:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2414:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2402:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2402:17:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2421:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2429:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2339:62:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2339:94:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2330:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2191:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2199:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2207:5:1",
														"type": ""
													}
												],
												"src": "2136:303:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2494:84:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2504:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2526:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2513:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2513:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2504:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2566:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2542:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2542:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2542:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2472:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2480:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2488:5:1",
														"type": ""
													}
												],
												"src": "2445:133:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2635:86:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2645:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2667:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2654:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2654:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2645:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2709:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "2683:25:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2683:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2683:32:1"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2613:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2621:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2629:5:1",
														"type": ""
													}
												],
												"src": "2584:137:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2789:79:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2799:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2814:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2808:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2808:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2799:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2856:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "2830:25:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2830:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2830:32:1"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2767:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2775:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2783:5:1",
														"type": ""
													}
												],
												"src": "2727:141:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2948:210:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2997:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3006:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3009:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2999:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2999:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2999:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2976:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2984:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2972:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2972:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2991:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2968:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2968:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2961:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2961:35:1"
															},
															"nodeType": "YulIf",
															"src": "2958:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3022:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3049:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3036:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3036:20:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3026:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3065:87:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3125:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3133:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3121:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3121:17:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3140:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3148:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3074:46:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3074:78:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3065:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2926:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2934:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2942:5:1",
														"type": ""
													}
												],
												"src": "2887:271:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3216:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3226:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3248:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3235:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3235:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3226:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3291:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3264:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3264:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3264:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3194:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3202:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3210:5:1",
														"type": ""
													}
												],
												"src": "3164:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3392:324:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3438:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3447:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3450:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3440:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3440:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3440:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3413:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3422:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3409:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3409:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3434:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3405:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3405:32:1"
															},
															"nodeType": "YulIf",
															"src": "3402:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3464:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3479:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3493:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3483:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3508:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3543:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3554:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3539:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3539:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3563:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3518:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3518:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3508:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3591:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3606:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3620:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3610:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3636:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3671:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3682:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3667:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3667:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3691:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3646:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3646:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3636:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3354:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3365:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3377:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3385:6:1",
														"type": ""
													}
												],
												"src": "3309:407:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3915:1048:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3962:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3971:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3974:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3964:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3964:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3964:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3936:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3945:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3932:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3932:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3957:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3928:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3928:33:1"
															},
															"nodeType": "YulIf",
															"src": "3925:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3988:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4003:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4017:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4007:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4032:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4067:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4078:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4063:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4063:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4087:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4042:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4042:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4032:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4115:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4130:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4144:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4134:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4160:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4195:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4206:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4191:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4191:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4215:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4170:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4170:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4160:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4243:236:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4258:46:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4289:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4300:2:1",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4285:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4285:18:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4272:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4272:32:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4262:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4351:16:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4360:1:1",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4363:1:1",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "4353:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4353:12:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4353:12:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4323:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4331:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4320:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4320:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "4317:2:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4381:88:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4441:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4452:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4437:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4437:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4461:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4391:45:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4391:78:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4381:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4489:236:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4504:46:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4535:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4546:2:1",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4531:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4531:18:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4518:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4518:32:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4508:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4597:16:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4606:1:1",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4609:1:1",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "4599:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4599:12:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4599:12:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4569:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4577:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4566:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4566:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "4563:2:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4627:88:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4687:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4698:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4683:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4683:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4707:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4637:45:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4637:78:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "4627:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4735:221:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4750:47:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4781:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4792:3:1",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4777:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4777:19:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4764:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4764:33:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4754:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4844:16:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4853:1:1",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4856:1:1",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "4846:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4846:12:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4846:12:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4816:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4824:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4813:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4813:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "4810:2:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4874:72:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4918:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4929:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4914:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4914:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4938:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4884:29:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4884:62:1"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "4874:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3853:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3864:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3876:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3884:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3892:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3900:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3908:6:1",
														"type": ""
													}
												],
												"src": "3722:1241:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5112:812:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5159:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5168:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5171:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5161:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5161:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5161:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5133:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5142:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5129:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5129:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5154:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5125:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5125:33:1"
															},
															"nodeType": "YulIf",
															"src": "5122:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "5185:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5200:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5214:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5204:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5229:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5264:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5275:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5260:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5260:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5284:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5239:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5239:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5229:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5312:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5327:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5341:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5331:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5357:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5392:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5403:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5388:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5388:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5412:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5367:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5367:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5357:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5440:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5455:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5469:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5459:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5485:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5520:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5531:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5516:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5516:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5540:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5495:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5495:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5485:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5568:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5583:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5597:2:1",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5587:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5613:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5648:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5659:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5644:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5644:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5668:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5623:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5623:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "5613:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5696:221:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5711:47:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5742:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5753:3:1",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5738:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5738:19:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5725:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5725:33:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5715:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5805:16:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5814:1:1",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5817:1:1",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "5807:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5807:12:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5807:12:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5777:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5785:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5774:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5774:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "5771:2:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5835:72:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5879:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5890:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5875:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5875:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5899:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5845:29:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5845:62:1"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "5835:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5050:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5061:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5073:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5081:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5089:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5097:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "5105:6:1",
														"type": ""
													}
												],
												"src": "4969:955:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6010:321:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6056:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6065:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6068:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6058:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6058:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6058:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6031:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6040:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6027:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6027:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6052:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6023:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6023:32:1"
															},
															"nodeType": "YulIf",
															"src": "6020:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "6082:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6097:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6111:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6101:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6126:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6161:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6172:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6157:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6157:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6181:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6136:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6136:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6126:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6209:115:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6224:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6238:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6228:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6254:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6286:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6297:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6282:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6282:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6306:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6264:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6264:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6254:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5972:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5983:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5995:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6003:6:1",
														"type": ""
													}
												],
												"src": "5930:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6420:324:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6466:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6475:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6478:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6468:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6468:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6468:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6441:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6450:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6437:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6437:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6462:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6433:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6433:32:1"
															},
															"nodeType": "YulIf",
															"src": "6430:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "6492:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6507:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6521:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6511:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6536:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6571:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6582:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6567:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6567:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6591:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6546:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6546:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6536:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6619:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6634:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6648:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6638:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6664:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6699:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6710:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6695:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6695:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6719:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6674:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6674:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6664:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6382:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6393:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6405:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6413:6:1",
														"type": ""
													}
												],
												"src": "6337:407:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6883:560:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6929:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6938:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6941:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6931:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6931:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6931:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6904:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6913:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6900:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6900:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6925:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6896:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6896:32:1"
															},
															"nodeType": "YulIf",
															"src": "6893:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "6955:235:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6970:45:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7001:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7012:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6997:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6997:17:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "6984:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6984:31:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6974:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7062:16:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7071:1:1",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7074:1:1",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "7064:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7064:12:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "7064:12:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7034:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7042:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7031:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7031:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "7028:2:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7092:88:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7152:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7163:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7148:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7148:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7172:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7102:45:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7102:78:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7092:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7200:236:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7215:46:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7246:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7257:2:1",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7242:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7242:18:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "7229:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7229:32:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7219:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7308:16:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7317:1:1",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7320:1:1",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "7310:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7310:12:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "7310:12:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7280:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7288:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7277:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7277:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "7274:2:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7338:88:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7398:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7409:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7394:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7394:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7418:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7348:45:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7348:78:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "7338:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6845:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6856:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6868:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6876:6:1",
														"type": ""
													}
												],
												"src": "6750:693:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7514:195:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7560:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7569:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7572:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7562:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7562:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7562:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7535:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7544:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7531:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7531:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7556:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7527:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7527:32:1"
															},
															"nodeType": "YulIf",
															"src": "7524:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "7586:116:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7601:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7615:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7605:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7630:62:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7664:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7675:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7660:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7660:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7684:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "7640:19:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7640:52:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7630:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7484:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7495:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7507:6:1",
														"type": ""
													}
												],
												"src": "7449:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7791:206:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7837:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7846:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7849:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7839:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7839:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7839:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7812:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7821:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7808:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7808:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7833:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7804:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7804:32:1"
															},
															"nodeType": "YulIf",
															"src": "7801:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "7863:127:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7878:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7892:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7882:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7907:73:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7952:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7963:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7948:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7948:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7972:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "7917:30:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7917:63:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7907:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7761:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7772:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7784:6:1",
														"type": ""
													}
												],
												"src": "7715:282:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8069:196:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8115:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8124:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8127:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8117:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8117:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8117:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8090:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8099:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8086:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8086:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8111:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8082:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8082:32:1"
															},
															"nodeType": "YulIf",
															"src": "8079:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "8141:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8156:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8170:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8160:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8185:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8220:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8231:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8216:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8216:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8240:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8195:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8195:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8185:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8039:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8050:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8062:6:1",
														"type": ""
													}
												],
												"src": "8003:262:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8351:99:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8395:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8403:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8361:33:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8361:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8361:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8416:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8434:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8439:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8430:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8430:14:1"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "8416:10:1"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8324:6:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8332:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "8340:10:1",
														"type": ""
													}
												],
												"src": "8271:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8521:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8538:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8561:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8543:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8543:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8531:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8531:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8531:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8509:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8516:3:1",
														"type": ""
													}
												],
												"src": "8456:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8734:608:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8744:68:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8806:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8758:47:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8758:54:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8748:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8821:93:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8902:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8907:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8828:73:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8828:86:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8821:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8923:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8988:5:1"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8938:49:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8938:56:1"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "8927:7:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9003:21:1",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "9017:7:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "9007:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9093:224:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9107:34:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "9134:6:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9128:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9128:13:1"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "9111:13:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "9154:70:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "9205:13:1"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "9220:3:1"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "9161:43:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9161:63:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "9154:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "9237:70:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "9300:6:1"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "9247:52:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9247:60:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9237:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "9055:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9058:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9052:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9052:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "9066:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9068:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "9077:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9080:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9073:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9073:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "9068:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "9037:14:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9039:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "9048:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "9043:1:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "9033:284:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9326:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "9333:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9326:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8713:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8720:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8729:3:1",
														"type": ""
													}
												],
												"src": "8610:732:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9407:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9424:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9444:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "9429:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9429:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9417:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9417:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9417:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9395:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9402:3:1",
														"type": ""
													}
												],
												"src": "9348:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9553:270:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9563:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9609:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "9577:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9577:38:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "9567:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9624:77:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9689:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9694:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9631:57:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9631:70:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9624:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9736:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9743:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9732:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9732:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9750:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9755:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "9710:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9710:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9710:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9771:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9782:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9809:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "9787:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9787:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9778:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9778:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9771:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9534:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9541:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9549:3:1",
														"type": ""
													}
												],
												"src": "9463:360:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9921:272:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9931:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9978:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "9945:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9945:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "9935:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9993:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10059:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10064:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10000:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10000:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9993:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10106:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10113:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10102:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10102:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10120:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10125:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "10080:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10080:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10080:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10141:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10152:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10179:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "10157:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10157:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10148:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10148:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10141:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9902:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9909:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9917:3:1",
														"type": ""
													}
												],
												"src": "9829:364:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10345:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10355:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10421:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10426:2:1",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10362:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10362:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10355:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10527:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																	"nodeType": "YulIdentifier",
																	"src": "10438:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10438:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10438:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10540:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10551:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10556:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10547:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10547:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10540:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10333:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10341:3:1",
														"type": ""
													}
												],
												"src": "10199:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10717:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10727:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10793:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10798:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10734:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10734:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10727:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10899:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																	"nodeType": "YulIdentifier",
																	"src": "10810:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10810:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10810:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10912:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10923:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10928:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10919:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10919:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10912:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10705:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10713:3:1",
														"type": ""
													}
												],
												"src": "10571:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11089:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11099:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11165:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11170:2:1",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11106:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11106:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11099:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11271:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																	"nodeType": "YulIdentifier",
																	"src": "11182:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11182:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11182:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11284:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11295:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11300:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11291:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11291:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11284:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11077:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11085:3:1",
														"type": ""
													}
												],
												"src": "10943:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11461:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11471:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11537:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11542:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11478:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11478:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11471:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11643:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																	"nodeType": "YulIdentifier",
																	"src": "11554:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11554:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11554:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11656:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11667:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11672:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11663:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11663:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11656:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11449:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11457:3:1",
														"type": ""
													}
												],
												"src": "11315:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11833:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11843:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11909:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11914:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11850:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11850:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11843:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12015:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																	"nodeType": "YulIdentifier",
																	"src": "11926:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11926:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11926:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12028:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12039:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12044:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12035:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12035:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12028:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11821:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11829:3:1",
														"type": ""
													}
												],
												"src": "11687:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12205:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12215:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12281:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12286:2:1",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12222:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12222:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12215:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12387:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																	"nodeType": "YulIdentifier",
																	"src": "12298:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12298:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12298:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12400:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12411:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12416:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12407:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12407:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12400:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12193:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12201:3:1",
														"type": ""
													}
												],
												"src": "12059:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12577:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12587:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12653:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12658:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12594:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12594:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12587:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12759:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																	"nodeType": "YulIdentifier",
																	"src": "12670:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12670:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12670:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12772:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12783:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12788:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12779:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12779:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12772:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12565:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12573:3:1",
														"type": ""
													}
												],
												"src": "12431:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12949:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12959:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13025:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13030:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12966:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12966:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12959:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13131:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																	"nodeType": "YulIdentifier",
																	"src": "13042:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13042:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13042:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13144:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13155:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13160:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13151:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13151:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13144:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12937:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12945:3:1",
														"type": ""
													}
												],
												"src": "12803:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13321:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13331:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13397:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13402:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13338:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13338:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13331:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13503:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																	"nodeType": "YulIdentifier",
																	"src": "13414:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13414:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13414:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13516:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13527:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13532:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13523:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13523:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13516:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13309:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13317:3:1",
														"type": ""
													}
												],
												"src": "13175:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13693:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13703:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13769:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13774:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13710:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13710:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13703:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13875:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																	"nodeType": "YulIdentifier",
																	"src": "13786:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13786:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13786:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13888:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13899:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13904:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13895:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13895:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13888:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13681:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13689:3:1",
														"type": ""
													}
												],
												"src": "13547:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13974:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13991:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14014:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "13996:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13996:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13984:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13984:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13984:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13962:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13969:3:1",
														"type": ""
													}
												],
												"src": "13919:108:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14098:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14115:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14138:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "14120:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14120:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14108:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14108:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14108:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14086:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14093:3:1",
														"type": ""
													}
												],
												"src": "14033:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14485:725:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14495:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14507:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14518:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14503:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14503:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14495:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14576:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14589:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14600:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14585:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14585:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14532:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14532:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14532:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14657:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14670:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14681:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14666:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14666:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14613:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14613:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14613:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14706:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14717:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14702:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14702:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14726:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14732:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14722:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14722:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14695:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14695:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14695:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14752:116:1",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "14854:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14863:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14760:93:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14760:108:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14752:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14889:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14900:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14885:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14885:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14909:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14915:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14905:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14905:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14878:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14878:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14878:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14935:116:1",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "15037:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15046:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14943:93:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14943:108:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14935:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15072:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15083:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15068:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15068:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15093:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15099:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15089:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15089:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15061:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15061:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15061:49:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15119:84:1",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "15189:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15198:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15127:61:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15127:76:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15119:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14425:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "14437:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "14445:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "14453:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14461:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14469:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14480:4:1",
														"type": ""
													}
												],
												"src": "14157:1053:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15444:523:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15454:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15466:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15477:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15462:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15462:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15454:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15535:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15548:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15559:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15544:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15544:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15491:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15491:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15491:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15616:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15629:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15640:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15625:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15625:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15572:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15572:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15572:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "15698:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15711:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15722:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15707:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15707:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15654:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15654:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15654:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "15780:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15793:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15804:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15789:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15789:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15736:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15736:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15736:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15829:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15840:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15825:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15825:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15850:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15856:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15846:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15846:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15818:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15818:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15818:49:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15876:84:1",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "15946:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15955:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15884:61:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15884:76:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15876:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15384:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "15396:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15404:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15412:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15420:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15428:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15439:4:1",
														"type": ""
													}
												],
												"src": "15216:751:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16121:225:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16131:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16143:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16154:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16139:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16139:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16131:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16178:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16189:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16174:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16174:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16197:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16203:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16193:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16193:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16167:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16167:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16167:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16223:116:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16325:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16334:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16231:93:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16231:108:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16223:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16093:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16105:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16116:4:1",
														"type": ""
													}
												],
												"src": "15973:373:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16578:408:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16588:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16600:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16611:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16596:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16596:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16588:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16635:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16646:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16631:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16631:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16654:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16660:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16650:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16650:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16624:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16624:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16624:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16680:116:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16782:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16791:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16688:93:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16688:108:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16680:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16817:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16828:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16813:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16813:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16837:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16843:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16833:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16833:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16806:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16806:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16806:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16863:116:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16965:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16974:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16871:93:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16871:108:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16863:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16542:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16554:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16562:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16573:4:1",
														"type": ""
													}
												],
												"src": "16352:634:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17084:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17094:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17106:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17117:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17102:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17102:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17094:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17168:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17181:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17192:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17177:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17177:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17130:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17130:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17130:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17056:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17068:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17079:4:1",
														"type": ""
													}
												],
												"src": "16992:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17326:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17336:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17348:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17359:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17344:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17344:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17336:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17383:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17394:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17379:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17379:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17402:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17408:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17398:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17398:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17372:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17372:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17372:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17428:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17500:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17509:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17436:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17436:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17428:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17298:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17310:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17321:4:1",
														"type": ""
													}
												],
												"src": "17208:313:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17698:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17708:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17720:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17731:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17716:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17716:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17708:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17755:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17766:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17751:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17751:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17774:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17780:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17770:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17770:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17744:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17744:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17744:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17800:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17934:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17808:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17808:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17800:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17678:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17693:4:1",
														"type": ""
													}
												],
												"src": "17527:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18123:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18133:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18145:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18156:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18141:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18141:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18133:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18180:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18191:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18176:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18176:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18199:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18205:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18195:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18195:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18169:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18169:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18169:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18225:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18359:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18233:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18233:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18225:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18103:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18118:4:1",
														"type": ""
													}
												],
												"src": "17952:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18548:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18558:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18570:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18581:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18566:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18566:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18558:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18605:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18616:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18601:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18601:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18624:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18630:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18620:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18620:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18594:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18594:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18594:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18650:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18784:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18658:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18658:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18650:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18528:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18543:4:1",
														"type": ""
													}
												],
												"src": "18377:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18973:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18983:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18995:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19006:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18991:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18991:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18983:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19030:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19041:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19026:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19026:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19049:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19055:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19045:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19045:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19019:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19019:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19019:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19075:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19209:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19083:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19083:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19075:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18953:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18968:4:1",
														"type": ""
													}
												],
												"src": "18802:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19398:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19408:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19420:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19431:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19416:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19416:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19408:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19455:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19466:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19451:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19451:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19474:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19480:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19470:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19470:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19444:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19444:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19444:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19500:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19634:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19508:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19508:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19500:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19378:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19393:4:1",
														"type": ""
													}
												],
												"src": "19227:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19823:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19833:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19845:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19856:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19841:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19841:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19833:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19880:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19891:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19876:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19876:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19899:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19905:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19895:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19895:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19869:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19869:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19869:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19925:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20059:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19933:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19933:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19925:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19803:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19818:4:1",
														"type": ""
													}
												],
												"src": "19652:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20248:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20258:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20270:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20281:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20266:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20266:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20258:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20305:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20316:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20301:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20301:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20324:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20330:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20320:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20320:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20294:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20294:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20294:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20350:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20484:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20358:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20358:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20350:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20228:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20243:4:1",
														"type": ""
													}
												],
												"src": "20077:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20673:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20683:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20695:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20706:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20691:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20691:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20683:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20730:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20741:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20726:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20726:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20749:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20755:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20745:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20745:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20719:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20719:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20719:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20775:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20909:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20783:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20783:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20775:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20653:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20668:4:1",
														"type": ""
													}
												],
												"src": "20502:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21098:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21108:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21120:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21131:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21116:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21116:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21108:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21155:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21166:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21151:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21151:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21174:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21180:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21170:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21170:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21144:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21144:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21144:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21200:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21334:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21208:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21208:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21200:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21078:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21093:4:1",
														"type": ""
													}
												],
												"src": "20927:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21523:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21533:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21545:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21556:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21541:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21541:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21533:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21580:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21591:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21576:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21576:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21599:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21605:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21595:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21595:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21569:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21569:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21569:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21625:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21759:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21633:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21633:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21625:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21503:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21518:4:1",
														"type": ""
													}
												],
												"src": "21352:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21875:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21885:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21897:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21908:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21893:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21893:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21885:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "21965:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21978:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21989:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21974:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21974:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21921:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21921:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21921:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21847:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "21859:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21870:4:1",
														"type": ""
													}
												],
												"src": "21777:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22131:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22141:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22153:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22164:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22149:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22149:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22141:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "22221:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22234:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22245:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22230:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22230:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22177:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22177:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22177:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "22302:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22315:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22326:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22311:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22311:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22258:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22258:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22258:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22095:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "22107:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22115:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22126:4:1",
														"type": ""
													}
												],
												"src": "22005:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22384:88:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22394:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "22404:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22404:20:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "22394:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "22453:6:1"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "22461:4:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "22433:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22433:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22433:33:1"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "22368:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22377:6:1",
														"type": ""
													}
												],
												"src": "22343:129:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22518:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22528:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22544:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "22538:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22538:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "22528:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22511:6:1",
														"type": ""
													}
												],
												"src": "22478:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22641:229:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22746:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "22748:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22748:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22748:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "22718:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22726:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "22715:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22715:30:1"
															},
															"nodeType": "YulIf",
															"src": "22712:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22778:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "22790:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22798:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "22786:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22786:17:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "22778:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "22840:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "22852:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22858:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22848:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22848:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "22840:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "22625:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "22636:4:1",
														"type": ""
													}
												],
												"src": "22559:311:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22958:229:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23063:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "23065:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23065:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23065:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23035:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23043:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "23032:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23032:30:1"
															},
															"nodeType": "YulIf",
															"src": "23029:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23095:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23107:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23115:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "23103:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23103:17:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "23095:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23157:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "23169:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23175:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23165:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23165:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "23157:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "22942:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "22953:4:1",
														"type": ""
													}
												],
												"src": "22876:311:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23259:241:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23364:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "23366:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23366:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23366:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23336:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23344:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "23333:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23333:30:1"
															},
															"nodeType": "YulIf",
															"src": "23330:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23396:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23426:6:1"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "23404:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23404:29:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "23396:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23470:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "23482:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23488:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23478:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23478:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "23470:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "23243:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "23254:4:1",
														"type": ""
													}
												],
												"src": "23193:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23578:60:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23588:11:1",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "23596:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "23588:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23609:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "23621:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23626:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23617:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23617:14:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "23609:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "23565:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "23573:4:1",
														"type": ""
													}
												],
												"src": "23506:132:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23718:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23729:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23745:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "23739:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23739:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "23729:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23701:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "23711:6:1",
														"type": ""
													}
												],
												"src": "23644:114:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23822:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23833:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23849:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "23843:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23843:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "23833:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23805:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "23815:6:1",
														"type": ""
													}
												],
												"src": "23764:98:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23927:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23938:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23954:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "23948:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23948:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "23938:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23910:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "23920:6:1",
														"type": ""
													}
												],
												"src": "23868:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24048:38:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24058:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "24070:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24075:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24066:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24066:14:1"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "24058:4:1"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "24035:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "24043:4:1",
														"type": ""
													}
												],
												"src": "23973:113:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24203:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24220:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24225:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24213:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24213:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24213:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24241:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24260:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24265:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24256:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24256:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "24241:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24175:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24180:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "24191:11:1",
														"type": ""
													}
												],
												"src": "24092:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24377:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24394:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24399:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24387:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24387:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24387:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24415:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24434:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24439:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24430:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24430:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "24415:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24349:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24354:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "24365:11:1",
														"type": ""
													}
												],
												"src": "24282:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24552:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24569:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24574:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24562:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24562:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24562:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24590:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24609:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24614:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24605:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24605:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "24590:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24524:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24529:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "24540:11:1",
														"type": ""
													}
												],
												"src": "24456:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24675:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24685:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "24708:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "24690:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24690:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "24685:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "24719:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "24742:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "24724:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24724:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "24719:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24882:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "24884:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24884:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24884:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "24803:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24810:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "24878:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24806:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24806:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "24800:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24800:81:1"
															},
															"nodeType": "YulIf",
															"src": "24797:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24914:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "24925:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "24928:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24921:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24921:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "24914:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "24662:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "24665:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "24671:3:1",
														"type": ""
													}
												],
												"src": "24631:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24987:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24997:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25026:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "25008:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25008:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "24997:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24969:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "24979:7:1",
														"type": ""
													}
												],
												"src": "24942:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25086:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25096:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "25121:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "25114:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25114:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "25107:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25107:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "25096:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25068:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "25078:7:1",
														"type": ""
													}
												],
												"src": "25044:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25184:105:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25194:89:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25209:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25216:66:1",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "25205:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25205:78:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "25194:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25166:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "25176:7:1",
														"type": ""
													}
												],
												"src": "25140:149:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25340:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25350:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25365:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25372:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "25361:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25361:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "25350:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25322:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "25332:7:1",
														"type": ""
													}
												],
												"src": "25295:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25472:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25482:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "25493:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "25482:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25454:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "25464:7:1",
														"type": ""
													}
												],
												"src": "25427:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25561:103:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "25584:3:1"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "25589:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "25594:6:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "25571:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25571:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25571:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "25642:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "25647:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25638:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25638:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25656:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25631:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25631:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25631:27:1"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "25543:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "25548:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "25553:6:1",
														"type": ""
													}
												],
												"src": "25510:154:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25719:258:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "25729:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "25738:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "25733:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25798:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "25823:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "25828:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "25819:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "25819:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "25842:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "25847:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "25838:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "25838:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "25832:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "25832:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "25812:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25812:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25812:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "25759:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "25762:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "25756:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25756:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "25770:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "25772:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "25781:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "25784:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "25777:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25777:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "25772:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "25752:3:1",
																"statements": []
															},
															"src": "25748:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25895:76:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "25945:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "25950:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "25941:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "25941:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "25959:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "25934:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25934:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25934:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "25876:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "25879:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "25873:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25873:13:1"
															},
															"nodeType": "YulIf",
															"src": "25870:2:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "25701:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "25706:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "25711:6:1",
														"type": ""
													}
												],
												"src": "25670:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26034:269:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26044:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "26058:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26064:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "26054:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26054:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "26044:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26075:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "26105:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26111:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "26101:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26101:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "26079:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26152:51:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "26166:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "26180:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26188:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "26176:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26176:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "26166:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "26132:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "26125:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26125:26:1"
															},
															"nodeType": "YulIf",
															"src": "26122:2:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26255:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "26269:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26269:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26269:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "26219:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "26242:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26250:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "26239:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26239:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "26216:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26216:38:1"
															},
															"nodeType": "YulIf",
															"src": "26213:2:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "26018:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "26027:6:1",
														"type": ""
													}
												],
												"src": "25983:320:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26352:238:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26362:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "26384:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "26414:4:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "26392:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26392:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26380:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26380:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "26366:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26531:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "26533:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26533:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26533:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "26474:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26486:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "26471:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26471:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "26510:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "26522:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "26507:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26507:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "26468:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26468:62:1"
															},
															"nodeType": "YulIf",
															"src": "26465:2:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26569:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "26573:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26562:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26562:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26562:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "26338:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "26346:4:1",
														"type": ""
													}
												],
												"src": "26309:281:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26639:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26649:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26676:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "26658:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26658:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "26649:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26772:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "26774:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26774:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26774:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26697:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26704:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "26694:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26694:77:1"
															},
															"nodeType": "YulIf",
															"src": "26691:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26803:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26814:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26821:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26810:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26810:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "26803:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26625:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "26635:3:1",
														"type": ""
													}
												],
												"src": "26596:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26863:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26880:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26883:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26873:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26873:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26873:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26977:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26980:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26970:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26970:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26970:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27001:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27004:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "26994:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26994:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26994:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "26835:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27049:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27066:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27069:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27059:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27059:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27059:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27163:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27166:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27156:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27156:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27156:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27187:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27190:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "27180:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27180:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27180:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "27021:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27235:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27252:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27255:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27245:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27245:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27245:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27349:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27352:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27342:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27342:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27342:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27373:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27376:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "27366:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27366:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27366:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "27207:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27432:144:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "27469:101:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "27498:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "27501:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "27504:1:1",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "27483:14:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27483:23:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "27483:23:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "27519:41:1",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "27557:1:1",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "27551:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "27551:8:1"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_224_unsigned",
																				"nodeType": "YulIdentifier",
																				"src": "27526:24:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27526:34:1"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "27519:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "27448:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27448:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27466:1:1",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "27445:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27445:23:1"
															},
															"nodeType": "YulIf",
															"src": "27442:2:1"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "27428:3:1",
														"type": ""
													}
												],
												"src": "27393:183:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27630:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27640:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "27658:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27665:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27654:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27654:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27674:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "27670:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27670:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "27650:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27650:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "27640:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27613:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "27623:6:1",
														"type": ""
													}
												],
												"src": "27582:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27743:53:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27753:36:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27778:3:1",
																		"type": "",
																		"value": "224"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27783:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "27774:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27774:15:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "27753:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_224_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27724:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "27734:8:1",
														"type": ""
													}
												],
												"src": "27690:106:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27908:133:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "27930:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27938:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27926:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27926:14:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "27942:34:1",
																		"type": "",
																		"value": "ERC1155: transfer to non ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27919:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27919:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27919:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "27998:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28006:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27994:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27994:15:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28011:22:1",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27987:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27987:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27987:47:1"
														}
													]
												},
												"name": "store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "27900:6:1",
														"type": ""
													}
												],
												"src": "27802:239:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28153:121:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28175:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28183:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28171:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28171:14:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28187:34:1",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28164:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28164:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28164:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28243:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28251:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28239:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28239:15:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28256:10:1",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28232:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28232:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28232:35:1"
														}
													]
												},
												"name": "store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "28145:6:1",
														"type": ""
													}
												],
												"src": "28047:227:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28386:124:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28408:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28416:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28404:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28404:14:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28420:34:1",
																		"type": "",
																		"value": "ERC1155: balance query for the z"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28397:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28397:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28397:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28476:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28484:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28472:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28472:15:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28489:13:1",
																		"type": "",
																		"value": "ero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28465:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28465:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28465:38:1"
														}
													]
												},
												"name": "store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "28378:6:1",
														"type": ""
													}
												],
												"src": "28280:230:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28622:122:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28644:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28652:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28640:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28640:14:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28656:34:1",
																		"type": "",
																		"value": "ERC1155: caller is not owner nor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28633:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28633:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28633:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28712:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28720:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28708:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28708:15:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28725:11:1",
																		"type": "",
																		"value": " approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28701:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28701:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28701:36:1"
														}
													]
												},
												"name": "store_literal_in_memory_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "28614:6:1",
														"type": ""
													}
												],
												"src": "28516:228:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28856:118:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28878:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28886:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28874:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28874:14:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28890:34:1",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28867:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28867:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28867:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28946:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28954:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28942:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28942:15:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28959:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28935:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28935:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28935:32:1"
														}
													]
												},
												"name": "store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "28848:6:1",
														"type": ""
													}
												],
												"src": "28750:224:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29086:131:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29108:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29116:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29104:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29104:14:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29120:34:1",
																		"type": "",
																		"value": "ERC1155: transfer caller is not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29097:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29097:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29097:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29176:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29184:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29172:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29172:15:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29189:20:1",
																		"type": "",
																		"value": "owner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29165:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29165:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29165:45:1"
														}
													]
												},
												"name": "store_literal_in_memory_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "29078:6:1",
														"type": ""
													}
												],
												"src": "28980:237:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29329:123:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29351:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29359:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29347:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29347:14:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29363:34:1",
																		"type": "",
																		"value": "ERC1155: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29340:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29340:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29340:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29419:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29427:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29415:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29415:15:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29432:12:1",
																		"type": "",
																		"value": "r transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29408:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29408:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29408:37:1"
														}
													]
												},
												"name": "store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "29321:6:1",
														"type": ""
													}
												],
												"src": "29223:229:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29564:122:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29586:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29594:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29582:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29582:14:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29598:34:1",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29575:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29575:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29575:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29654:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29662:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29650:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29650:15:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29667:11:1",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29643:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29643:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29643:36:1"
														}
													]
												},
												"name": "store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "29556:6:1",
														"type": ""
													}
												],
												"src": "29458:228:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29798:122:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29820:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29828:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29816:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29816:14:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29832:34:1",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29809:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29809:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29809:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29888:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29896:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29884:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29884:15:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29901:11:1",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29877:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29877:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29877:36:1"
														}
													]
												},
												"name": "store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "29790:6:1",
														"type": ""
													}
												],
												"src": "29692:228:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30032:121:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30054:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30062:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30050:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30050:14:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30066:34:1",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30043:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30043:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30043:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30122:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30130:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30118:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30118:15:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30135:10:1",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30111:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30111:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30111:35:1"
														}
													]
												},
												"name": "store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "30024:6:1",
														"type": ""
													}
												],
												"src": "29926:227:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30202:668:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30242:9:1",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "30244:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "30218:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30218:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30236:4:1",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "30215:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30215:26:1"
															},
															"nodeType": "YulIf",
															"src": "30212:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "30261:32:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "30273:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30273:20:1"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "30265:4:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "30317:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30323:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "30330:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30330:16:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30348:1:1",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "30326:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30326:24:1"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "30302:14:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30302:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30302:49:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "30361:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "30381:4:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "30375:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30375:11:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "30365:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30512:29:1",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "30526:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "30417:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30425:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "30414:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30414:30:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "30465:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "30473:4:1",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "30461:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30461:17:1"
																			},
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "30480:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30480:16:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "30458:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30458:39:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "30398:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30398:113:1"
															},
															"nodeType": "YulIf",
															"src": "30395:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "30551:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "30566:4:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "30572:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30562:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30562:17:1"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "30555:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "30588:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "30608:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "30602:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30602:10:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "30592:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30655:9:1",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "30657:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "30627:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30635:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "30624:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30624:30:1"
															},
															"nodeType": "YulIf",
															"src": "30621:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "30674:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "msg",
																				"nodeType": "YulIdentifier",
																				"src": "30693:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30698:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30689:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30689:14:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "30705:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30685:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30685:27:1"
															},
															"variables": [
																{
																	"name": "end",
																	"nodeType": "YulTypedName",
																	"src": "30678:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30769:9:1",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "30771:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "30727:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "30736:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "30746:14:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "30746:16:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "30764:1:1",
																						"type": "",
																						"value": "4"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "30742:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30742:24:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30732:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30732:35:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "30724:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30724:44:1"
															},
															"nodeType": "YulIf",
															"src": "30721:2:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "30808:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "30818:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "30830:4:1",
																						"type": "",
																						"value": "0x20"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "30836:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "30826:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30826:17:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30814:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30814:30:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "30788:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30788:57:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30788:57:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30854:10:1",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "30861:3:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "30854:3:1"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "30198:3:1",
														"type": ""
													}
												],
												"src": "30159:711:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30919:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30976:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "30985:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "30988:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "30978:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "30978:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "30978:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "30942:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "30967:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "30949:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30949:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "30939:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30939:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "30932:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30932:43:1"
															},
															"nodeType": "YulIf",
															"src": "30929:2:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "30912:5:1",
														"type": ""
													}
												],
												"src": "30876:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31044:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "31098:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "31107:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "31110:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "31100:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "31100:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "31100:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "31067:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "31089:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "31074:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "31074:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "31064:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31064:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "31057:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "31057:40:1"
															},
															"nodeType": "YulIf",
															"src": "31054:2:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "31037:5:1",
														"type": ""
													}
												],
												"src": "31004:116:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31168:78:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "31224:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "31233:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "31236:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "31226:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "31226:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "31226:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "31191:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "31215:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "31198:16:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "31198:23:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "31188:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31188:34:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "31181:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "31181:42:1"
															},
															"nodeType": "YulIf",
															"src": "31178:2:1"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "31161:5:1",
														"type": ""
													}
												],
												"src": "31126:120:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31295:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "31352:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "31361:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "31364:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "31354:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "31354:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "31354:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "31318:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "31343:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "31325:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "31325:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "31315:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31315:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "31308:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "31308:43:1"
															},
															"nodeType": "YulIf",
															"src": "31305:2:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "31288:5:1",
														"type": ""
													}
												],
												"src": "31252:122:1"
											}
										]
									},
									"contents": "{\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n        mstore(array, length) dst := add(array, 0x20)\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) { revert(0, 0) }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementPos := src\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n        mstore(array, length) dst := add(array, 0x20)\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) { revert(0, 0) }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementPos := src\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 52)\n        store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function return_data_selector() -> sig {\n        if gt(returndatasize(), 3) {\n            returndatacopy(0, 0, 4)\n            sig := shift_right_224_unsigned(mload(0))\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function shift_right_224_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(224, value)\n\n    }\n\n    function store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: transfer to non ERC1155\")\n\n        mstore(add(memPtr, 32), \"Receiver implementer\")\n\n    }\n\n    function store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: ERC1155Receiver rejecte\")\n\n        mstore(add(memPtr, 32), \"d tokens\")\n\n    }\n\n    function store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: balance query for the z\")\n\n        mstore(add(memPtr, 32), \"ero address\")\n\n    }\n\n    function store_literal_in_memory_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: caller is not owner nor\")\n\n        mstore(add(memPtr, 32), \" approved\")\n\n    }\n\n    function store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: transfer to the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function store_literal_in_memory_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: transfer caller is not \")\n\n        mstore(add(memPtr, 32), \"owner nor approved\")\n\n    }\n\n    function store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r transfer\")\n\n    }\n\n    function store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: setting approval status\")\n\n        mstore(add(memPtr, 32), \" for self\")\n\n    }\n\n    function store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: accounts and ids length\")\n\n        mstore(add(memPtr, 32), \" mismatch\")\n\n    }\n\n    function store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: ids and amounts length \")\n\n        mstore(add(memPtr, 32), \"mismatch\")\n\n    }\n\n    function try_decode_error_message() -> ret {\n        if lt(returndatasize(), 0x44) { leave }\n\n        let data := allocate_unbounded()\n        returndatacopy(data, 4, sub(returndatasize(), 4))\n\n        let offset := mload(data)\n        if or(\n            gt(offset, 0xffffffffffffffff),\n            gt(add(offset, 0x24), returndatasize())\n            ) {\n            leave\n        }\n\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, 0xffffffffffffffff) { leave }\n\n        let end := add(add(msg, 0x20), length)\n        if gt(end, add(data, sub(returndatasize(), 4))) { leave }\n\n        finalize_allocation(data, add(offset, add(0x20, length)))\n        ret := msg\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f414610138578063a22cb46514610168578063e985e9c514610184578063f242432a146101b457610087565b8062fdd58e1461008c57806301ffc9a7146100bc5780630e89341c146100ec5780632eb2c2d61461011c575b600080fd5b6100a660048036038101906100a191906117df565b6101d0565b6040516100b39190611e1c565b60405180910390f35b6100d660048036038101906100d19190611887565b610299565b6040516100e39190611c9f565b60405180910390f35b610106600480360381019061010191906118d9565b61037b565b6040516101139190611cba565b60405180910390f35b61013660048036038101906101319190611655565b61040f565b005b610152600480360381019061014d919061181b565b6104b0565b60405161015f9190611c46565b60405180910390f35b610182600480360381019061017d91906117a3565b610661565b005b61019e60048036038101906101999190611619565b610677565b6040516101ab9190611c9f565b60405180910390f35b6101ce60048036038101906101c99190611714565b61070b565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610241576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023890611d1c565b60405180910390fd5b60008083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061036457507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103745750610373826107ac565b5b9050919050565b60606002805461038a9061208b565b80601f01602080910402602001604051908101604052809291908181526020018280546103b69061208b565b80156104035780601f106103d857610100808354040283529160200191610403565b820191906000526020600020905b8154815290600101906020018083116103e657829003601f168201915b50505050509050919050565b610417610816565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16148061045d575061045c85610457610816565b610677565b5b61049c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049390611d7c565b60405180910390fd5b6104a9858585858561081e565b5050505050565b606081518351146104f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ed90611ddc565b60405180910390fd5b6000835167ffffffffffffffff811115610539577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156105675781602001602082028036833780820191505090505b50905060005b8451811015610656576106008582815181106105b2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101518583815181106105f3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516101d0565b828281518110610639577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250508061064f906120ee565b905061056d565b508091505092915050565b61067361066c610816565b8383610b7e565b5050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610713610816565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161480610759575061075885610753610816565b610677565b5b610798576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078f90611d3c565b60405180910390fd5b6107a58585858585610ceb565b5050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b8151835114610862576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085990611dfc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156108d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c990611d5c565b60405180910390fd5b60006108dc610816565b90506108ec818787878787610f6d565b60005b8451811015610ae9576000858281518110610933577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015190506000858381518110610978577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101519050600080600084815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1090611d9c565b60405180910390fd5b81810360008085815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160008085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ace9190611f7f565b9250508190555050505080610ae2906120ee565b90506108ef565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610b60929190611c68565b60405180910390a4610b76818787878787610f75565b505050505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610bed576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be490611dbc565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610cde9190611c9f565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610d5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5290611d5c565b60405180910390fd5b6000610d65610816565b9050610d85818787610d768861115c565b610d7f8861115c565b87610f6d565b600080600086815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905083811015610e1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1390611d9c565b60405180910390fd5b83810360008087815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508360008087815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ed19190611f7f565b925050819055508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628888604051610f4e929190611e37565b60405180910390a4610f64828888888888611222565b50505050505050565b505050505050565b610f948473ffffffffffffffffffffffffffffffffffffffff16611409565b15611154578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401610fda959493929190611b84565b602060405180830381600087803b158015610ff457600080fd5b505af192505050801561102557506040513d601f19601f8201168201806040525081019061102291906118b0565b60015b6110cb576110316121c4565b806308c379a0141561108e575061104661251a565b806110515750611090565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110859190611cba565b60405180910390fd5b505b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110c290611cdc565b60405180910390fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611152576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161114990611cfc565b60405180910390fd5b505b505050505050565b60606000600167ffffffffffffffff8111156111a1577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156111cf5781602001602082028036833780820191505090505b509050828160008151811061120d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101818152505080915050919050565b6112418473ffffffffffffffffffffffffffffffffffffffff16611409565b15611401578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401611287959493929190611bec565b602060405180830381600087803b1580156112a157600080fd5b505af19250505080156112d257506040513d601f19601f820116820180604052508101906112cf91906118b0565b60015b611378576112de6121c4565b806308c379a0141561133b57506112f361251a565b806112fe575061133d565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113329190611cba565b60405180910390fd5b505b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161136f90611cdc565b60405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146113ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113f690611cfc565b60405180910390fd5b505b505050505050565b600080823b905060008111915050919050565b600061142f61142a84611e85565b611e60565b9050808382526020820190508285602086028201111561144e57600080fd5b60005b8581101561147e57816114648882611532565b845260208401935060208301925050600181019050611451565b5050509392505050565b600061149b61149684611eb1565b611e60565b905080838252602082019050828560208602820111156114ba57600080fd5b60005b858110156114ea57816114d08882611604565b8452602084019350602083019250506001810190506114bd565b5050509392505050565b600061150761150284611edd565b611e60565b90508281526020810184848401111561151f57600080fd5b61152a848285612049565b509392505050565b600081359050611541816125b0565b92915050565b600082601f83011261155857600080fd5b813561156884826020860161141c565b91505092915050565b600082601f83011261158257600080fd5b8135611592848260208601611488565b91505092915050565b6000813590506115aa816125c7565b92915050565b6000813590506115bf816125de565b92915050565b6000815190506115d4816125de565b92915050565b600082601f8301126115eb57600080fd5b81356115fb8482602086016114f4565b91505092915050565b600081359050611613816125f5565b92915050565b6000806040838503121561162c57600080fd5b600061163a85828601611532565b925050602061164b85828601611532565b9150509250929050565b600080600080600060a0868803121561166d57600080fd5b600061167b88828901611532565b955050602061168c88828901611532565b945050604086013567ffffffffffffffff8111156116a957600080fd5b6116b588828901611571565b935050606086013567ffffffffffffffff8111156116d257600080fd5b6116de88828901611571565b925050608086013567ffffffffffffffff8111156116fb57600080fd5b611707888289016115da565b9150509295509295909350565b600080600080600060a0868803121561172c57600080fd5b600061173a88828901611532565b955050602061174b88828901611532565b945050604061175c88828901611604565b935050606061176d88828901611604565b925050608086013567ffffffffffffffff81111561178a57600080fd5b611796888289016115da565b9150509295509295909350565b600080604083850312156117b657600080fd5b60006117c485828601611532565b92505060206117d58582860161159b565b9150509250929050565b600080604083850312156117f257600080fd5b600061180085828601611532565b925050602061181185828601611604565b9150509250929050565b6000806040838503121561182e57600080fd5b600083013567ffffffffffffffff81111561184857600080fd5b61185485828601611547565b925050602083013567ffffffffffffffff81111561187157600080fd5b61187d85828601611571565b9150509250929050565b60006020828403121561189957600080fd5b60006118a7848285016115b0565b91505092915050565b6000602082840312156118c257600080fd5b60006118d0848285016115c5565b91505092915050565b6000602082840312156118eb57600080fd5b60006118f984828501611604565b91505092915050565b600061190e8383611b66565b60208301905092915050565b61192381611fd5565b82525050565b600061193482611f1e565b61193e8185611f4c565b935061194983611f0e565b8060005b8381101561197a5781516119618882611902565b975061196c83611f3f565b92505060018101905061194d565b5085935050505092915050565b61199081611fe7565b82525050565b60006119a182611f29565b6119ab8185611f5d565b93506119bb818560208601612058565b6119c4816121e6565b840191505092915050565b60006119da82611f34565b6119e48185611f6e565b93506119f4818560208601612058565b6119fd816121e6565b840191505092915050565b6000611a15603483611f6e565b9150611a2082612204565b604082019050919050565b6000611a38602883611f6e565b9150611a4382612253565b604082019050919050565b6000611a5b602b83611f6e565b9150611a66826122a2565b604082019050919050565b6000611a7e602983611f6e565b9150611a89826122f1565b604082019050919050565b6000611aa1602583611f6e565b9150611aac82612340565b604082019050919050565b6000611ac4603283611f6e565b9150611acf8261238f565b604082019050919050565b6000611ae7602a83611f6e565b9150611af2826123de565b604082019050919050565b6000611b0a602983611f6e565b9150611b158261242d565b604082019050919050565b6000611b2d602983611f6e565b9150611b388261247c565b604082019050919050565b6000611b50602883611f6e565b9150611b5b826124cb565b604082019050919050565b611b6f8161203f565b82525050565b611b7e8161203f565b82525050565b600060a082019050611b99600083018861191a565b611ba6602083018761191a565b8181036040830152611bb88186611929565b90508181036060830152611bcc8185611929565b90508181036080830152611be08184611996565b90509695505050505050565b600060a082019050611c01600083018861191a565b611c0e602083018761191a565b611c1b6040830186611b75565b611c286060830185611b75565b8181036080830152611c3a8184611996565b90509695505050505050565b60006020820190508181036000830152611c608184611929565b905092915050565b60006040820190508181036000830152611c828185611929565b90508181036020830152611c968184611929565b90509392505050565b6000602082019050611cb46000830184611987565b92915050565b60006020820190508181036000830152611cd481846119cf565b905092915050565b60006020820190508181036000830152611cf581611a08565b9050919050565b60006020820190508181036000830152611d1581611a2b565b9050919050565b60006020820190508181036000830152611d3581611a4e565b9050919050565b60006020820190508181036000830152611d5581611a71565b9050919050565b60006020820190508181036000830152611d7581611a94565b9050919050565b60006020820190508181036000830152611d9581611ab7565b9050919050565b60006020820190508181036000830152611db581611ada565b9050919050565b60006020820190508181036000830152611dd581611afd565b9050919050565b60006020820190508181036000830152611df581611b20565b9050919050565b60006020820190508181036000830152611e1581611b43565b9050919050565b6000602082019050611e316000830184611b75565b92915050565b6000604082019050611e4c6000830185611b75565b611e596020830184611b75565b9392505050565b6000611e6a611e7b565b9050611e7682826120bd565b919050565b6000604051905090565b600067ffffffffffffffff821115611ea057611e9f612195565b5b602082029050602081019050919050565b600067ffffffffffffffff821115611ecc57611ecb612195565b5b602082029050602081019050919050565b600067ffffffffffffffff821115611ef857611ef7612195565b5b611f01826121e6565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611f8a8261203f565b9150611f958361203f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611fca57611fc9612137565b5b828201905092915050565b6000611fe08261201f565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561207657808201518184015260208101905061205b565b83811115612085576000848401525b50505050565b600060028204905060018216806120a357607f821691505b602082108114156120b7576120b6612166565b5b50919050565b6120c6826121e6565b810181811067ffffffffffffffff821117156120e5576120e4612195565b5b80604052505050565b60006120f98261203f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561212c5761212b612137565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060033d11156121e35760046000803e6121e06000516121f7565b90505b90565b6000601f19601f8301169050919050565b60008160e01c9050919050565b7f455243313135353a207472616e7366657220746f206e6f6e204552433131353560008201527f526563656976657220696d706c656d656e746572000000000000000000000000602082015250565b7f455243313135353a204552433131353552656365697665722072656a6563746560008201527f6420746f6b656e73000000000000000000000000000000000000000000000000602082015250565b7f455243313135353a2062616c616e636520717565727920666f7220746865207a60008201527f65726f2061646472657373000000000000000000000000000000000000000000602082015250565b7f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260008201527f20617070726f7665640000000000000000000000000000000000000000000000602082015250565b7f455243313135353a207472616e7366657220746f20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f455243313135353a207472616e736665722063616c6c6572206973206e6f742060008201527f6f776e6572206e6f7220617070726f7665640000000000000000000000000000602082015250565b7f455243313135353a20696e73756666696369656e742062616c616e636520666f60008201527f72207472616e7366657200000000000000000000000000000000000000000000602082015250565b7f455243313135353a2073657474696e6720617070726f76616c2073746174757360008201527f20666f722073656c660000000000000000000000000000000000000000000000602082015250565b7f455243313135353a206163636f756e747320616e6420696473206c656e67746860008201527f206d69736d617463680000000000000000000000000000000000000000000000602082015250565b7f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060008201527f6d69736d61746368000000000000000000000000000000000000000000000000602082015250565b600060443d101561252a576125ad565b612532611e7b565b60043d036004823e80513d602482011167ffffffffffffffff8211171561255a5750506125ad565b808201805167ffffffffffffffff81111561257857505050506125ad565b80602083010160043d0385018111156125955750505050506125ad565b6125a4826020018501866120bd565b82955050505050505b90565b6125b981611fd5565b81146125c457600080fd5b50565b6125d081611fe7565b81146125db57600080fd5b50565b6125e781611ff3565b81146125f257600080fd5b50565b6125fe8161203f565b811461260957600080fd5b5056fea264697066735822122087f9a399984c43695048022fd22fd1edbcf77b323b57d25e9cad6ce1288b851964736f6c63430008010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x1B4 JUMPI PUSH2 0x87 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x11C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x17DF JUMP JUMPDEST PUSH2 0x1D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x1E1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x1887 JUMP JUMPDEST PUSH2 0x299 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x1C9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x18D9 JUMP JUMPDEST PUSH2 0x37B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x1CBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x1655 JUMP JUMPDEST PUSH2 0x40F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x181B JUMP JUMPDEST PUSH2 0x4B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x1C46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x17A3 JUMP JUMPDEST PUSH2 0x661 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x1619 JUMP JUMPDEST PUSH2 0x677 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x1C9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x1714 JUMP JUMPDEST PUSH2 0x70B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x241 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x238 SWAP1 PUSH2 0x1D1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x364 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x374 JUMPI POP PUSH2 0x373 DUP3 PUSH2 0x7AC JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x38A SWAP1 PUSH2 0x208B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3B6 SWAP1 PUSH2 0x208B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x403 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x403 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3E6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x417 PUSH2 0x816 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x45D JUMPI POP PUSH2 0x45C DUP6 PUSH2 0x457 PUSH2 0x816 JUMP JUMPDEST PUSH2 0x677 JUMP JUMPDEST JUMPDEST PUSH2 0x49C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x493 SWAP1 PUSH2 0x1D7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4A9 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x81E JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x4F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4ED SWAP1 PUSH2 0x1DDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x539 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x567 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x656 JUMPI PUSH2 0x600 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5B2 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x5F3 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1D0 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x639 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x64F SWAP1 PUSH2 0x20EE JUMP JUMPDEST SWAP1 POP PUSH2 0x56D JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x673 PUSH2 0x66C PUSH2 0x816 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xB7E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x713 PUSH2 0x816 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x759 JUMPI POP PUSH2 0x758 DUP6 PUSH2 0x753 PUSH2 0x816 JUMP JUMPDEST PUSH2 0x677 JUMP JUMPDEST JUMPDEST PUSH2 0x798 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78F SWAP1 PUSH2 0x1D3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7A5 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xCEB JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x862 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x859 SWAP1 PUSH2 0x1DFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C9 SWAP1 PUSH2 0x1D5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8DC PUSH2 0x816 JUMP JUMPDEST SWAP1 POP PUSH2 0x8EC DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xAE9 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x933 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x978 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xA19 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA10 SWAP1 PUSH2 0x1D9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xACE SWAP2 SWAP1 PUSH2 0x1F7F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0xAE2 SWAP1 PUSH2 0x20EE JUMP JUMPDEST SWAP1 POP PUSH2 0x8EF JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xB60 SWAP3 SWAP2 SWAP1 PUSH2 0x1C68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xB76 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xF75 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xBED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE4 SWAP1 PUSH2 0x1DBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xCDE SWAP2 SWAP1 PUSH2 0x1C9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD5B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD52 SWAP1 PUSH2 0x1D5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD65 PUSH2 0x816 JUMP JUMPDEST SWAP1 POP PUSH2 0xD85 DUP2 DUP8 DUP8 PUSH2 0xD76 DUP9 PUSH2 0x115C JUMP JUMPDEST PUSH2 0xD7F DUP9 PUSH2 0x115C JUMP JUMPDEST DUP8 PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xE1C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE13 SWAP1 PUSH2 0x1D9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP2 SUB PUSH1 0x0 DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x0 DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xED1 SWAP2 SWAP1 PUSH2 0x1F7F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0xF4E SWAP3 SWAP2 SWAP1 PUSH2 0x1E37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xF64 DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x1222 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF94 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1409 JUMP JUMPDEST ISZERO PUSH2 0x1154 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFDA SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B84 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1025 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1022 SWAP2 SWAP1 PUSH2 0x18B0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x10CB JUMPI PUSH2 0x1031 PUSH2 0x21C4 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x108E JUMPI POP PUSH2 0x1046 PUSH2 0x251A JUMP JUMPDEST DUP1 PUSH2 0x1051 JUMPI POP PUSH2 0x1090 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1085 SWAP2 SWAP1 PUSH2 0x1CBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C2 SWAP1 PUSH2 0x1CDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1152 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1149 SWAP1 PUSH2 0x1CFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11A1 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x11CF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x120D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1241 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1409 JUMP JUMPDEST ISZERO PUSH2 0x1401 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1287 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BEC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x12D2 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12CF SWAP2 SWAP1 PUSH2 0x18B0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1378 JUMPI PUSH2 0x12DE PUSH2 0x21C4 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x133B JUMPI POP PUSH2 0x12F3 PUSH2 0x251A JUMP JUMPDEST DUP1 PUSH2 0x12FE JUMPI POP PUSH2 0x133D JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1332 SWAP2 SWAP1 PUSH2 0x1CBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x136F SWAP1 PUSH2 0x1CDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x13FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13F6 SWAP1 PUSH2 0x1CFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x142F PUSH2 0x142A DUP5 PUSH2 0x1E85 JUMP JUMPDEST PUSH2 0x1E60 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x144E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x147E JUMPI DUP2 PUSH2 0x1464 DUP9 DUP3 PUSH2 0x1532 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1451 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x149B PUSH2 0x1496 DUP5 PUSH2 0x1EB1 JUMP JUMPDEST PUSH2 0x1E60 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x14BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x14EA JUMPI DUP2 PUSH2 0x14D0 DUP9 DUP3 PUSH2 0x1604 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x14BD JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1507 PUSH2 0x1502 DUP5 PUSH2 0x1EDD JUMP JUMPDEST PUSH2 0x1E60 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x151F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x152A DUP5 DUP3 DUP6 PUSH2 0x2049 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1541 DUP2 PUSH2 0x25B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1558 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1568 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x141C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1582 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1592 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1488 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15AA DUP2 PUSH2 0x25C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15BF DUP2 PUSH2 0x25DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x15D4 DUP2 PUSH2 0x25DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x15EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x15FB DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x14F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1613 DUP2 PUSH2 0x25F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x162C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x163A DUP6 DUP3 DUP7 ADD PUSH2 0x1532 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x164B DUP6 DUP3 DUP7 ADD PUSH2 0x1532 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x166D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x167B DUP9 DUP3 DUP10 ADD PUSH2 0x1532 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x168C DUP9 DUP3 DUP10 ADD PUSH2 0x1532 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16B5 DUP9 DUP3 DUP10 ADD PUSH2 0x1571 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16DE DUP9 DUP3 DUP10 ADD PUSH2 0x1571 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1707 DUP9 DUP3 DUP10 ADD PUSH2 0x15DA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x172C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x173A DUP9 DUP3 DUP10 ADD PUSH2 0x1532 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x174B DUP9 DUP3 DUP10 ADD PUSH2 0x1532 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x175C DUP9 DUP3 DUP10 ADD PUSH2 0x1604 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x176D DUP9 DUP3 DUP10 ADD PUSH2 0x1604 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x178A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1796 DUP9 DUP3 DUP10 ADD PUSH2 0x15DA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x17C4 DUP6 DUP3 DUP7 ADD PUSH2 0x1532 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17D5 DUP6 DUP3 DUP7 ADD PUSH2 0x159B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1800 DUP6 DUP3 DUP7 ADD PUSH2 0x1532 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1811 DUP6 DUP3 DUP7 ADD PUSH2 0x1604 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x182E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1848 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1854 DUP6 DUP3 DUP7 ADD PUSH2 0x1547 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1871 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x187D DUP6 DUP3 DUP7 ADD PUSH2 0x1571 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1899 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18A7 DUP5 DUP3 DUP6 ADD PUSH2 0x15B0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18D0 DUP5 DUP3 DUP6 ADD PUSH2 0x15C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18F9 DUP5 DUP3 DUP6 ADD PUSH2 0x1604 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x190E DUP4 DUP4 PUSH2 0x1B66 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1923 DUP2 PUSH2 0x1FD5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1934 DUP3 PUSH2 0x1F1E JUMP JUMPDEST PUSH2 0x193E DUP2 DUP6 PUSH2 0x1F4C JUMP JUMPDEST SWAP4 POP PUSH2 0x1949 DUP4 PUSH2 0x1F0E JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x197A JUMPI DUP2 MLOAD PUSH2 0x1961 DUP9 DUP3 PUSH2 0x1902 JUMP JUMPDEST SWAP8 POP PUSH2 0x196C DUP4 PUSH2 0x1F3F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x194D JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1990 DUP2 PUSH2 0x1FE7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19A1 DUP3 PUSH2 0x1F29 JUMP JUMPDEST PUSH2 0x19AB DUP2 DUP6 PUSH2 0x1F5D JUMP JUMPDEST SWAP4 POP PUSH2 0x19BB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2058 JUMP JUMPDEST PUSH2 0x19C4 DUP2 PUSH2 0x21E6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19DA DUP3 PUSH2 0x1F34 JUMP JUMPDEST PUSH2 0x19E4 DUP2 DUP6 PUSH2 0x1F6E JUMP JUMPDEST SWAP4 POP PUSH2 0x19F4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2058 JUMP JUMPDEST PUSH2 0x19FD DUP2 PUSH2 0x21E6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A15 PUSH1 0x34 DUP4 PUSH2 0x1F6E JUMP JUMPDEST SWAP2 POP PUSH2 0x1A20 DUP3 PUSH2 0x2204 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A38 PUSH1 0x28 DUP4 PUSH2 0x1F6E JUMP JUMPDEST SWAP2 POP PUSH2 0x1A43 DUP3 PUSH2 0x2253 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A5B PUSH1 0x2B DUP4 PUSH2 0x1F6E JUMP JUMPDEST SWAP2 POP PUSH2 0x1A66 DUP3 PUSH2 0x22A2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A7E PUSH1 0x29 DUP4 PUSH2 0x1F6E JUMP JUMPDEST SWAP2 POP PUSH2 0x1A89 DUP3 PUSH2 0x22F1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AA1 PUSH1 0x25 DUP4 PUSH2 0x1F6E JUMP JUMPDEST SWAP2 POP PUSH2 0x1AAC DUP3 PUSH2 0x2340 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AC4 PUSH1 0x32 DUP4 PUSH2 0x1F6E JUMP JUMPDEST SWAP2 POP PUSH2 0x1ACF DUP3 PUSH2 0x238F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AE7 PUSH1 0x2A DUP4 PUSH2 0x1F6E JUMP JUMPDEST SWAP2 POP PUSH2 0x1AF2 DUP3 PUSH2 0x23DE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B0A PUSH1 0x29 DUP4 PUSH2 0x1F6E JUMP JUMPDEST SWAP2 POP PUSH2 0x1B15 DUP3 PUSH2 0x242D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B2D PUSH1 0x29 DUP4 PUSH2 0x1F6E JUMP JUMPDEST SWAP2 POP PUSH2 0x1B38 DUP3 PUSH2 0x247C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B50 PUSH1 0x28 DUP4 PUSH2 0x1F6E JUMP JUMPDEST SWAP2 POP PUSH2 0x1B5B DUP3 PUSH2 0x24CB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B6F DUP2 PUSH2 0x203F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1B7E DUP2 PUSH2 0x203F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1B99 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x191A JUMP JUMPDEST PUSH2 0x1BA6 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x191A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1BB8 DUP2 DUP7 PUSH2 0x1929 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1BCC DUP2 DUP6 PUSH2 0x1929 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1BE0 DUP2 DUP5 PUSH2 0x1996 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1C01 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x191A JUMP JUMPDEST PUSH2 0x1C0E PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x191A JUMP JUMPDEST PUSH2 0x1C1B PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1B75 JUMP JUMPDEST PUSH2 0x1C28 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1B75 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1C3A DUP2 DUP5 PUSH2 0x1996 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C60 DUP2 DUP5 PUSH2 0x1929 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C82 DUP2 DUP6 PUSH2 0x1929 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1C96 DUP2 DUP5 PUSH2 0x1929 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CB4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1987 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CD4 DUP2 DUP5 PUSH2 0x19CF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CF5 DUP2 PUSH2 0x1A08 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D15 DUP2 PUSH2 0x1A2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D35 DUP2 PUSH2 0x1A4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D55 DUP2 PUSH2 0x1A71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D75 DUP2 PUSH2 0x1A94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D95 DUP2 PUSH2 0x1AB7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DB5 DUP2 PUSH2 0x1ADA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DD5 DUP2 PUSH2 0x1AFD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DF5 DUP2 PUSH2 0x1B20 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E15 DUP2 PUSH2 0x1B43 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E31 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B75 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E4C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1B75 JUMP JUMPDEST PUSH2 0x1E59 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B75 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E6A PUSH2 0x1E7B JUMP JUMPDEST SWAP1 POP PUSH2 0x1E76 DUP3 DUP3 PUSH2 0x20BD JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1EA0 JUMPI PUSH2 0x1E9F PUSH2 0x2195 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1ECC JUMPI PUSH2 0x1ECB PUSH2 0x2195 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1EF8 JUMPI PUSH2 0x1EF7 PUSH2 0x2195 JUMP JUMPDEST JUMPDEST PUSH2 0x1F01 DUP3 PUSH2 0x21E6 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F8A DUP3 PUSH2 0x203F JUMP JUMPDEST SWAP2 POP PUSH2 0x1F95 DUP4 PUSH2 0x203F JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1FCA JUMPI PUSH2 0x1FC9 PUSH2 0x2137 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FE0 DUP3 PUSH2 0x201F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2076 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x205B JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2085 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x20A3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x20B7 JUMPI PUSH2 0x20B6 PUSH2 0x2166 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20C6 DUP3 PUSH2 0x21E6 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x20E5 JUMPI PUSH2 0x20E4 PUSH2 0x2195 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20F9 DUP3 PUSH2 0x203F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x212C JUMPI PUSH2 0x212B PUSH2 0x2137 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x21E3 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH2 0x21E0 PUSH1 0x0 MLOAD PUSH2 0x21F7 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65726F2061646472657373000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20617070726F7665640000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572206E6F7220617070726F7665640000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x252A JUMPI PUSH2 0x25AD JUMP JUMPDEST PUSH2 0x2532 PUSH2 0x1E7B JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x255A JUMPI POP POP PUSH2 0x25AD JUMP JUMPDEST DUP1 DUP3 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2578 JUMPI POP POP POP POP PUSH2 0x25AD JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x4 RETURNDATASIZE SUB DUP6 ADD DUP2 GT ISZERO PUSH2 0x2595 JUMPI POP POP POP POP POP PUSH2 0x25AD JUMP JUMPDEST PUSH2 0x25A4 DUP3 PUSH1 0x20 ADD DUP6 ADD DUP7 PUSH2 0x20BD JUMP JUMPDEST DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x25B9 DUP2 PUSH2 0x1FD5 JUMP JUMPDEST DUP2 EQ PUSH2 0x25C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x25D0 DUP2 PUSH2 0x1FE7 JUMP JUMPDEST DUP2 EQ PUSH2 0x25DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x25E7 DUP2 PUSH2 0x1FF3 JUMP JUMPDEST DUP2 EQ PUSH2 0x25F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x25FE DUP2 PUSH2 0x203F JUMP JUMPDEST DUP2 EQ PUSH2 0x2609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0xF9 LOG3 SWAP10 SWAP9 0x4C NUMBER PUSH10 0x5048022FD22FD1EDBCF7 PUSH28 0x323B57D25E9CAD6CE1288B851964736F6C6343000801003300000000 ",
							"sourceMap": "21284:15165:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22949:231;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;21972:310;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;22693:105;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;24888:442;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;23346:524;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;23943:155;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;24170:168;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;24410:401;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;22949:231;23035:7;23082:1;23063:21;;:7;:21;;;;23055:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;23150:9;:13;23160:2;23150:13;;;;;;;;;;;:22;23164:7;23150:22;;;;;;;;;;;;;;;;23143:29;;22949:231;;;;:::o;21972:310::-;22074:4;22126:26;22111:41;;;:11;:41;;;;:110;;;;22184:37;22169:52;;;:11;:52;;;;22111:110;:163;;;;22238:36;22262:11;22238:23;:36::i;:::-;22111:163;22091:183;;21972:310;;;:::o;22693:105::-;22753:13;22786:4;22779:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22693:105;;;:::o;24888:442::-;25129:12;:10;:12::i;:::-;25121:20;;:4;:20;;;:60;;;;25145:36;25162:4;25168:12;:10;:12::i;:::-;25145:16;:36::i;:::-;25121:60;25099:160;;;;;;;;;;;;:::i;:::-;;;;;;;;;25270:52;25293:4;25299:2;25303:3;25308:7;25317:4;25270:22;:52::i;:::-;24888:442;;;;;:::o;23346:524::-;23502:16;23563:3;:10;23544:8;:15;:29;23536:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;23632:30;23679:8;:15;23665:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23632:63;;23713:9;23708:122;23732:8;:15;23728:1;:19;23708:122;;;23788:30;23798:8;23807:1;23798:11;;;;;;;;;;;;;;;;;;;;;;23811:3;23815:1;23811:6;;;;;;;;;;;;;;;;;;;;;;23788:9;:30::i;:::-;23769:13;23783:1;23769:16;;;;;;;;;;;;;;;;;;;;;:49;;;;;23749:3;;;;:::i;:::-;;;23708:122;;;;23849:13;23842:20;;;23346:524;;;;:::o;23943:155::-;24038:52;24057:12;:10;:12::i;:::-;24071:8;24081;24038:18;:52::i;:::-;23943:155;;:::o;24170:168::-;24269:4;24293:18;:27;24312:7;24293:27;;;;;;;;;;;;;;;:37;24321:8;24293:37;;;;;;;;;;;;;;;;;;;;;;;;;24286:44;;24170:168;;;;:::o;24410:401::-;24626:12;:10;:12::i;:::-;24618:20;;:4;:20;;;:60;;;;24642:36;24659:4;24665:12;:10;:12::i;:::-;24642:16;:36::i;:::-;24618:60;24596:151;;;;;;;;;;;;:::i;:::-;;;;;;;;;24758:45;24776:4;24782:2;24786;24790:6;24798:4;24758:17;:45::i;:::-;24410:401;;;;;:::o;13303:157::-;13388:4;13427:25;13412:40;;;:11;:40;;;;13405:47;;13303:157;;;:::o;602:98::-;655:7;682:10;675:17;;602:98;:::o;26972:1074::-;27199:7;:14;27185:3;:10;:28;27177:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;27291:1;27277:16;;:2;:16;;;;27269:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;27348:16;27367:12;:10;:12::i;:::-;27348:31;;27392:60;27413:8;27423:4;27429:2;27433:3;27438:7;27447:4;27392:20;:60::i;:::-;27470:9;27465:421;27489:3;:10;27485:1;:14;27465:421;;;27521:10;27534:3;27538:1;27534:6;;;;;;;;;;;;;;;;;;;;;;27521:19;;27555:14;27572:7;27580:1;27572:10;;;;;;;;;;;;;;;;;;;;;;27555:27;;27599:19;27621:9;:13;27631:2;27621:13;;;;;;;;;;;:19;27635:4;27621:19;;;;;;;;;;;;;;;;27599:41;;27678:6;27663:11;:21;;27655:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;27811:6;27797:11;:20;27775:9;:13;27785:2;27775:13;;;;;;;;;;;:19;27789:4;27775:19;;;;;;;;;;;;;;;:42;;;;27868:6;27847:9;:13;27857:2;27847:13;;;;;;;;;;;:17;27861:2;27847:17;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;27465:421;;;27501:3;;;;:::i;:::-;;;27465:421;;;;27933:2;27903:47;;27927:4;27903:47;;27917:8;27903:47;;;27937:3;27942:7;27903:47;;;;;;;:::i;:::-;;;;;;;;27963:75;27999:8;28009:4;28015:2;28019:3;28024:7;28033:4;27963:35;:75::i;:::-;26972:1074;;;;;;:::o;33159:331::-;33314:8;33305:17;;:5;:17;;;;33297:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;33417:8;33379:18;:25;33398:5;33379:25;;;;;;;;;;;;;;;:35;33405:8;33379:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;33463:8;33441:41;;33456:5;33441:41;;;33473:8;33441:41;;;;;;:::i;:::-;;;;;;;;33159:331;;;:::o;25794:820::-;25996:1;25982:16;;:2;:16;;;;25974:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;26053:16;26072:12;:10;:12::i;:::-;26053:31;;26097:96;26118:8;26128:4;26134:2;26138:21;26156:2;26138:17;:21::i;:::-;26161:25;26179:6;26161:17;:25::i;:::-;26188:4;26097:20;:96::i;:::-;26206:19;26228:9;:13;26238:2;26228:13;;;;;;;;;;;:19;26242:4;26228:19;;;;;;;;;;;;;;;;26206:41;;26281:6;26266:11;:21;;26258:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;26406:6;26392:11;:20;26370:9;:13;26380:2;26370:13;;;;;;;;;;;:19;26384:4;26370:19;;;;;;;;;;;;;;;:42;;;;26455:6;26434:9;:13;26444:2;26434:13;;;;;;;;;;;:17;26448:2;26434:17;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;26510:2;26479:46;;26504:4;26479:46;;26494:8;26479:46;;;26514:2;26518:6;26479:46;;;;;;;:::i;:::-;;;;;;;;26538:68;26569:8;26579:4;26585:2;26589;26593:6;26601:4;26538:30;:68::i;:::-;25794:820;;;;;;;:::o;34446:221::-;;;;;;;:::o;35427:813::-;35667:15;:2;:13;;;:15::i;:::-;35663:570;;;35720:2;35703:43;;;35747:8;35757:4;35763:3;35768:7;35777:4;35703:79;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;35699:523;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;36095:6;36088:14;;;;;;;;;;;:::i;:::-;;;;;;;;35699:523;;;36144:62;;;;;;;;;;:::i;:::-;;;;;;;;35699:523;35876:48;;;35864:60;;;:8;:60;;;;35860:159;;35949:50;;;;;;;;;;:::i;:::-;;;;;;;;35860:159;35783:251;35663:570;35427:813;;;;;;:::o;36248:198::-;36314:16;36343:22;36382:1;36368:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36343:41;;36406:7;36395:5;36401:1;36395:8;;;;;;;;;;;;;;;;;;;;;:18;;;;;36433:5;36426:12;;;36248:198;;;:::o;34675:744::-;34890:15;:2;:13;;;:15::i;:::-;34886:526;;;34943:2;34926:38;;;34965:8;34975:4;34981:2;34985:6;34993:4;34926:72;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;34922:479;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;35274:6;35267:14;;;;;;;;;;;:::i;:::-;;;;;;;;34922:479;;;35323:62;;;;;;;;;;:::i;:::-;;;;;;;;34922:479;35060:43;;;35048:55;;;:8;:55;;;;35044:154;;35128:50;;;;;;;;;;:::i;:::-;;;;;;;;35044:154;34999:214;34886:526;34675:744;;;;;;:::o;4178:387::-;4238:4;4446:12;4513:7;4501:20;4493:28;;4556:1;4549:4;:8;4542:15;;;4178:387;;;:::o;24:623:1:-;;145:81;161:64;218:6;161:64;:::i;:::-;145:81;:::i;:::-;136:90;;246:5;274:6;267:5;260:21;300:4;293:5;289:16;282:23;;325:6;375:3;367:4;359:6;355:17;350:3;346:27;343:36;340:2;;;392:1;389;382:12;340:2;420:1;405:236;430:6;427:1;424:13;405:236;;;497:3;525:37;558:3;546:10;525:37;:::i;:::-;520:3;513:50;592:4;587:3;583:14;576:21;;626:4;621:3;617:14;610:21;;465:176;452:1;449;445:9;440:14;;405:236;;;409:14;126:521;;;;;;;:::o;670:623::-;;791:81;807:64;864:6;807:64;:::i;:::-;791:81;:::i;:::-;782:90;;892:5;920:6;913:5;906:21;946:4;939:5;935:16;928:23;;971:6;1021:3;1013:4;1005:6;1001:17;996:3;992:27;989:36;986:2;;;1038:1;1035;1028:12;986:2;1066:1;1051:236;1076:6;1073:1;1070:13;1051:236;;;1143:3;1171:37;1204:3;1192:10;1171:37;:::i;:::-;1166:3;1159:50;1238:4;1233:3;1229:14;1222:21;;1272:4;1267:3;1263:14;1256:21;;1111:176;1098:1;1095;1091:9;1086:14;;1051:236;;;1055:14;772:521;;;;;;;:::o;1299:343::-;;1401:65;1417:48;1458:6;1417:48;:::i;:::-;1401:65;:::i;:::-;1392:74;;1489:6;1482:5;1475:21;1527:4;1520:5;1516:16;1565:3;1556:6;1551:3;1547:16;1544:25;1541:2;;;1582:1;1579;1572:12;1541:2;1595:41;1629:6;1624:3;1619;1595:41;:::i;:::-;1382:260;;;;;;:::o;1648:139::-;;1732:6;1719:20;1710:29;;1748:33;1775:5;1748:33;:::i;:::-;1700:87;;;;:::o;1810:303::-;;1930:3;1923:4;1915:6;1911:17;1907:27;1897:2;;1948:1;1945;1938:12;1897:2;1988:6;1975:20;2013:94;2103:3;2095:6;2088:4;2080:6;2076:17;2013:94;:::i;:::-;2004:103;;1887:226;;;;;:::o;2136:303::-;;2256:3;2249:4;2241:6;2237:17;2233:27;2223:2;;2274:1;2271;2264:12;2223:2;2314:6;2301:20;2339:94;2429:3;2421:6;2414:4;2406:6;2402:17;2339:94;:::i;:::-;2330:103;;2213:226;;;;;:::o;2445:133::-;;2526:6;2513:20;2504:29;;2542:30;2566:5;2542:30;:::i;:::-;2494:84;;;;:::o;2584:137::-;;2667:6;2654:20;2645:29;;2683:32;2709:5;2683:32;:::i;:::-;2635:86;;;;:::o;2727:141::-;;2814:6;2808:13;2799:22;;2830:32;2856:5;2830:32;:::i;:::-;2789:79;;;;:::o;2887:271::-;;2991:3;2984:4;2976:6;2972:17;2968:27;2958:2;;3009:1;3006;2999:12;2958:2;3049:6;3036:20;3074:78;3148:3;3140:6;3133:4;3125:6;3121:17;3074:78;:::i;:::-;3065:87;;2948:210;;;;;:::o;3164:139::-;;3248:6;3235:20;3226:29;;3264:33;3291:5;3264:33;:::i;:::-;3216:87;;;;:::o;3309:407::-;;;3434:2;3422:9;3413:7;3409:23;3405:32;3402:2;;;3450:1;3447;3440:12;3402:2;3493:1;3518:53;3563:7;3554:6;3543:9;3539:22;3518:53;:::i;:::-;3508:63;;3464:117;3620:2;3646:53;3691:7;3682:6;3671:9;3667:22;3646:53;:::i;:::-;3636:63;;3591:118;3392:324;;;;;:::o;3722:1241::-;;;;;;3957:3;3945:9;3936:7;3932:23;3928:33;3925:2;;;3974:1;3971;3964:12;3925:2;4017:1;4042:53;4087:7;4078:6;4067:9;4063:22;4042:53;:::i;:::-;4032:63;;3988:117;4144:2;4170:53;4215:7;4206:6;4195:9;4191:22;4170:53;:::i;:::-;4160:63;;4115:118;4300:2;4289:9;4285:18;4272:32;4331:18;4323:6;4320:30;4317:2;;;4363:1;4360;4353:12;4317:2;4391:78;4461:7;4452:6;4441:9;4437:22;4391:78;:::i;:::-;4381:88;;4243:236;4546:2;4535:9;4531:18;4518:32;4577:18;4569:6;4566:30;4563:2;;;4609:1;4606;4599:12;4563:2;4637:78;4707:7;4698:6;4687:9;4683:22;4637:78;:::i;:::-;4627:88;;4489:236;4792:3;4781:9;4777:19;4764:33;4824:18;4816:6;4813:30;4810:2;;;4856:1;4853;4846:12;4810:2;4884:62;4938:7;4929:6;4918:9;4914:22;4884:62;:::i;:::-;4874:72;;4735:221;3915:1048;;;;;;;;:::o;4969:955::-;;;;;;5154:3;5142:9;5133:7;5129:23;5125:33;5122:2;;;5171:1;5168;5161:12;5122:2;5214:1;5239:53;5284:7;5275:6;5264:9;5260:22;5239:53;:::i;:::-;5229:63;;5185:117;5341:2;5367:53;5412:7;5403:6;5392:9;5388:22;5367:53;:::i;:::-;5357:63;;5312:118;5469:2;5495:53;5540:7;5531:6;5520:9;5516:22;5495:53;:::i;:::-;5485:63;;5440:118;5597:2;5623:53;5668:7;5659:6;5648:9;5644:22;5623:53;:::i;:::-;5613:63;;5568:118;5753:3;5742:9;5738:19;5725:33;5785:18;5777:6;5774:30;5771:2;;;5817:1;5814;5807:12;5771:2;5845:62;5899:7;5890:6;5879:9;5875:22;5845:62;:::i;:::-;5835:72;;5696:221;5112:812;;;;;;;;:::o;5930:401::-;;;6052:2;6040:9;6031:7;6027:23;6023:32;6020:2;;;6068:1;6065;6058:12;6020:2;6111:1;6136:53;6181:7;6172:6;6161:9;6157:22;6136:53;:::i;:::-;6126:63;;6082:117;6238:2;6264:50;6306:7;6297:6;6286:9;6282:22;6264:50;:::i;:::-;6254:60;;6209:115;6010:321;;;;;:::o;6337:407::-;;;6462:2;6450:9;6441:7;6437:23;6433:32;6430:2;;;6478:1;6475;6468:12;6430:2;6521:1;6546:53;6591:7;6582:6;6571:9;6567:22;6546:53;:::i;:::-;6536:63;;6492:117;6648:2;6674:53;6719:7;6710:6;6699:9;6695:22;6674:53;:::i;:::-;6664:63;;6619:118;6420:324;;;;;:::o;6750:693::-;;;6925:2;6913:9;6904:7;6900:23;6896:32;6893:2;;;6941:1;6938;6931:12;6893:2;7012:1;7001:9;6997:17;6984:31;7042:18;7034:6;7031:30;7028:2;;;7074:1;7071;7064:12;7028:2;7102:78;7172:7;7163:6;7152:9;7148:22;7102:78;:::i;:::-;7092:88;;6955:235;7257:2;7246:9;7242:18;7229:32;7288:18;7280:6;7277:30;7274:2;;;7320:1;7317;7310:12;7274:2;7348:78;7418:7;7409:6;7398:9;7394:22;7348:78;:::i;:::-;7338:88;;7200:236;6883:560;;;;;:::o;7449:260::-;;7556:2;7544:9;7535:7;7531:23;7527:32;7524:2;;;7572:1;7569;7562:12;7524:2;7615:1;7640:52;7684:7;7675:6;7664:9;7660:22;7640:52;:::i;:::-;7630:62;;7586:116;7514:195;;;;:::o;7715:282::-;;7833:2;7821:9;7812:7;7808:23;7804:32;7801:2;;;7849:1;7846;7839:12;7801:2;7892:1;7917:63;7972:7;7963:6;7952:9;7948:22;7917:63;:::i;:::-;7907:73;;7863:127;7791:206;;;;:::o;8003:262::-;;8111:2;8099:9;8090:7;8086:23;8082:32;8079:2;;;8127:1;8124;8117:12;8079:2;8170:1;8195:53;8240:7;8231:6;8220:9;8216:22;8195:53;:::i;:::-;8185:63;;8141:117;8069:196;;;;:::o;8271:179::-;;8361:46;8403:3;8395:6;8361:46;:::i;:::-;8439:4;8434:3;8430:14;8416:28;;8351:99;;;;:::o;8456:118::-;8543:24;8561:5;8543:24;:::i;:::-;8538:3;8531:37;8521:53;;:::o;8610:732::-;;8758:54;8806:5;8758:54;:::i;:::-;8828:86;8907:6;8902:3;8828:86;:::i;:::-;8821:93;;8938:56;8988:5;8938:56;:::i;:::-;9017:7;9048:1;9033:284;9058:6;9055:1;9052:13;9033:284;;;9134:6;9128:13;9161:63;9220:3;9205:13;9161:63;:::i;:::-;9154:70;;9247:60;9300:6;9247:60;:::i;:::-;9237:70;;9093:224;9080:1;9077;9073:9;9068:14;;9033:284;;;9037:14;9333:3;9326:10;;8734:608;;;;;;;:::o;9348:109::-;9429:21;9444:5;9429:21;:::i;:::-;9424:3;9417:34;9407:50;;:::o;9463:360::-;;9577:38;9609:5;9577:38;:::i;:::-;9631:70;9694:6;9689:3;9631:70;:::i;:::-;9624:77;;9710:52;9755:6;9750:3;9743:4;9736:5;9732:16;9710:52;:::i;:::-;9787:29;9809:6;9787:29;:::i;:::-;9782:3;9778:39;9771:46;;9553:270;;;;;:::o;9829:364::-;;9945:39;9978:5;9945:39;:::i;:::-;10000:71;10064:6;10059:3;10000:71;:::i;:::-;9993:78;;10080:52;10125:6;10120:3;10113:4;10106:5;10102:16;10080:52;:::i;:::-;10157:29;10179:6;10157:29;:::i;:::-;10152:3;10148:39;10141:46;;9921:272;;;;;:::o;10199:366::-;;10362:67;10426:2;10421:3;10362:67;:::i;:::-;10355:74;;10438:93;10527:3;10438:93;:::i;:::-;10556:2;10551:3;10547:12;10540:19;;10345:220;;;:::o;10571:366::-;;10734:67;10798:2;10793:3;10734:67;:::i;:::-;10727:74;;10810:93;10899:3;10810:93;:::i;:::-;10928:2;10923:3;10919:12;10912:19;;10717:220;;;:::o;10943:366::-;;11106:67;11170:2;11165:3;11106:67;:::i;:::-;11099:74;;11182:93;11271:3;11182:93;:::i;:::-;11300:2;11295:3;11291:12;11284:19;;11089:220;;;:::o;11315:366::-;;11478:67;11542:2;11537:3;11478:67;:::i;:::-;11471:74;;11554:93;11643:3;11554:93;:::i;:::-;11672:2;11667:3;11663:12;11656:19;;11461:220;;;:::o;11687:366::-;;11850:67;11914:2;11909:3;11850:67;:::i;:::-;11843:74;;11926:93;12015:3;11926:93;:::i;:::-;12044:2;12039:3;12035:12;12028:19;;11833:220;;;:::o;12059:366::-;;12222:67;12286:2;12281:3;12222:67;:::i;:::-;12215:74;;12298:93;12387:3;12298:93;:::i;:::-;12416:2;12411:3;12407:12;12400:19;;12205:220;;;:::o;12431:366::-;;12594:67;12658:2;12653:3;12594:67;:::i;:::-;12587:74;;12670:93;12759:3;12670:93;:::i;:::-;12788:2;12783:3;12779:12;12772:19;;12577:220;;;:::o;12803:366::-;;12966:67;13030:2;13025:3;12966:67;:::i;:::-;12959:74;;13042:93;13131:3;13042:93;:::i;:::-;13160:2;13155:3;13151:12;13144:19;;12949:220;;;:::o;13175:366::-;;13338:67;13402:2;13397:3;13338:67;:::i;:::-;13331:74;;13414:93;13503:3;13414:93;:::i;:::-;13532:2;13527:3;13523:12;13516:19;;13321:220;;;:::o;13547:366::-;;13710:67;13774:2;13769:3;13710:67;:::i;:::-;13703:74;;13786:93;13875:3;13786:93;:::i;:::-;13904:2;13899:3;13895:12;13888:19;;13693:220;;;:::o;13919:108::-;13996:24;14014:5;13996:24;:::i;:::-;13991:3;13984:37;13974:53;;:::o;14033:118::-;14120:24;14138:5;14120:24;:::i;:::-;14115:3;14108:37;14098:53;;:::o;14157:1053::-;;14518:3;14507:9;14503:19;14495:27;;14532:71;14600:1;14589:9;14585:17;14576:6;14532:71;:::i;:::-;14613:72;14681:2;14670:9;14666:18;14657:6;14613:72;:::i;:::-;14732:9;14726:4;14722:20;14717:2;14706:9;14702:18;14695:48;14760:108;14863:4;14854:6;14760:108;:::i;:::-;14752:116;;14915:9;14909:4;14905:20;14900:2;14889:9;14885:18;14878:48;14943:108;15046:4;15037:6;14943:108;:::i;:::-;14935:116;;15099:9;15093:4;15089:20;15083:3;15072:9;15068:19;15061:49;15127:76;15198:4;15189:6;15127:76;:::i;:::-;15119:84;;14485:725;;;;;;;;:::o;15216:751::-;;15477:3;15466:9;15462:19;15454:27;;15491:71;15559:1;15548:9;15544:17;15535:6;15491:71;:::i;:::-;15572:72;15640:2;15629:9;15625:18;15616:6;15572:72;:::i;:::-;15654;15722:2;15711:9;15707:18;15698:6;15654:72;:::i;:::-;15736;15804:2;15793:9;15789:18;15780:6;15736:72;:::i;:::-;15856:9;15850:4;15846:20;15840:3;15829:9;15825:19;15818:49;15884:76;15955:4;15946:6;15884:76;:::i;:::-;15876:84;;15444:523;;;;;;;;:::o;15973:373::-;;16154:2;16143:9;16139:18;16131:26;;16203:9;16197:4;16193:20;16189:1;16178:9;16174:17;16167:47;16231:108;16334:4;16325:6;16231:108;:::i;:::-;16223:116;;16121:225;;;;:::o;16352:634::-;;16611:2;16600:9;16596:18;16588:26;;16660:9;16654:4;16650:20;16646:1;16635:9;16631:17;16624:47;16688:108;16791:4;16782:6;16688:108;:::i;:::-;16680:116;;16843:9;16837:4;16833:20;16828:2;16817:9;16813:18;16806:48;16871:108;16974:4;16965:6;16871:108;:::i;:::-;16863:116;;16578:408;;;;;:::o;16992:210::-;;17117:2;17106:9;17102:18;17094:26;;17130:65;17192:1;17181:9;17177:17;17168:6;17130:65;:::i;:::-;17084:118;;;;:::o;17208:313::-;;17359:2;17348:9;17344:18;17336:26;;17408:9;17402:4;17398:20;17394:1;17383:9;17379:17;17372:47;17436:78;17509:4;17500:6;17436:78;:::i;:::-;17428:86;;17326:195;;;;:::o;17527:419::-;;17731:2;17720:9;17716:18;17708:26;;17780:9;17774:4;17770:20;17766:1;17755:9;17751:17;17744:47;17808:131;17934:4;17808:131;:::i;:::-;17800:139;;17698:248;;;:::o;17952:419::-;;18156:2;18145:9;18141:18;18133:26;;18205:9;18199:4;18195:20;18191:1;18180:9;18176:17;18169:47;18233:131;18359:4;18233:131;:::i;:::-;18225:139;;18123:248;;;:::o;18377:419::-;;18581:2;18570:9;18566:18;18558:26;;18630:9;18624:4;18620:20;18616:1;18605:9;18601:17;18594:47;18658:131;18784:4;18658:131;:::i;:::-;18650:139;;18548:248;;;:::o;18802:419::-;;19006:2;18995:9;18991:18;18983:26;;19055:9;19049:4;19045:20;19041:1;19030:9;19026:17;19019:47;19083:131;19209:4;19083:131;:::i;:::-;19075:139;;18973:248;;;:::o;19227:419::-;;19431:2;19420:9;19416:18;19408:26;;19480:9;19474:4;19470:20;19466:1;19455:9;19451:17;19444:47;19508:131;19634:4;19508:131;:::i;:::-;19500:139;;19398:248;;;:::o;19652:419::-;;19856:2;19845:9;19841:18;19833:26;;19905:9;19899:4;19895:20;19891:1;19880:9;19876:17;19869:47;19933:131;20059:4;19933:131;:::i;:::-;19925:139;;19823:248;;;:::o;20077:419::-;;20281:2;20270:9;20266:18;20258:26;;20330:9;20324:4;20320:20;20316:1;20305:9;20301:17;20294:47;20358:131;20484:4;20358:131;:::i;:::-;20350:139;;20248:248;;;:::o;20502:419::-;;20706:2;20695:9;20691:18;20683:26;;20755:9;20749:4;20745:20;20741:1;20730:9;20726:17;20719:47;20783:131;20909:4;20783:131;:::i;:::-;20775:139;;20673:248;;;:::o;20927:419::-;;21131:2;21120:9;21116:18;21108:26;;21180:9;21174:4;21170:20;21166:1;21155:9;21151:17;21144:47;21208:131;21334:4;21208:131;:::i;:::-;21200:139;;21098:248;;;:::o;21352:419::-;;21556:2;21545:9;21541:18;21533:26;;21605:9;21599:4;21595:20;21591:1;21580:9;21576:17;21569:47;21633:131;21759:4;21633:131;:::i;:::-;21625:139;;21523:248;;;:::o;21777:222::-;;21908:2;21897:9;21893:18;21885:26;;21921:71;21989:1;21978:9;21974:17;21965:6;21921:71;:::i;:::-;21875:124;;;;:::o;22005:332::-;;22164:2;22153:9;22149:18;22141:26;;22177:71;22245:1;22234:9;22230:17;22221:6;22177:71;:::i;:::-;22258:72;22326:2;22315:9;22311:18;22302:6;22258:72;:::i;:::-;22131:206;;;;;:::o;22343:129::-;;22404:20;;:::i;:::-;22394:30;;22433:33;22461:4;22453:6;22433:33;:::i;:::-;22384:88;;;:::o;22478:75::-;;22544:2;22538:9;22528:19;;22518:35;:::o;22559:311::-;;22726:18;22718:6;22715:30;22712:2;;;22748:18;;:::i;:::-;22712:2;22798:4;22790:6;22786:17;22778:25;;22858:4;22852;22848:15;22840:23;;22641:229;;;:::o;22876:311::-;;23043:18;23035:6;23032:30;23029:2;;;23065:18;;:::i;:::-;23029:2;23115:4;23107:6;23103:17;23095:25;;23175:4;23169;23165:15;23157:23;;22958:229;;;:::o;23193:307::-;;23344:18;23336:6;23333:30;23330:2;;;23366:18;;:::i;:::-;23330:2;23404:29;23426:6;23404:29;:::i;:::-;23396:37;;23488:4;23482;23478:15;23470:23;;23259:241;;;:::o;23506:132::-;;23596:3;23588:11;;23626:4;23621:3;23617:14;23609:22;;23578:60;;;:::o;23644:114::-;;23745:5;23739:12;23729:22;;23718:40;;;:::o;23764:98::-;;23849:5;23843:12;23833:22;;23822:40;;;:::o;23868:99::-;;23954:5;23948:12;23938:22;;23927:40;;;:::o;23973:113::-;;24075:4;24070:3;24066:14;24058:22;;24048:38;;;:::o;24092:184::-;;24225:6;24220:3;24213:19;24265:4;24260:3;24256:14;24241:29;;24203:73;;;;:::o;24282:168::-;;24399:6;24394:3;24387:19;24439:4;24434:3;24430:14;24415:29;;24377:73;;;;:::o;24456:169::-;;24574:6;24569:3;24562:19;24614:4;24609:3;24605:14;24590:29;;24552:73;;;;:::o;24631:305::-;;24690:20;24708:1;24690:20;:::i;:::-;24685:25;;24724:20;24742:1;24724:20;:::i;:::-;24719:25;;24878:1;24810:66;24806:74;24803:1;24800:81;24797:2;;;24884:18;;:::i;:::-;24797:2;24928:1;24925;24921:9;24914:16;;24675:261;;;;:::o;24942:96::-;;25008:24;25026:5;25008:24;:::i;:::-;24997:35;;24987:51;;;:::o;25044:90::-;;25121:5;25114:13;25107:21;25096:32;;25086:48;;;:::o;25140:149::-;;25216:66;25209:5;25205:78;25194:89;;25184:105;;;:::o;25295:126::-;;25372:42;25365:5;25361:54;25350:65;;25340:81;;;:::o;25427:77::-;;25493:5;25482:16;;25472:32;;;:::o;25510:154::-;25594:6;25589:3;25584;25571:30;25656:1;25647:6;25642:3;25638:16;25631:27;25561:103;;;:::o;25670:307::-;25738:1;25748:113;25762:6;25759:1;25756:13;25748:113;;;25847:1;25842:3;25838:11;25832:18;25828:1;25823:3;25819:11;25812:39;25784:2;25781:1;25777:10;25772:15;;25748:113;;;25879:6;25876:1;25873:13;25870:2;;;25959:1;25950:6;25945:3;25941:16;25934:27;25870:2;25719:258;;;;:::o;25983:320::-;;26064:1;26058:4;26054:12;26044:22;;26111:1;26105:4;26101:12;26132:18;26122:2;;26188:4;26180:6;26176:17;26166:27;;26122:2;26250;26242:6;26239:14;26219:18;26216:38;26213:2;;;26269:18;;:::i;:::-;26213:2;26034:269;;;;:::o;26309:281::-;26392:27;26414:4;26392:27;:::i;:::-;26384:6;26380:40;26522:6;26510:10;26507:22;26486:18;26474:10;26471:34;26468:62;26465:2;;;26533:18;;:::i;:::-;26465:2;26573:10;26569:2;26562:22;26352:238;;;:::o;26596:233::-;;26658:24;26676:5;26658:24;:::i;:::-;26649:33;;26704:66;26697:5;26694:77;26691:2;;;26774:18;;:::i;:::-;26691:2;26821:1;26814:5;26810:13;26803:20;;26639:190;;;:::o;26835:180::-;26883:77;26880:1;26873:88;26980:4;26977:1;26970:15;27004:4;27001:1;26994:15;27021:180;27069:77;27066:1;27059:88;27166:4;27163:1;27156:15;27190:4;27187:1;27180:15;27207:180;27255:77;27252:1;27245:88;27352:4;27349:1;27342:15;27376:4;27373:1;27366:15;27393:183;;27466:1;27448:16;27445:23;27442:2;;;27504:1;27501;27498;27483:23;27526:34;27557:1;27551:8;27526:34;:::i;:::-;27519:41;;27442:2;27432:144;:::o;27582:102::-;;27674:2;27670:7;27665:2;27658:5;27654:14;27650:28;27640:38;;27630:54;;;:::o;27690:106::-;;27783:5;27778:3;27774:15;27753:36;;27743:53;;;:::o;27802:239::-;27942:34;27938:1;27930:6;27926:14;27919:58;28011:22;28006:2;27998:6;27994:15;27987:47;27908:133;:::o;28047:227::-;28187:34;28183:1;28175:6;28171:14;28164:58;28256:10;28251:2;28243:6;28239:15;28232:35;28153:121;:::o;28280:230::-;28420:34;28416:1;28408:6;28404:14;28397:58;28489:13;28484:2;28476:6;28472:15;28465:38;28386:124;:::o;28516:228::-;28656:34;28652:1;28644:6;28640:14;28633:58;28725:11;28720:2;28712:6;28708:15;28701:36;28622:122;:::o;28750:224::-;28890:34;28886:1;28878:6;28874:14;28867:58;28959:7;28954:2;28946:6;28942:15;28935:32;28856:118;:::o;28980:237::-;29120:34;29116:1;29108:6;29104:14;29097:58;29189:20;29184:2;29176:6;29172:15;29165:45;29086:131;:::o;29223:229::-;29363:34;29359:1;29351:6;29347:14;29340:58;29432:12;29427:2;29419:6;29415:15;29408:37;29329:123;:::o;29458:228::-;29598:34;29594:1;29586:6;29582:14;29575:58;29667:11;29662:2;29654:6;29650:15;29643:36;29564:122;:::o;29692:228::-;29832:34;29828:1;29820:6;29816:14;29809:58;29901:11;29896:2;29888:6;29884:15;29877:36;29798:122;:::o;29926:227::-;30066:34;30062:1;30054:6;30050:14;30043:58;30135:10;30130:2;30122:6;30118:15;30111:35;30032:121;:::o;30159:711::-;;30236:4;30218:16;30215:26;30212:2;;;30244:5;;30212:2;30273:20;;:::i;:::-;30348:1;30330:16;30326:24;30323:1;30317:4;30302:49;30381:4;30375:11;30480:16;30473:4;30465:6;30461:17;30458:39;30425:18;30417:6;30414:30;30398:113;30395:2;;;30526:5;;;;30395:2;30572:6;30566:4;30562:17;30608:3;30602:10;30635:18;30627:6;30624:30;30621:2;;;30657:5;;;;;;30621:2;30705:6;30698:4;30693:3;30689:14;30685:27;30764:1;30746:16;30742:24;30736:4;30732:35;30727:3;30724:44;30721:2;;;30771:5;;;;;;;30721:2;30788:57;30836:6;30830:4;30826:17;30818:6;30814:30;30808:4;30788:57;:::i;:::-;30861:3;30854:10;;30202:668;;;;;;;:::o;30876:122::-;30949:24;30967:5;30949:24;:::i;:::-;30942:5;30939:35;30929:2;;30988:1;30985;30978:12;30929:2;30919:79;:::o;31004:116::-;31074:21;31089:5;31074:21;:::i;:::-;31067:5;31064:32;31054:2;;31110:1;31107;31100:12;31054:2;31044:76;:::o;31126:120::-;31198:23;31215:5;31198:23;:::i;:::-;31191:5;31188:34;31178:2;;31236:1;31233;31226:12;31178:2;31168:78;:::o;31252:122::-;31325:24;31343:5;31325:24;:::i;:::-;31318:5;31315:35;31305:2;;31364:1;31361;31354:12;31305:2;31295:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1958800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "infinite",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "796",
								"uri(uint256)": "infinite"
							},
							"internal": {
								"_asSingletonArray(uint256)": "infinite",
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "21",
								"_burn(address,uint256,uint256)": "infinite",
								"_burnBatch(address,uint256[] memory,uint256[] memory)": "infinite",
								"_doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes memory)": "infinite",
								"_mint(address,uint256,uint256,bytes memory)": "infinite",
								"_ownerBatch(address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeBatchTransferFrom(address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeTransferFrom(address,address,uint256,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_setURI(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 21284,
									"end": 36449,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 21836,
									"end": 21900,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 21836,
									"end": 21900,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21836,
									"end": 21900,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 21836,
									"end": 21900,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 21836,
									"end": 21900,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 21836,
									"end": 21900,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21836,
									"end": 21900,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21836,
									"end": 21900,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 21836,
									"end": 21900,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 21836,
									"end": 21900,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21836,
									"end": 21900,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21836,
									"end": 21900,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 21836,
									"end": 21900,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 21836,
									"end": 21900,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 21836,
									"end": 21900,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 21836,
									"end": 21900,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 21836,
									"end": 21900,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21836,
									"end": 21900,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 21836,
									"end": 21900,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 21836,
									"end": 21900,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 21836,
									"end": 21900,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21836,
									"end": 21900,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21836,
									"end": 21900,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 21836,
									"end": 21900,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 21836,
									"end": 21900,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 21836,
									"end": 21900,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21836,
									"end": 21900,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 21836,
									"end": 21900,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21836,
									"end": 21900,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 21836,
									"end": 21900,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 21836,
									"end": 21900,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21836,
									"end": 21900,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 21836,
									"end": 21900,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 21836,
									"end": 21900,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 21836,
									"end": 21900,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21879,
									"end": 21892,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 21887,
									"end": 21891,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21879,
									"end": 21886,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 21879,
									"end": 21886,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 21879,
									"end": 21886,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 21879,
									"end": 21892,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 21879,
									"end": 21892,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 21879,
									"end": 21892,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 21879,
									"end": 21892,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 21879,
									"end": 21892,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21836,
									"end": 21900,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 28890,
									"end": 28978,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 28890,
									"end": 28978,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28964,
									"end": 28970,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28957,
									"end": 28961,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 28957,
									"end": 28970,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28957,
									"end": 28970,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28957,
									"end": 28970,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 28957,
									"end": 28970,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28957,
									"end": 28970,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 28957,
									"end": 28970,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 28957,
									"end": 28970,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28957,
									"end": 28970,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 28957,
									"end": 28970,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 28957,
									"end": 28970,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 28957,
									"end": 28970,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28957,
									"end": 28970,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 28957,
									"end": 28970,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 28957,
									"end": 28970,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 28957,
									"end": 28970,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28957,
									"end": 28970,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 28890,
									"end": 28978,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 28890,
									"end": 28978,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 361,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 7,
									"end": 361,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7,
									"end": 361,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 179,
									"end": 185,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 112,
									"end": 187,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 112,
									"end": 187,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 210,
									"end": 216,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 203,
									"end": 208,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 196,
									"end": 217,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 248,
									"end": 252,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 241,
									"end": 246,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 237,
									"end": 253,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 286,
									"end": 289,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 277,
									"end": 283,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 272,
									"end": 275,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 268,
									"end": 284,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 265,
									"end": 290,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 262,
									"end": 264,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 262,
									"end": 264,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 262,
									"end": 264,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 303,
									"end": 304,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 300,
									"end": 301,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 293,
									"end": 305,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 262,
									"end": 264,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 262,
									"end": 264,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 316,
									"end": 355,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 348,
									"end": 354,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 343,
									"end": 346,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 338,
									"end": 341,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 316,
									"end": 355,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 316,
									"end": 355,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 316,
									"end": 355,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 316,
									"end": 355,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 102,
									"end": 361,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 102,
									"end": 361,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 102,
									"end": 361,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 102,
									"end": 361,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 102,
									"end": 361,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 102,
									"end": 361,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 102,
									"end": 361,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 381,
									"end": 669,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 381,
									"end": 669,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 381,
									"end": 669,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 497,
									"end": 500,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 490,
									"end": 494,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 482,
									"end": 488,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 478,
									"end": 495,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 474,
									"end": 501,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 464,
									"end": 466,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 464,
									"end": 466,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 515,
									"end": 516,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 512,
									"end": 513,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 505,
									"end": 517,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 464,
									"end": 466,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 464,
									"end": 466,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 548,
									"end": 554,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 542,
									"end": 555,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 573,
									"end": 663,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 659,
									"end": 662,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 651,
									"end": 657,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 644,
									"end": 648,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 636,
									"end": 642,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 632,
									"end": 649,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 573,
									"end": 663,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 573,
									"end": 663,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 573,
									"end": 663,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 573,
									"end": 663,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 564,
									"end": 663,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 564,
									"end": 663,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 454,
									"end": 669,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 454,
									"end": 669,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 454,
									"end": 669,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 454,
									"end": 669,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 454,
									"end": 669,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 454,
									"end": 669,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 675,
									"end": 1065,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 675,
									"end": 1065,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 675,
									"end": 1065,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 804,
									"end": 806,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 792,
									"end": 801,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 783,
									"end": 790,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 779,
									"end": 802,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 775,
									"end": 807,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 772,
									"end": 774,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 772,
									"end": 774,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 772,
									"end": 774,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 820,
									"end": 821,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 818,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 810,
									"end": 822,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 772,
									"end": 774,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 772,
									"end": 774,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 884,
									"end": 885,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 873,
									"end": 882,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 869,
									"end": 886,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 863,
									"end": 887,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 914,
									"end": 932,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 906,
									"end": 912,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 903,
									"end": 933,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 900,
									"end": 902,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 900,
									"end": 902,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 900,
									"end": 902,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 946,
									"end": 947,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 943,
									"end": 944,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 936,
									"end": 948,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 900,
									"end": 902,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 900,
									"end": 902,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 974,
									"end": 1048,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1040,
									"end": 1047,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1031,
									"end": 1037,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1020,
									"end": 1029,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1016,
									"end": 1038,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 974,
									"end": 1048,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 974,
									"end": 1048,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 974,
									"end": 1048,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 974,
									"end": 1048,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 964,
									"end": 1048,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 964,
									"end": 1048,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 834,
									"end": 1058,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 762,
									"end": 1065,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 762,
									"end": 1065,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 762,
									"end": 1065,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 762,
									"end": 1065,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 762,
									"end": 1065,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1071,
									"end": 1200,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1071,
									"end": 1200,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1071,
									"end": 1200,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1152,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1132,
									"end": 1152,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1132,
									"end": 1152,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1132,
									"end": 1152,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1132,
									"end": 1152,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1122,
									"end": 1152,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1122,
									"end": 1152,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1161,
									"end": 1194,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1189,
									"end": 1193,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1181,
									"end": 1187,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1161,
									"end": 1194,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1161,
									"end": 1194,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1161,
									"end": 1194,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1161,
									"end": 1194,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1112,
									"end": 1200,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1112,
									"end": 1200,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1112,
									"end": 1200,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1112,
									"end": 1200,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1206,
									"end": 1281,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1206,
									"end": 1281,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1206,
									"end": 1281,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1272,
									"end": 1274,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1266,
									"end": 1275,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1256,
									"end": 1275,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1256,
									"end": 1275,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1246,
									"end": 1281,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1246,
									"end": 1281,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1287,
									"end": 1595,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1287,
									"end": 1595,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1287,
									"end": 1595,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1439,
									"end": 1457,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1431,
									"end": 1437,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1428,
									"end": 1458,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1425,
									"end": 1427,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1425,
									"end": 1427,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1425,
									"end": 1427,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1461,
									"end": 1479,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 1461,
									"end": 1479,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 1461,
									"end": 1479,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1461,
									"end": 1479,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 1461,
									"end": 1479,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1425,
									"end": 1427,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1425,
									"end": 1427,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1499,
									"end": 1528,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 1521,
									"end": 1527,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1499,
									"end": 1528,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 1499,
									"end": 1528,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1499,
									"end": 1528,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 1499,
									"end": 1528,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1491,
									"end": 1528,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1491,
									"end": 1528,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1583,
									"end": 1587,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1577,
									"end": 1581,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1573,
									"end": 1588,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1565,
									"end": 1588,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1565,
									"end": 1588,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1354,
									"end": 1595,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1354,
									"end": 1595,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1354,
									"end": 1595,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1354,
									"end": 1595,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1601,
									"end": 1908,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1601,
									"end": 1908,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1669,
									"end": 1670,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1679,
									"end": 1792,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 1679,
									"end": 1792,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1693,
									"end": 1699,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1691,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1687,
									"end": 1700,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1792,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1792,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 1679,
									"end": 1792,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1778,
									"end": 1779,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1773,
									"end": 1776,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1769,
									"end": 1780,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1763,
									"end": 1781,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1759,
									"end": 1760,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1754,
									"end": 1757,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1750,
									"end": 1761,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1743,
									"end": 1782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1715,
									"end": 1717,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1708,
									"end": 1718,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1703,
									"end": 1718,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1703,
									"end": 1718,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1792,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 1679,
									"end": 1792,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1792,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 1679,
									"end": 1792,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1810,
									"end": 1816,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1807,
									"end": 1808,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1804,
									"end": 1817,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1801,
									"end": 1803,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1801,
									"end": 1803,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 1801,
									"end": 1803,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1890,
									"end": 1891,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1881,
									"end": 1887,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1876,
									"end": 1879,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1872,
									"end": 1888,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1892,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1801,
									"end": 1803,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 1801,
									"end": 1803,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1650,
									"end": 1908,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1650,
									"end": 1908,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1650,
									"end": 1908,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1650,
									"end": 1908,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1650,
									"end": 1908,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1914,
									"end": 2234,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1914,
									"end": 2234,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1914,
									"end": 2234,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1995,
									"end": 1996,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1989,
									"end": 1993,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 1997,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1975,
									"end": 1997,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1975,
									"end": 1997,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2042,
									"end": 2043,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2036,
									"end": 2040,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2032,
									"end": 2044,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2063,
									"end": 2081,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2053,
									"end": 2055,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 2053,
									"end": 2055,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2119,
									"end": 2123,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 2111,
									"end": 2117,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2107,
									"end": 2124,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2097,
									"end": 2124,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2097,
									"end": 2124,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2053,
									"end": 2055,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 2053,
									"end": 2055,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2181,
									"end": 2183,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2173,
									"end": 2179,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2170,
									"end": 2184,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2150,
									"end": 2168,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2147,
									"end": 2185,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 2144,
									"end": 2146,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2144,
									"end": 2146,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 2144,
									"end": 2146,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2200,
									"end": 2218,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 2200,
									"end": 2218,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 2200,
									"end": 2218,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2200,
									"end": 2218,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 2200,
									"end": 2218,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2144,
									"end": 2146,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 2144,
									"end": 2146,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1965,
									"end": 2234,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1965,
									"end": 2234,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1965,
									"end": 2234,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1965,
									"end": 2234,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1965,
									"end": 2234,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2240,
									"end": 2521,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 2240,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2323,
									"end": 2350,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 2345,
									"end": 2349,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2323,
									"end": 2350,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 2323,
									"end": 2350,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2323,
									"end": 2350,
									"name": "tag",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 2323,
									"end": 2350,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2315,
									"end": 2321,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2311,
									"end": 2351,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2453,
									"end": 2459,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2441,
									"end": 2451,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2438,
									"end": 2460,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2417,
									"end": 2435,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2405,
									"end": 2415,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2402,
									"end": 2436,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2399,
									"end": 2461,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2396,
									"end": 2398,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2396,
									"end": 2398,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 2396,
									"end": 2398,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2464,
									"end": 2482,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 2464,
									"end": 2482,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 2464,
									"end": 2482,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2464,
									"end": 2482,
									"name": "tag",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 2464,
									"end": 2482,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2396,
									"end": 2398,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 2396,
									"end": 2398,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2504,
									"end": 2514,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2500,
									"end": 2502,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2493,
									"end": 2515,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2283,
									"end": 2521,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2283,
									"end": 2521,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2283,
									"end": 2521,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2283,
									"end": 2521,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2527,
									"end": 2707,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 2527,
									"end": 2707,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2575,
									"end": 2652,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2572,
									"end": 2573,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2565,
									"end": 2653,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2672,
									"end": 2676,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 2669,
									"end": 2670,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2662,
									"end": 2677,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2693,
									"end": 2694,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2686,
									"end": 2701,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2713,
									"end": 2893,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 2713,
									"end": 2893,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2761,
									"end": 2838,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2758,
									"end": 2759,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2751,
									"end": 2839,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2858,
									"end": 2862,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 2855,
									"end": 2856,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2848,
									"end": 2863,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2882,
									"end": 2886,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2879,
									"end": 2880,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2872,
									"end": 2887,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2899,
									"end": 3001,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 2899,
									"end": 3001,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2899,
									"end": 3001,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2991,
									"end": 2993,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2987,
									"end": 2994,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2982,
									"end": 2984,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2975,
									"end": 2980,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2971,
									"end": 2985,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2967,
									"end": 2995,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2957,
									"end": 2995,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2957,
									"end": 2995,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2947,
									"end": 3001,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2947,
									"end": 3001,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2947,
									"end": 3001,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2947,
									"end": 3001,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21284,
									"end": 36449,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122087f9a399984c43695048022fd22fd1edbcf77b323b57d25e9cad6ce1288b851964736f6c63430008010033",
									".code": [
										{
											"begin": 21284,
											"end": 36449,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "PUSH",
											"source": 0,
											"value": "FDD58E"
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C"
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21284,
											"end": 36449,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22949,
											"end": 23180,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 22949,
											"end": 23180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22949,
											"end": 23180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 22949,
											"end": 23180,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22949,
											"end": 23180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22949,
											"end": 23180,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22949,
											"end": 23180,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22949,
											"end": 23180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22949,
											"end": 23180,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22949,
											"end": 23180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22949,
											"end": 23180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 22949,
											"end": 23180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22949,
											"end": 23180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22949,
											"end": 23180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 22949,
											"end": 23180,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22949,
											"end": 23180,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 22949,
											"end": 23180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22949,
											"end": 23180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 22949,
											"end": 23180,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22949,
											"end": 23180,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 22949,
											"end": 23180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22949,
											"end": 23180,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22949,
											"end": 23180,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22949,
											"end": 23180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 22949,
											"end": 23180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22949,
											"end": 23180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22949,
											"end": 23180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 22949,
											"end": 23180,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22949,
											"end": 23180,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 22949,
											"end": 23180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22949,
											"end": 23180,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22949,
											"end": 23180,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22949,
											"end": 23180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22949,
											"end": 23180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22949,
											"end": 23180,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22949,
											"end": 23180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22949,
											"end": 23180,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 21972,
											"end": 22282,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21972,
											"end": 22282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21972,
											"end": 22282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 21972,
											"end": 22282,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21972,
											"end": 22282,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21972,
											"end": 22282,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21972,
											"end": 22282,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21972,
											"end": 22282,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21972,
											"end": 22282,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21972,
											"end": 22282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21972,
											"end": 22282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 21972,
											"end": 22282,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21972,
											"end": 22282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21972,
											"end": 22282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21972,
											"end": 22282,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21972,
											"end": 22282,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 21972,
											"end": 22282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21972,
											"end": 22282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 21972,
											"end": 22282,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21972,
											"end": 22282,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 21972,
											"end": 22282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21972,
											"end": 22282,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21972,
											"end": 22282,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21972,
											"end": 22282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 21972,
											"end": 22282,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21972,
											"end": 22282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21972,
											"end": 22282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 21972,
											"end": 22282,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21972,
											"end": 22282,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 21972,
											"end": 22282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21972,
											"end": 22282,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21972,
											"end": 22282,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21972,
											"end": 22282,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21972,
											"end": 22282,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21972,
											"end": 22282,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21972,
											"end": 22282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21972,
											"end": 22282,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 22693,
											"end": 22798,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 22693,
											"end": 22798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22693,
											"end": 22798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 22693,
											"end": 22798,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22693,
											"end": 22798,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22693,
											"end": 22798,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22693,
											"end": 22798,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22693,
											"end": 22798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22693,
											"end": 22798,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22693,
											"end": 22798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22693,
											"end": 22798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 22693,
											"end": 22798,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22693,
											"end": 22798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22693,
											"end": 22798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 22693,
											"end": 22798,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22693,
											"end": 22798,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 22693,
											"end": 22798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22693,
											"end": 22798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 22693,
											"end": 22798,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22693,
											"end": 22798,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 22693,
											"end": 22798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22693,
											"end": 22798,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22693,
											"end": 22798,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22693,
											"end": 22798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 22693,
											"end": 22798,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22693,
											"end": 22798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22693,
											"end": 22798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 22693,
											"end": 22798,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22693,
											"end": 22798,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 22693,
											"end": 22798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22693,
											"end": 22798,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22693,
											"end": 22798,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22693,
											"end": 22798,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22693,
											"end": 22798,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22693,
											"end": 22798,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22693,
											"end": 22798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22693,
											"end": 22798,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24888,
											"end": 25330,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 24888,
											"end": 25330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24888,
											"end": 25330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 24888,
											"end": 25330,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24888,
											"end": 25330,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24888,
											"end": 25330,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24888,
											"end": 25330,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24888,
											"end": 25330,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24888,
											"end": 25330,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24888,
											"end": 25330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24888,
											"end": 25330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 24888,
											"end": 25330,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24888,
											"end": 25330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24888,
											"end": 25330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 24888,
											"end": 25330,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24888,
											"end": 25330,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 24888,
											"end": 25330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24888,
											"end": 25330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 24888,
											"end": 25330,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24888,
											"end": 25330,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 24888,
											"end": 25330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24888,
											"end": 25330,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 23346,
											"end": 23870,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 23346,
											"end": 23870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23346,
											"end": 23870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 23346,
											"end": 23870,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23346,
											"end": 23870,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23346,
											"end": 23870,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23346,
											"end": 23870,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23346,
											"end": 23870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23346,
											"end": 23870,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23346,
											"end": 23870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23346,
											"end": 23870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 23346,
											"end": 23870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23346,
											"end": 23870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23346,
											"end": 23870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 23346,
											"end": 23870,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23346,
											"end": 23870,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 23346,
											"end": 23870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23346,
											"end": 23870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 23346,
											"end": 23870,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23346,
											"end": 23870,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 23346,
											"end": 23870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23346,
											"end": 23870,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23346,
											"end": 23870,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23346,
											"end": 23870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 23346,
											"end": 23870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23346,
											"end": 23870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23346,
											"end": 23870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 23346,
											"end": 23870,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23346,
											"end": 23870,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 23346,
											"end": 23870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23346,
											"end": 23870,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23346,
											"end": 23870,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23346,
											"end": 23870,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23346,
											"end": 23870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23346,
											"end": 23870,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23346,
											"end": 23870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23346,
											"end": 23870,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 24098,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 23943,
											"end": 24098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 24098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23943,
											"end": 24098,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23943,
											"end": 24098,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 24098,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 24098,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 24098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 24098,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 24098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 24098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 23943,
											"end": 24098,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 24098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 24098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 23943,
											"end": 24098,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23943,
											"end": 24098,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 23943,
											"end": 24098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 24098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 23943,
											"end": 24098,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23943,
											"end": 24098,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23943,
											"end": 24098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 24098,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 24170,
											"end": 24338,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 24170,
											"end": 24338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24170,
											"end": 24338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 24170,
											"end": 24338,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24170,
											"end": 24338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24170,
											"end": 24338,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24170,
											"end": 24338,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24170,
											"end": 24338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24170,
											"end": 24338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24170,
											"end": 24338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24170,
											"end": 24338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 24170,
											"end": 24338,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24170,
											"end": 24338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24170,
											"end": 24338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 24170,
											"end": 24338,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24170,
											"end": 24338,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 24170,
											"end": 24338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24170,
											"end": 24338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 24170,
											"end": 24338,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24170,
											"end": 24338,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 24170,
											"end": 24338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24170,
											"end": 24338,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24170,
											"end": 24338,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24170,
											"end": 24338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 24170,
											"end": 24338,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24170,
											"end": 24338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24170,
											"end": 24338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 24170,
											"end": 24338,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24170,
											"end": 24338,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 24170,
											"end": 24338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24170,
											"end": 24338,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24170,
											"end": 24338,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24170,
											"end": 24338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24170,
											"end": 24338,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24170,
											"end": 24338,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24170,
											"end": 24338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24170,
											"end": 24338,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24410,
											"end": 24811,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 24410,
											"end": 24811,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24410,
											"end": 24811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 24410,
											"end": 24811,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24410,
											"end": 24811,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24410,
											"end": 24811,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24410,
											"end": 24811,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24410,
											"end": 24811,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24410,
											"end": 24811,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24410,
											"end": 24811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24410,
											"end": 24811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 24410,
											"end": 24811,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24410,
											"end": 24811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24410,
											"end": 24811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 24410,
											"end": 24811,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24410,
											"end": 24811,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 24410,
											"end": 24811,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24410,
											"end": 24811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 24410,
											"end": 24811,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24410,
											"end": 24811,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 24410,
											"end": 24811,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24410,
											"end": 24811,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 22949,
											"end": 23180,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 22949,
											"end": 23180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23035,
											"end": 23042,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23082,
											"end": 23083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23063,
											"end": 23084,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23063,
											"end": 23084,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23063,
											"end": 23070,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23063,
											"end": 23084,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23063,
											"end": 23084,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23063,
											"end": 23084,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23063,
											"end": 23084,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23055,
											"end": 23132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 23055,
											"end": 23132,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23055,
											"end": 23132,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23055,
											"end": 23132,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23055,
											"end": 23132,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23055,
											"end": 23132,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23055,
											"end": 23132,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23055,
											"end": 23132,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23055,
											"end": 23132,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23055,
											"end": 23132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 23055,
											"end": 23132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23055,
											"end": 23132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 23055,
											"end": 23132,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23055,
											"end": 23132,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 23055,
											"end": 23132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23055,
											"end": 23132,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23055,
											"end": 23132,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23055,
											"end": 23132,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23055,
											"end": 23132,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23055,
											"end": 23132,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23055,
											"end": 23132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23055,
											"end": 23132,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23055,
											"end": 23132,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 23055,
											"end": 23132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23150,
											"end": 23159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23150,
											"end": 23163,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23160,
											"end": 23162,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23150,
											"end": 23163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23150,
											"end": 23163,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23150,
											"end": 23163,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23150,
											"end": 23163,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23150,
											"end": 23163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23150,
											"end": 23163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23150,
											"end": 23163,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23150,
											"end": 23163,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23150,
											"end": 23163,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23150,
											"end": 23163,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23150,
											"end": 23163,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23150,
											"end": 23172,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23164,
											"end": 23171,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23150,
											"end": 23172,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23150,
											"end": 23172,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23150,
											"end": 23172,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23150,
											"end": 23172,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23150,
											"end": 23172,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23150,
											"end": 23172,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23150,
											"end": 23172,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23150,
											"end": 23172,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23150,
											"end": 23172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23150,
											"end": 23172,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23150,
											"end": 23172,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23150,
											"end": 23172,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23150,
											"end": 23172,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23150,
											"end": 23172,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23150,
											"end": 23172,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23150,
											"end": 23172,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23143,
											"end": 23172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23143,
											"end": 23172,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22949,
											"end": 23180,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22949,
											"end": 23180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22949,
											"end": 23180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22949,
											"end": 23180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22949,
											"end": 23180,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21972,
											"end": 22282,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 21972,
											"end": 22282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22074,
											"end": 22078,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22126,
											"end": 22152,
											"name": "PUSH",
											"source": 0,
											"value": "D9B67A2600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22111,
											"end": 22152,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22111,
											"end": 22152,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 22152,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 22122,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 22152,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22111,
											"end": 22152,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 22152,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 22152,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 22221,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 22221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 22111,
											"end": 22221,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 22221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22184,
											"end": 22221,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22169,
											"end": 22221,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22169,
											"end": 22221,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 22169,
											"end": 22221,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22169,
											"end": 22180,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22169,
											"end": 22221,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22169,
											"end": 22221,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 22169,
											"end": 22221,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22169,
											"end": 22221,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 22221,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 22111,
											"end": 22221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 22274,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 22274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 22111,
											"end": 22274,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 22274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22238,
											"end": 22274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 22262,
											"end": 22273,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22238,
											"end": 22261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 22238,
											"end": 22274,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22238,
											"end": 22274,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 22238,
											"end": 22274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 22274,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 22111,
											"end": 22274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22091,
											"end": 22274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22091,
											"end": 22274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21972,
											"end": 22282,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21972,
											"end": 22282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21972,
											"end": 22282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21972,
											"end": 22282,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22693,
											"end": 22798,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 22693,
											"end": 22798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22753,
											"end": 22766,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 22786,
											"end": 22790,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22779,
											"end": 22790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22693,
											"end": 22798,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22693,
											"end": 22798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22693,
											"end": 22798,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22693,
											"end": 22798,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24888,
											"end": 25330,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 24888,
											"end": 25330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25129,
											"end": 25141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 25129,
											"end": 25139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 25129,
											"end": 25141,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25129,
											"end": 25141,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 25129,
											"end": 25141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25121,
											"end": 25141,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25121,
											"end": 25141,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25121,
											"end": 25125,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25121,
											"end": 25141,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25121,
											"end": 25141,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25121,
											"end": 25141,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25121,
											"end": 25181,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25121,
											"end": 25181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 25121,
											"end": 25181,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25121,
											"end": 25181,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25145,
											"end": 25181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 25162,
											"end": 25166,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25168,
											"end": 25180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 25168,
											"end": 25178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 25168,
											"end": 25180,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25168,
											"end": 25180,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 25168,
											"end": 25180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25145,
											"end": 25161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 25145,
											"end": 25181,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25145,
											"end": 25181,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 25145,
											"end": 25181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25121,
											"end": 25181,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 25121,
											"end": 25181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25099,
											"end": 25259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 25099,
											"end": 25259,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25099,
											"end": 25259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25099,
											"end": 25259,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25099,
											"end": 25259,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25099,
											"end": 25259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25099,
											"end": 25259,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25099,
											"end": 25259,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25099,
											"end": 25259,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25099,
											"end": 25259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 25099,
											"end": 25259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25099,
											"end": 25259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 25099,
											"end": 25259,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25099,
											"end": 25259,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 25099,
											"end": 25259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25099,
											"end": 25259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25099,
											"end": 25259,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25099,
											"end": 25259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25099,
											"end": 25259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25099,
											"end": 25259,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25099,
											"end": 25259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25099,
											"end": 25259,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25099,
											"end": 25259,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 25099,
											"end": 25259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25270,
											"end": 25322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 25293,
											"end": 25297,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25299,
											"end": 25301,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25303,
											"end": 25306,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25308,
											"end": 25315,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25317,
											"end": 25321,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25270,
											"end": 25292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 25270,
											"end": 25322,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25270,
											"end": 25322,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 25270,
											"end": 25322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24888,
											"end": 25330,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24888,
											"end": 25330,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24888,
											"end": 25330,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24888,
											"end": 25330,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24888,
											"end": 25330,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24888,
											"end": 25330,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23346,
											"end": 23870,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 23346,
											"end": 23870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23518,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 23563,
											"end": 23566,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23563,
											"end": 23573,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23544,
											"end": 23552,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23544,
											"end": 23559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23544,
											"end": 23573,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23536,
											"end": 23619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 23536,
											"end": 23619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23536,
											"end": 23619,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23536,
											"end": 23619,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23536,
											"end": 23619,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23536,
											"end": 23619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23536,
											"end": 23619,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23536,
											"end": 23619,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23536,
											"end": 23619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23536,
											"end": 23619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 23536,
											"end": 23619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23536,
											"end": 23619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 23536,
											"end": 23619,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23536,
											"end": 23619,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 23536,
											"end": 23619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23536,
											"end": 23619,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23536,
											"end": 23619,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23536,
											"end": 23619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23536,
											"end": 23619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23536,
											"end": 23619,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23536,
											"end": 23619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23536,
											"end": 23619,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23536,
											"end": 23619,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 23536,
											"end": 23619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23632,
											"end": 23662,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23679,
											"end": 23687,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23679,
											"end": 23694,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23665,
											"end": 23695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23632,
											"end": 23695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23632,
											"end": 23695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23713,
											"end": 23722,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23708,
											"end": 23830,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 23708,
											"end": 23830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23732,
											"end": 23740,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23732,
											"end": 23747,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23728,
											"end": 23729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23728,
											"end": 23747,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23708,
											"end": 23830,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23708,
											"end": 23830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 23708,
											"end": 23830,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23788,
											"end": 23818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 23798,
											"end": 23806,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23807,
											"end": 23808,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23798,
											"end": 23809,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23798,
											"end": 23809,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23798,
											"end": 23809,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23798,
											"end": 23809,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23798,
											"end": 23809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 23798,
											"end": 23809,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23798,
											"end": 23809,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23798,
											"end": 23809,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23798,
											"end": 23809,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23798,
											"end": 23809,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 23798,
											"end": 23809,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23798,
											"end": 23809,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23798,
											"end": 23809,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 23798,
											"end": 23809,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23798,
											"end": 23809,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23798,
											"end": 23809,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 23798,
											"end": 23809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23798,
											"end": 23809,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23798,
											"end": 23809,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23798,
											"end": 23809,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23798,
											"end": 23809,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23798,
											"end": 23809,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23798,
											"end": 23809,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23811,
											"end": 23814,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23815,
											"end": 23816,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23811,
											"end": 23817,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23811,
											"end": 23817,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23811,
											"end": 23817,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23811,
											"end": 23817,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23811,
											"end": 23817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 23811,
											"end": 23817,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23811,
											"end": 23817,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23811,
											"end": 23817,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23811,
											"end": 23817,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23811,
											"end": 23817,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 23811,
											"end": 23817,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23811,
											"end": 23817,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23811,
											"end": 23817,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 23811,
											"end": 23817,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23811,
											"end": 23817,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23811,
											"end": 23817,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 23811,
											"end": 23817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23811,
											"end": 23817,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23811,
											"end": 23817,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23811,
											"end": 23817,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23811,
											"end": 23817,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23811,
											"end": 23817,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23811,
											"end": 23817,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23788,
											"end": 23797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 23788,
											"end": 23818,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23788,
											"end": 23818,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 23788,
											"end": 23818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23769,
											"end": 23782,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23783,
											"end": 23784,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23769,
											"end": 23785,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23769,
											"end": 23785,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23769,
											"end": 23785,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23769,
											"end": 23785,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23769,
											"end": 23785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 23769,
											"end": 23785,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23769,
											"end": 23785,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23769,
											"end": 23785,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23769,
											"end": 23785,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23769,
											"end": 23785,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 23769,
											"end": 23785,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23769,
											"end": 23785,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23769,
											"end": 23785,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 23769,
											"end": 23785,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23769,
											"end": 23785,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23769,
											"end": 23785,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 23769,
											"end": 23785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23769,
											"end": 23785,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23769,
											"end": 23785,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23769,
											"end": 23785,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23769,
											"end": 23785,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23769,
											"end": 23785,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23769,
											"end": 23818,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23769,
											"end": 23818,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23769,
											"end": 23818,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23769,
											"end": 23818,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23769,
											"end": 23818,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23749,
											"end": 23752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23749,
											"end": 23752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 23749,
											"end": 23752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23749,
											"end": 23752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 23749,
											"end": 23752,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23749,
											"end": 23752,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 23749,
											"end": 23752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23749,
											"end": 23752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23749,
											"end": 23752,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23708,
											"end": 23830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 23708,
											"end": 23830,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23708,
											"end": 23830,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 23708,
											"end": 23830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23708,
											"end": 23830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23849,
											"end": 23862,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23842,
											"end": 23862,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23842,
											"end": 23862,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23842,
											"end": 23862,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23346,
											"end": 23870,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23346,
											"end": 23870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23346,
											"end": 23870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23346,
											"end": 23870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23346,
											"end": 23870,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23943,
											"end": 24098,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 23943,
											"end": 24098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24038,
											"end": 24090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 24057,
											"end": 24069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 24057,
											"end": 24067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 24057,
											"end": 24069,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24057,
											"end": 24069,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 24057,
											"end": 24069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24071,
											"end": 24079,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24081,
											"end": 24089,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24038,
											"end": 24056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 24038,
											"end": 24090,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24038,
											"end": 24090,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 24038,
											"end": 24090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 24098,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 24098,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 24098,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24170,
											"end": 24338,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 24170,
											"end": 24338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24269,
											"end": 24273,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24293,
											"end": 24311,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24293,
											"end": 24320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24312,
											"end": 24319,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24293,
											"end": 24320,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24293,
											"end": 24320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24293,
											"end": 24320,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24293,
											"end": 24320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24293,
											"end": 24320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24293,
											"end": 24320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24293,
											"end": 24320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24293,
											"end": 24320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24293,
											"end": 24320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24293,
											"end": 24320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24293,
											"end": 24320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24293,
											"end": 24320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24293,
											"end": 24320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24293,
											"end": 24320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24293,
											"end": 24320,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24293,
											"end": 24330,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24321,
											"end": 24329,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24293,
											"end": 24330,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24293,
											"end": 24330,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24293,
											"end": 24330,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24293,
											"end": 24330,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24293,
											"end": 24330,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24293,
											"end": 24330,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24293,
											"end": 24330,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24293,
											"end": 24330,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24293,
											"end": 24330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24293,
											"end": 24330,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24293,
											"end": 24330,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24293,
											"end": 24330,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24293,
											"end": 24330,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24293,
											"end": 24330,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24293,
											"end": 24330,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24293,
											"end": 24330,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24293,
											"end": 24330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24293,
											"end": 24330,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24293,
											"end": 24330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24293,
											"end": 24330,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24293,
											"end": 24330,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 24293,
											"end": 24330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24293,
											"end": 24330,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 24293,
											"end": 24330,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 24293,
											"end": 24330,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 24330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24286,
											"end": 24330,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24170,
											"end": 24338,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24170,
											"end": 24338,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24170,
											"end": 24338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24170,
											"end": 24338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24170,
											"end": 24338,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24410,
											"end": 24811,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 24410,
											"end": 24811,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24626,
											"end": 24638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 24626,
											"end": 24636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 24626,
											"end": 24638,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24626,
											"end": 24638,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 24626,
											"end": 24638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24618,
											"end": 24638,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24618,
											"end": 24638,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24618,
											"end": 24622,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24618,
											"end": 24638,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24618,
											"end": 24638,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24618,
											"end": 24638,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24618,
											"end": 24678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24618,
											"end": 24678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 24618,
											"end": 24678,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24618,
											"end": 24678,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24642,
											"end": 24678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 24659,
											"end": 24663,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24665,
											"end": 24677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 24665,
											"end": 24675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 24665,
											"end": 24677,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24665,
											"end": 24677,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 24665,
											"end": 24677,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24642,
											"end": 24658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 24642,
											"end": 24678,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24642,
											"end": 24678,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 24642,
											"end": 24678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24618,
											"end": 24678,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 24618,
											"end": 24678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24596,
											"end": 24747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 24596,
											"end": 24747,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24596,
											"end": 24747,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24596,
											"end": 24747,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24596,
											"end": 24747,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24596,
											"end": 24747,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24596,
											"end": 24747,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24596,
											"end": 24747,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24596,
											"end": 24747,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24596,
											"end": 24747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 24596,
											"end": 24747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24596,
											"end": 24747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 24596,
											"end": 24747,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24596,
											"end": 24747,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 24596,
											"end": 24747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24596,
											"end": 24747,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24596,
											"end": 24747,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24596,
											"end": 24747,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24596,
											"end": 24747,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24596,
											"end": 24747,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24596,
											"end": 24747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24596,
											"end": 24747,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24596,
											"end": 24747,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 24596,
											"end": 24747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24758,
											"end": 24803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 24776,
											"end": 24780,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24782,
											"end": 24784,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24786,
											"end": 24788,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24790,
											"end": 24796,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24798,
											"end": 24802,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24758,
											"end": 24775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 24758,
											"end": 24803,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24758,
											"end": 24803,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 24758,
											"end": 24803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24410,
											"end": 24811,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24410,
											"end": 24811,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24410,
											"end": 24811,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24410,
											"end": 24811,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24410,
											"end": 24811,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24410,
											"end": 24811,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13303,
											"end": 13460,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 13303,
											"end": 13460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13388,
											"end": 13392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13427,
											"end": 13452,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13412,
											"end": 13452,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13412,
											"end": 13452,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 13412,
											"end": 13452,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13412,
											"end": 13423,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13412,
											"end": 13452,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13412,
											"end": 13452,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 13412,
											"end": 13452,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13412,
											"end": 13452,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13405,
											"end": 13452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13405,
											"end": 13452,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13303,
											"end": 13460,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13303,
											"end": 13460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13303,
											"end": 13460,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13303,
											"end": 13460,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 602,
											"end": 700,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 602,
											"end": 700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 655,
											"end": 662,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 682,
											"end": 692,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 675,
											"end": 692,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 675,
											"end": 692,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 602,
											"end": 700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 602,
											"end": 700,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 26972,
											"end": 28046,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 26972,
											"end": 28046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27199,
											"end": 27206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27199,
											"end": 27213,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27185,
											"end": 27188,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27185,
											"end": 27195,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27185,
											"end": 27213,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27177,
											"end": 27258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 27177,
											"end": 27258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27177,
											"end": 27258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27177,
											"end": 27258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27177,
											"end": 27258,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27177,
											"end": 27258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27177,
											"end": 27258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27177,
											"end": 27258,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27177,
											"end": 27258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27177,
											"end": 27258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 27177,
											"end": 27258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27177,
											"end": 27258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 27177,
											"end": 27258,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27177,
											"end": 27258,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 27177,
											"end": 27258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27177,
											"end": 27258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27177,
											"end": 27258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27177,
											"end": 27258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27177,
											"end": 27258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27177,
											"end": 27258,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27177,
											"end": 27258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27177,
											"end": 27258,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27177,
											"end": 27258,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 27177,
											"end": 27258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27291,
											"end": 27292,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27277,
											"end": 27293,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27277,
											"end": 27293,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27277,
											"end": 27279,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27277,
											"end": 27293,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27277,
											"end": 27293,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27277,
											"end": 27293,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27277,
											"end": 27293,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27269,
											"end": 27335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 27269,
											"end": 27335,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27269,
											"end": 27335,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27269,
											"end": 27335,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27269,
											"end": 27335,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27269,
											"end": 27335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27269,
											"end": 27335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27269,
											"end": 27335,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27269,
											"end": 27335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27269,
											"end": 27335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 27269,
											"end": 27335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27269,
											"end": 27335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 27269,
											"end": 27335,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27269,
											"end": 27335,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 27269,
											"end": 27335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27269,
											"end": 27335,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27269,
											"end": 27335,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27269,
											"end": 27335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27269,
											"end": 27335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27269,
											"end": 27335,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27269,
											"end": 27335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27269,
											"end": 27335,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27269,
											"end": 27335,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 27269,
											"end": 27335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27348,
											"end": 27364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27367,
											"end": 27379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 27367,
											"end": 27377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 27367,
											"end": 27379,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27367,
											"end": 27379,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 27367,
											"end": 27379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27348,
											"end": 27379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27348,
											"end": 27379,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27392,
											"end": 27452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 27413,
											"end": 27421,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27423,
											"end": 27427,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27431,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 27433,
											"end": 27436,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 27438,
											"end": 27445,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 27447,
											"end": 27451,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 27392,
											"end": 27412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 27392,
											"end": 27452,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27392,
											"end": 27452,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 27392,
											"end": 27452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27470,
											"end": 27479,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27465,
											"end": 27886,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 27465,
											"end": 27886,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27489,
											"end": 27492,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27489,
											"end": 27499,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27485,
											"end": 27486,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27485,
											"end": 27499,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27465,
											"end": 27886,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27465,
											"end": 27886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 27465,
											"end": 27886,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27521,
											"end": 27531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27534,
											"end": 27537,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27538,
											"end": 27539,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27534,
											"end": 27540,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27534,
											"end": 27540,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27534,
											"end": 27540,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27534,
											"end": 27540,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27534,
											"end": 27540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 27534,
											"end": 27540,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27534,
											"end": 27540,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27534,
											"end": 27540,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27534,
											"end": 27540,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27534,
											"end": 27540,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 27534,
											"end": 27540,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27534,
											"end": 27540,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27534,
											"end": 27540,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 27534,
											"end": 27540,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27534,
											"end": 27540,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27534,
											"end": 27540,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 27534,
											"end": 27540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27534,
											"end": 27540,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27534,
											"end": 27540,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27534,
											"end": 27540,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27534,
											"end": 27540,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27534,
											"end": 27540,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27534,
											"end": 27540,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27521,
											"end": 27540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27521,
											"end": 27540,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27555,
											"end": 27569,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27572,
											"end": 27579,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27580,
											"end": 27581,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27572,
											"end": 27582,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27572,
											"end": 27582,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27572,
											"end": 27582,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27572,
											"end": 27582,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27572,
											"end": 27582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 27572,
											"end": 27582,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27572,
											"end": 27582,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27572,
											"end": 27582,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27572,
											"end": 27582,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27572,
											"end": 27582,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 27572,
											"end": 27582,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27572,
											"end": 27582,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27572,
											"end": 27582,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 27572,
											"end": 27582,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27572,
											"end": 27582,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27572,
											"end": 27582,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 27572,
											"end": 27582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27572,
											"end": 27582,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27572,
											"end": 27582,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27572,
											"end": 27582,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27572,
											"end": 27582,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27572,
											"end": 27582,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27572,
											"end": 27582,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27555,
											"end": 27582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27555,
											"end": 27582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27599,
											"end": 27618,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27621,
											"end": 27630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27634,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27631,
											"end": 27633,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27634,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27634,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27634,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27621,
											"end": 27634,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27634,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27634,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27634,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27621,
											"end": 27634,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27634,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27621,
											"end": 27634,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27640,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27635,
											"end": 27639,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27640,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27621,
											"end": 27640,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27640,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27621,
											"end": 27640,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27640,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27640,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27621,
											"end": 27640,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27640,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27640,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27621,
											"end": 27640,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27640,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27621,
											"end": 27640,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27621,
											"end": 27640,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27599,
											"end": 27640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27599,
											"end": 27640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27678,
											"end": 27684,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27663,
											"end": 27674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27663,
											"end": 27684,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27663,
											"end": 27684,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27655,
											"end": 27731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 27655,
											"end": 27731,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27655,
											"end": 27731,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27655,
											"end": 27731,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27655,
											"end": 27731,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27655,
											"end": 27731,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27655,
											"end": 27731,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27655,
											"end": 27731,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27655,
											"end": 27731,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27655,
											"end": 27731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 27655,
											"end": 27731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27655,
											"end": 27731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 27655,
											"end": 27731,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27655,
											"end": 27731,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 27655,
											"end": 27731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27655,
											"end": 27731,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27655,
											"end": 27731,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27655,
											"end": 27731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27655,
											"end": 27731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27655,
											"end": 27731,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27655,
											"end": 27731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27655,
											"end": 27731,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27655,
											"end": 27731,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 27655,
											"end": 27731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27811,
											"end": 27817,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27797,
											"end": 27808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27797,
											"end": 27817,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27775,
											"end": 27784,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27775,
											"end": 27788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27785,
											"end": 27787,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27775,
											"end": 27788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27775,
											"end": 27788,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27775,
											"end": 27788,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27775,
											"end": 27788,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27775,
											"end": 27788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27775,
											"end": 27788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27775,
											"end": 27788,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27775,
											"end": 27788,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27775,
											"end": 27788,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27775,
											"end": 27788,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27775,
											"end": 27788,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27775,
											"end": 27794,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27789,
											"end": 27793,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 27775,
											"end": 27794,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27775,
											"end": 27794,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27775,
											"end": 27794,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27775,
											"end": 27794,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27775,
											"end": 27794,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27775,
											"end": 27794,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27775,
											"end": 27794,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27775,
											"end": 27794,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27775,
											"end": 27794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27775,
											"end": 27794,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27775,
											"end": 27794,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27775,
											"end": 27794,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27775,
											"end": 27794,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27775,
											"end": 27794,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27775,
											"end": 27794,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27775,
											"end": 27817,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27775,
											"end": 27817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27775,
											"end": 27817,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27775,
											"end": 27817,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27868,
											"end": 27874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27847,
											"end": 27856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27847,
											"end": 27860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27859,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27847,
											"end": 27860,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27847,
											"end": 27860,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27847,
											"end": 27860,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27847,
											"end": 27860,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27847,
											"end": 27860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27847,
											"end": 27860,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27847,
											"end": 27860,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27847,
											"end": 27860,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27847,
											"end": 27860,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27847,
											"end": 27860,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27847,
											"end": 27860,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27847,
											"end": 27864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27861,
											"end": 27863,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 27847,
											"end": 27864,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27847,
											"end": 27864,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27847,
											"end": 27864,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27847,
											"end": 27864,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27847,
											"end": 27864,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27847,
											"end": 27864,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27847,
											"end": 27864,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27847,
											"end": 27864,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27847,
											"end": 27864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27847,
											"end": 27864,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27847,
											"end": 27864,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27847,
											"end": 27864,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27847,
											"end": 27864,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27847,
											"end": 27864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27847,
											"end": 27864,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27847,
											"end": 27864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27847,
											"end": 27874,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27847,
											"end": 27874,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27847,
											"end": 27874,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27847,
											"end": 27874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 27847,
											"end": 27874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27847,
											"end": 27874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27847,
											"end": 27874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 27847,
											"end": 27874,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27847,
											"end": 27874,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 27847,
											"end": 27874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27847,
											"end": 27874,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27847,
											"end": 27874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27847,
											"end": 27874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27847,
											"end": 27874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27847,
											"end": 27874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27847,
											"end": 27874,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27847,
											"end": 27874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27465,
											"end": 27886,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27465,
											"end": 27886,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27465,
											"end": 27886,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27501,
											"end": 27504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27501,
											"end": 27504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 27501,
											"end": 27504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27501,
											"end": 27504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 27501,
											"end": 27504,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27501,
											"end": 27504,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 27501,
											"end": 27504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27501,
											"end": 27504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27501,
											"end": 27504,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27465,
											"end": 27886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 27465,
											"end": 27886,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27465,
											"end": 27886,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 27465,
											"end": 27886,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27465,
											"end": 27886,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27933,
											"end": 27935,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27903,
											"end": 27950,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27903,
											"end": 27950,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27927,
											"end": 27931,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 27903,
											"end": 27950,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27903,
											"end": 27950,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27917,
											"end": 27925,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27903,
											"end": 27950,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27903,
											"end": 27950,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27903,
											"end": 27950,
											"name": "PUSH",
											"source": 0,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 27937,
											"end": 27940,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 27942,
											"end": 27949,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 27903,
											"end": 27950,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27903,
											"end": 27950,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27903,
											"end": 27950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 27903,
											"end": 27950,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27903,
											"end": 27950,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27903,
											"end": 27950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27903,
											"end": 27950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 27903,
											"end": 27950,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27903,
											"end": 27950,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 27903,
											"end": 27950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27903,
											"end": 27950,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27903,
											"end": 27950,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27903,
											"end": 27950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27903,
											"end": 27950,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27903,
											"end": 27950,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27903,
											"end": 27950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27903,
											"end": 27950,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 27963,
											"end": 28038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 27999,
											"end": 28007,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28009,
											"end": 28013,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 28015,
											"end": 28017,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 28019,
											"end": 28022,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 28024,
											"end": 28031,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 28033,
											"end": 28037,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 27963,
											"end": 27998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 27963,
											"end": 28038,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27963,
											"end": 28038,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 27963,
											"end": 28038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26972,
											"end": 28046,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26972,
											"end": 28046,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26972,
											"end": 28046,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26972,
											"end": 28046,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26972,
											"end": 28046,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26972,
											"end": 28046,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26972,
											"end": 28046,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 33159,
											"end": 33490,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 33159,
											"end": 33490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33314,
											"end": 33322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33305,
											"end": 33322,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33305,
											"end": 33322,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33305,
											"end": 33310,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33305,
											"end": 33322,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33305,
											"end": 33322,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33305,
											"end": 33322,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33305,
											"end": 33322,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33297,
											"end": 33368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 33297,
											"end": 33368,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33297,
											"end": 33368,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33297,
											"end": 33368,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33297,
											"end": 33368,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 33297,
											"end": 33368,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33297,
											"end": 33368,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33297,
											"end": 33368,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33297,
											"end": 33368,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33297,
											"end": 33368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 33297,
											"end": 33368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33297,
											"end": 33368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 33297,
											"end": 33368,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33297,
											"end": 33368,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 33297,
											"end": 33368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33297,
											"end": 33368,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33297,
											"end": 33368,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33297,
											"end": 33368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33297,
											"end": 33368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33297,
											"end": 33368,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33297,
											"end": 33368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33297,
											"end": 33368,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33297,
											"end": 33368,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 33297,
											"end": 33368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33417,
											"end": 33425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33397,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33379,
											"end": 33404,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33398,
											"end": 33403,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33404,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33379,
											"end": 33404,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33404,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33379,
											"end": 33404,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33404,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33404,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33379,
											"end": 33404,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33404,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33404,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33379,
											"end": 33404,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33404,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33379,
											"end": 33404,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33414,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33405,
											"end": 33413,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33414,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33379,
											"end": 33414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33414,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33379,
											"end": 33414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33414,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33414,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33414,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33379,
											"end": 33414,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33414,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33414,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33414,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33379,
											"end": 33414,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33414,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33379,
											"end": 33414,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33414,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33379,
											"end": 33425,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 33379,
											"end": 33425,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33425,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33425,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 33379,
											"end": 33425,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33425,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33425,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33425,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33425,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33425,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33425,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33425,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33425,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33463,
											"end": 33471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33441,
											"end": 33482,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33441,
											"end": 33482,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33456,
											"end": 33461,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33441,
											"end": 33482,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33441,
											"end": 33482,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33441,
											"end": 33482,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 33473,
											"end": 33481,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33441,
											"end": 33482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33441,
											"end": 33482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33441,
											"end": 33482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 33441,
											"end": 33482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33441,
											"end": 33482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33441,
											"end": 33482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 33441,
											"end": 33482,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33441,
											"end": 33482,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 33441,
											"end": 33482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33441,
											"end": 33482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33441,
											"end": 33482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33441,
											"end": 33482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33441,
											"end": 33482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33441,
											"end": 33482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33441,
											"end": 33482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33441,
											"end": 33482,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 33159,
											"end": 33490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33159,
											"end": 33490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33159,
											"end": 33490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33159,
											"end": 33490,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25794,
											"end": 26614,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 25794,
											"end": 26614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25996,
											"end": 25997,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25982,
											"end": 25998,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25982,
											"end": 25998,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25982,
											"end": 25984,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25982,
											"end": 25998,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25982,
											"end": 25998,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25982,
											"end": 25998,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25982,
											"end": 25998,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25974,
											"end": 26040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 25974,
											"end": 26040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25974,
											"end": 26040,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25974,
											"end": 26040,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25974,
											"end": 26040,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25974,
											"end": 26040,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25974,
											"end": 26040,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25974,
											"end": 26040,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25974,
											"end": 26040,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25974,
											"end": 26040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 25974,
											"end": 26040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25974,
											"end": 26040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 25974,
											"end": 26040,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25974,
											"end": 26040,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 25974,
											"end": 26040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25974,
											"end": 26040,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25974,
											"end": 26040,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25974,
											"end": 26040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25974,
											"end": 26040,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25974,
											"end": 26040,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25974,
											"end": 26040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25974,
											"end": 26040,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25974,
											"end": 26040,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 25974,
											"end": 26040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26053,
											"end": 26069,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26072,
											"end": 26084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 26072,
											"end": 26082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 26072,
											"end": 26084,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26072,
											"end": 26084,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 26072,
											"end": 26084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26053,
											"end": 26084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26053,
											"end": 26084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26097,
											"end": 26193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 26118,
											"end": 26126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26128,
											"end": 26132,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 26134,
											"end": 26136,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 26138,
											"end": 26159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 26156,
											"end": 26158,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 26138,
											"end": 26155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 26138,
											"end": 26159,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26138,
											"end": 26159,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 26138,
											"end": 26159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26161,
											"end": 26186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 26179,
											"end": 26185,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 26161,
											"end": 26178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 26161,
											"end": 26186,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26161,
											"end": 26186,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 26161,
											"end": 26186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26188,
											"end": 26192,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 26097,
											"end": 26117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 26097,
											"end": 26193,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26097,
											"end": 26193,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 26097,
											"end": 26193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26206,
											"end": 26225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26228,
											"end": 26237,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26228,
											"end": 26241,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26238,
											"end": 26240,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 26228,
											"end": 26241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26228,
											"end": 26241,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26228,
											"end": 26241,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26228,
											"end": 26241,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26228,
											"end": 26241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26228,
											"end": 26241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26228,
											"end": 26241,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26228,
											"end": 26241,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26228,
											"end": 26241,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26228,
											"end": 26241,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26228,
											"end": 26241,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26228,
											"end": 26247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26242,
											"end": 26246,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 26228,
											"end": 26247,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26228,
											"end": 26247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26228,
											"end": 26247,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26228,
											"end": 26247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26228,
											"end": 26247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26228,
											"end": 26247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26228,
											"end": 26247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26228,
											"end": 26247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26228,
											"end": 26247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26228,
											"end": 26247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26228,
											"end": 26247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26228,
											"end": 26247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26228,
											"end": 26247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26228,
											"end": 26247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26228,
											"end": 26247,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26228,
											"end": 26247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26206,
											"end": 26247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26206,
											"end": 26247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26281,
											"end": 26287,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26266,
											"end": 26277,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26266,
											"end": 26287,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26266,
											"end": 26287,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26258,
											"end": 26334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 26258,
											"end": 26334,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26258,
											"end": 26334,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26258,
											"end": 26334,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26258,
											"end": 26334,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26258,
											"end": 26334,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26258,
											"end": 26334,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26258,
											"end": 26334,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26258,
											"end": 26334,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26258,
											"end": 26334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 26258,
											"end": 26334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26258,
											"end": 26334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 26258,
											"end": 26334,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26258,
											"end": 26334,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 26258,
											"end": 26334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26258,
											"end": 26334,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26258,
											"end": 26334,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26258,
											"end": 26334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26258,
											"end": 26334,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26258,
											"end": 26334,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26258,
											"end": 26334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26258,
											"end": 26334,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26258,
											"end": 26334,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 26258,
											"end": 26334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26406,
											"end": 26412,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26392,
											"end": 26403,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26392,
											"end": 26412,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26379,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26370,
											"end": 26383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26380,
											"end": 26382,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26383,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26383,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26370,
											"end": 26383,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26383,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26383,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26370,
											"end": 26383,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26370,
											"end": 26383,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26384,
											"end": 26388,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26389,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26370,
											"end": 26389,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26389,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26370,
											"end": 26389,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26389,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26389,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26370,
											"end": 26389,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26389,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26389,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26370,
											"end": 26389,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26370,
											"end": 26389,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26412,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26455,
											"end": 26461,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26443,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26434,
											"end": 26447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26444,
											"end": 26446,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26447,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26447,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26447,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26434,
											"end": 26447,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26447,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26447,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26447,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26434,
											"end": 26447,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26447,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26434,
											"end": 26447,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26451,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26448,
											"end": 26450,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26451,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26434,
											"end": 26451,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26451,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26434,
											"end": 26451,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26451,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26451,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26434,
											"end": 26451,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26451,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26451,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26434,
											"end": 26451,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26451,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26434,
											"end": 26451,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26451,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26434,
											"end": 26461,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26461,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26461,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 26434,
											"end": 26461,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26461,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 26434,
											"end": 26461,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26434,
											"end": 26461,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 26434,
											"end": 26461,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26461,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26461,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26461,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26461,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26461,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26461,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26434,
											"end": 26461,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26510,
											"end": 26512,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26479,
											"end": 26525,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26479,
											"end": 26525,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26504,
											"end": 26508,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 26479,
											"end": 26525,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26479,
											"end": 26525,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26494,
											"end": 26502,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26479,
											"end": 26525,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26479,
											"end": 26525,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26479,
											"end": 26525,
											"name": "PUSH",
											"source": 0,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 26514,
											"end": 26516,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 26518,
											"end": 26524,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 26479,
											"end": 26525,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26479,
											"end": 26525,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26479,
											"end": 26525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 26479,
											"end": 26525,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26479,
											"end": 26525,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26479,
											"end": 26525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26479,
											"end": 26525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 26479,
											"end": 26525,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26479,
											"end": 26525,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 26479,
											"end": 26525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26479,
											"end": 26525,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26479,
											"end": 26525,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26479,
											"end": 26525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26479,
											"end": 26525,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26479,
											"end": 26525,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26479,
											"end": 26525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26479,
											"end": 26525,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 26538,
											"end": 26606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 26569,
											"end": 26577,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26579,
											"end": 26583,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 26585,
											"end": 26587,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 26589,
											"end": 26591,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 26593,
											"end": 26599,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 26601,
											"end": 26605,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 26538,
											"end": 26568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 26538,
											"end": 26606,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26538,
											"end": 26606,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 26538,
											"end": 26606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25794,
											"end": 26614,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25794,
											"end": 26614,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25794,
											"end": 26614,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25794,
											"end": 26614,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25794,
											"end": 26614,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25794,
											"end": 26614,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25794,
											"end": 26614,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25794,
											"end": 26614,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 34446,
											"end": 34667,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 34446,
											"end": 34667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34446,
											"end": 34667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34446,
											"end": 34667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34446,
											"end": 34667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34446,
											"end": 34667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34446,
											"end": 34667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34446,
											"end": 34667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34446,
											"end": 34667,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 35427,
											"end": 36240,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 35427,
											"end": 36240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35667,
											"end": 35682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 35667,
											"end": 35669,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35667,
											"end": 35680,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35667,
											"end": 35680,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35667,
											"end": 35680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 35667,
											"end": 35682,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35667,
											"end": 35682,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 35667,
											"end": 35682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35663,
											"end": 36233,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35663,
											"end": 36233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 35663,
											"end": 36233,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35720,
											"end": 35722,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35746,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35703,
											"end": 35746,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35746,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 35747,
											"end": 35755,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 35757,
											"end": 35761,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 35763,
											"end": 35766,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 35768,
											"end": 35775,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 35777,
											"end": 35781,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 35703,
											"end": 35782,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35699,
											"end": 36222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 35699,
											"end": 36222,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35699,
											"end": 36222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 35699,
											"end": 36222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 35699,
											"end": 36222,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35699,
											"end": 36222,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 35699,
											"end": 36222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35699,
											"end": 36222,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35699,
											"end": 36222,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A0"
										},
										{
											"begin": 35699,
											"end": 36222,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35699,
											"end": 36222,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35699,
											"end": 36222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 35699,
											"end": 36222,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35699,
											"end": 36222,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35699,
											"end": 36222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 35699,
											"end": 36222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 35699,
											"end": 36222,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35699,
											"end": 36222,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 35699,
											"end": 36222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35699,
											"end": 36222,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35699,
											"end": 36222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 35699,
											"end": 36222,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35699,
											"end": 36222,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35699,
											"end": 36222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 35699,
											"end": 36222,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35699,
											"end": 36222,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 35699,
											"end": 36222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36095,
											"end": 36101,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36088,
											"end": 36102,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36088,
											"end": 36102,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36088,
											"end": 36102,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 36088,
											"end": 36102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36088,
											"end": 36102,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36088,
											"end": 36102,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36088,
											"end": 36102,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36088,
											"end": 36102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 36088,
											"end": 36102,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36088,
											"end": 36102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36088,
											"end": 36102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 36088,
											"end": 36102,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36088,
											"end": 36102,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 36088,
											"end": 36102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36088,
											"end": 36102,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36088,
											"end": 36102,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36088,
											"end": 36102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36088,
											"end": 36102,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36088,
											"end": 36102,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36088,
											"end": 36102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36088,
											"end": 36102,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35699,
											"end": 36222,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 35699,
											"end": 36222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35699,
											"end": 36222,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35699,
											"end": 36222,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 35699,
											"end": 36222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36144,
											"end": 36206,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36144,
											"end": 36206,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36144,
											"end": 36206,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 36144,
											"end": 36206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36144,
											"end": 36206,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36144,
											"end": 36206,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36144,
											"end": 36206,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36144,
											"end": 36206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 36144,
											"end": 36206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36144,
											"end": 36206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 36144,
											"end": 36206,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36144,
											"end": 36206,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 36144,
											"end": 36206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36144,
											"end": 36206,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36144,
											"end": 36206,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36144,
											"end": 36206,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36144,
											"end": 36206,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36144,
											"end": 36206,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36144,
											"end": 36206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36144,
											"end": 36206,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35699,
											"end": 36222,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 35699,
											"end": 36222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35876,
											"end": 35924,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 35876,
											"end": 35924,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 35876,
											"end": 35924,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 35864,
											"end": 35924,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35864,
											"end": 35924,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 35864,
											"end": 35924,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35864,
											"end": 35872,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35864,
											"end": 35924,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35864,
											"end": 35924,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 35864,
											"end": 35924,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35864,
											"end": 35924,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35860,
											"end": 36019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 35860,
											"end": 36019,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35949,
											"end": 35999,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35949,
											"end": 35999,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35949,
											"end": 35999,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 35949,
											"end": 35999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35949,
											"end": 35999,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35949,
											"end": 35999,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35949,
											"end": 35999,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35949,
											"end": 35999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 35949,
											"end": 35999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35949,
											"end": 35999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 35949,
											"end": 35999,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35949,
											"end": 35999,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 35949,
											"end": 35999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35949,
											"end": 35999,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35949,
											"end": 35999,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35949,
											"end": 35999,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35949,
											"end": 35999,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35949,
											"end": 35999,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35949,
											"end": 35999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35949,
											"end": 35999,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35860,
											"end": 36019,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 35860,
											"end": 36019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35783,
											"end": 36034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35663,
											"end": 36233,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 35663,
											"end": 36233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35427,
											"end": 36240,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35427,
											"end": 36240,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35427,
											"end": 36240,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35427,
											"end": 36240,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35427,
											"end": 36240,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35427,
											"end": 36240,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35427,
											"end": 36240,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 36248,
											"end": 36446,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 36248,
											"end": 36446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36314,
											"end": 36330,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 36343,
											"end": 36365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36382,
											"end": 36383,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36368,
											"end": 36384,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36343,
											"end": 36384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36343,
											"end": 36384,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36406,
											"end": 36413,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36395,
											"end": 36400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36401,
											"end": 36402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36395,
											"end": 36403,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36395,
											"end": 36403,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36395,
											"end": 36403,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36395,
											"end": 36403,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 36395,
											"end": 36403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 36395,
											"end": 36403,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36395,
											"end": 36403,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 36395,
											"end": 36403,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36395,
											"end": 36403,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36395,
											"end": 36403,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 36395,
											"end": 36403,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36395,
											"end": 36403,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36395,
											"end": 36403,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 36395,
											"end": 36403,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36395,
											"end": 36403,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36395,
											"end": 36403,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 36395,
											"end": 36403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36395,
											"end": 36403,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36395,
											"end": 36403,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 36395,
											"end": 36403,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36395,
											"end": 36403,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36395,
											"end": 36403,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36395,
											"end": 36413,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36395,
											"end": 36413,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36395,
											"end": 36413,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36395,
											"end": 36413,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36395,
											"end": 36413,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36433,
											"end": 36438,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36426,
											"end": 36438,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36426,
											"end": 36438,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36426,
											"end": 36438,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36248,
											"end": 36446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36248,
											"end": 36446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36248,
											"end": 36446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36248,
											"end": 36446,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 34675,
											"end": 35419,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 34675,
											"end": 35419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34890,
											"end": 34905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 34890,
											"end": 34892,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34890,
											"end": 34903,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34890,
											"end": 34903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34890,
											"end": 34903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 34890,
											"end": 34905,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34890,
											"end": 34905,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 34890,
											"end": 34905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34886,
											"end": 35412,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34886,
											"end": 35412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 34886,
											"end": 35412,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34943,
											"end": 34945,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34964,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34926,
											"end": 34964,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34964,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E61"
										},
										{
											"begin": 34965,
											"end": 34973,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 34979,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34981,
											"end": 34983,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34985,
											"end": 34991,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34993,
											"end": 34997,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 34926,
											"end": 34998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34922,
											"end": 35401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 34922,
											"end": 35401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34922,
											"end": 35401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 34922,
											"end": 35401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 34922,
											"end": 35401,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34922,
											"end": 35401,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 34922,
											"end": 35401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34922,
											"end": 35401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34922,
											"end": 35401,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A0"
										},
										{
											"begin": 34922,
											"end": 35401,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34922,
											"end": 35401,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34922,
											"end": 35401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 34922,
											"end": 35401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34922,
											"end": 35401,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34922,
											"end": 35401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 34922,
											"end": 35401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 34922,
											"end": 35401,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34922,
											"end": 35401,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 34922,
											"end": 35401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34922,
											"end": 35401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34922,
											"end": 35401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 34922,
											"end": 35401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34922,
											"end": 35401,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34922,
											"end": 35401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 34922,
											"end": 35401,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34922,
											"end": 35401,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 34922,
											"end": 35401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35274,
											"end": 35280,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35267,
											"end": 35281,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35267,
											"end": 35281,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35267,
											"end": 35281,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 35267,
											"end": 35281,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35267,
											"end": 35281,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35267,
											"end": 35281,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35267,
											"end": 35281,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35267,
											"end": 35281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 35267,
											"end": 35281,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35267,
											"end": 35281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35267,
											"end": 35281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 35267,
											"end": 35281,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35267,
											"end": 35281,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 35267,
											"end": 35281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35267,
											"end": 35281,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35267,
											"end": 35281,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35267,
											"end": 35281,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35267,
											"end": 35281,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35267,
											"end": 35281,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35267,
											"end": 35281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35267,
											"end": 35281,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34922,
											"end": 35401,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 34922,
											"end": 35401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34922,
											"end": 35401,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34922,
											"end": 35401,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 34922,
											"end": 35401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35323,
											"end": 35385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35323,
											"end": 35385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35323,
											"end": 35385,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 35323,
											"end": 35385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35323,
											"end": 35385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35323,
											"end": 35385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35323,
											"end": 35385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35323,
											"end": 35385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 35323,
											"end": 35385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35323,
											"end": 35385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 35323,
											"end": 35385,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35323,
											"end": 35385,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 35323,
											"end": 35385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35323,
											"end": 35385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35323,
											"end": 35385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35323,
											"end": 35385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35323,
											"end": 35385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35323,
											"end": 35385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35323,
											"end": 35385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35323,
											"end": 35385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34922,
											"end": 35401,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 34922,
											"end": 35401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35060,
											"end": 35103,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E61"
										},
										{
											"begin": 35060,
											"end": 35103,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 35060,
											"end": 35103,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 35048,
											"end": 35103,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35048,
											"end": 35103,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 35048,
											"end": 35103,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35048,
											"end": 35056,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35048,
											"end": 35103,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35048,
											"end": 35103,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 35048,
											"end": 35103,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35048,
											"end": 35103,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35044,
											"end": 35198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 35044,
											"end": 35198,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35128,
											"end": 35178,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35128,
											"end": 35178,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35128,
											"end": 35178,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 35128,
											"end": 35178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35128,
											"end": 35178,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35128,
											"end": 35178,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35128,
											"end": 35178,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35128,
											"end": 35178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 35128,
											"end": 35178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35128,
											"end": 35178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 35128,
											"end": 35178,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35128,
											"end": 35178,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 35128,
											"end": 35178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35128,
											"end": 35178,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35128,
											"end": 35178,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35128,
											"end": 35178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35128,
											"end": 35178,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35128,
											"end": 35178,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35128,
											"end": 35178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35128,
											"end": 35178,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35044,
											"end": 35198,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 35044,
											"end": 35198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34999,
											"end": 35213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34886,
											"end": 35412,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 34886,
											"end": 35412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34675,
											"end": 35419,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34675,
											"end": 35419,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34675,
											"end": 35419,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34675,
											"end": 35419,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34675,
											"end": 35419,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34675,
											"end": 35419,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34675,
											"end": 35419,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4178,
											"end": 4565,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 4178,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4238,
											"end": 4242,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4446,
											"end": 4458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4513,
											"end": 4520,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4501,
											"end": 4521,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4557,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4549,
											"end": 4553,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4549,
											"end": 4557,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4542,
											"end": 4557,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4542,
											"end": 4557,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4542,
											"end": 4557,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4178,
											"end": 4565,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4178,
											"end": 4565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4178,
											"end": 4565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4178,
											"end": 4565,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24,
											"end": 647,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 24,
											"end": 647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24,
											"end": 647,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 218,
											"end": 224,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 161,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 145,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 136,
											"end": 226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 136,
											"end": 226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 246,
											"end": 251,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 274,
											"end": 280,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 267,
											"end": 272,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 260,
											"end": 281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 300,
											"end": 304,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 293,
											"end": 298,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 289,
											"end": 305,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 282,
											"end": 305,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 282,
											"end": 305,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 325,
											"end": 331,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 375,
											"end": 378,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 367,
											"end": 371,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 359,
											"end": 365,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 355,
											"end": 372,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 346,
											"end": 373,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 343,
											"end": 379,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 340,
											"end": 342,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 340,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 340,
											"end": 342,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 392,
											"end": 393,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 382,
											"end": 394,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 340,
											"end": 342,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 340,
											"end": 342,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 420,
											"end": 421,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 641,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 405,
											"end": 641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 430,
											"end": 436,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 427,
											"end": 428,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 424,
											"end": 437,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 405,
											"end": 641,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 405,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 405,
											"end": 641,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 497,
											"end": 500,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 525,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 558,
											"end": 561,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 546,
											"end": 556,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 525,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 525,
											"end": 562,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 525,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 525,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 520,
											"end": 523,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 513,
											"end": 563,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 592,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 587,
											"end": 590,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 583,
											"end": 597,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 576,
											"end": 597,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 576,
											"end": 597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 626,
											"end": 630,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 621,
											"end": 624,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 617,
											"end": 631,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 610,
											"end": 631,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 610,
											"end": 631,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 465,
											"end": 641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 452,
											"end": 453,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 449,
											"end": 450,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 445,
											"end": 454,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 440,
											"end": 454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 440,
											"end": 454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 405,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 405,
											"end": 641,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 405,
											"end": 641,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 405,
											"end": 641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 409,
											"end": 423,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 126,
											"end": 647,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 126,
											"end": 647,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 126,
											"end": 647,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 126,
											"end": 647,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 126,
											"end": 647,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 126,
											"end": 647,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 126,
											"end": 647,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 126,
											"end": 647,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 670,
											"end": 1293,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 670,
											"end": 1293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 670,
											"end": 1293,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 791,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 807,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 864,
											"end": 870,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 807,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 807,
											"end": 871,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 807,
											"end": 871,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 807,
											"end": 871,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 791,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 791,
											"end": 872,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 791,
											"end": 872,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 791,
											"end": 872,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 782,
											"end": 872,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 782,
											"end": 872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 892,
											"end": 897,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 920,
											"end": 926,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 913,
											"end": 918,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 906,
											"end": 927,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 946,
											"end": 950,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 939,
											"end": 944,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 935,
											"end": 951,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 928,
											"end": 951,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 928,
											"end": 951,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 971,
											"end": 977,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1024,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1017,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1005,
											"end": 1011,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1001,
											"end": 1018,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 996,
											"end": 999,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 992,
											"end": 1019,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1025,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 986,
											"end": 988,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 986,
											"end": 988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 986,
											"end": 988,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1038,
											"end": 1039,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1035,
											"end": 1036,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1028,
											"end": 1040,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 986,
											"end": 988,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 986,
											"end": 988,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1067,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1051,
											"end": 1287,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 1051,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1076,
											"end": 1082,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1074,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 1083,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1287,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 1051,
											"end": 1287,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1146,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 1204,
											"end": 1207,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 1192,
											"end": 1202,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 1171,
											"end": 1208,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1171,
											"end": 1208,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 1171,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1166,
											"end": 1169,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1209,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1238,
											"end": 1242,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1233,
											"end": 1236,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1229,
											"end": 1243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1243,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1243,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1276,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1267,
											"end": 1270,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1277,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1111,
											"end": 1287,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1099,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1095,
											"end": 1096,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1100,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1100,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1100,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 1051,
											"end": 1287,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1287,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 1051,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1055,
											"end": 1069,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 772,
											"end": 1293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 772,
											"end": 1293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 772,
											"end": 1293,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 772,
											"end": 1293,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 772,
											"end": 1293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 772,
											"end": 1293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 772,
											"end": 1293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 772,
											"end": 1293,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1299,
											"end": 1642,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 1299,
											"end": 1642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1299,
											"end": 1642,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 1417,
											"end": 1465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 1458,
											"end": 1464,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 1417,
											"end": 1465,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1417,
											"end": 1465,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 1417,
											"end": 1465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 1401,
											"end": 1466,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1401,
											"end": 1466,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 1401,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1466,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1466,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1489,
											"end": 1495,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 1487,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1475,
											"end": 1496,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1531,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1520,
											"end": 1525,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1532,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1565,
											"end": 1568,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1556,
											"end": 1562,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1554,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1547,
											"end": 1563,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1569,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1543,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 1541,
											"end": 1543,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1582,
											"end": 1583,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1579,
											"end": 1580,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1572,
											"end": 1584,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1543,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 1541,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 1629,
											"end": 1635,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1627,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1622,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 1642,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 1642,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 1642,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 1642,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 1642,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 1642,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 1642,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1648,
											"end": 1787,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 1648,
											"end": 1787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1648,
											"end": 1787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1738,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1719,
											"end": 1739,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1739,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1739,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1748,
											"end": 1781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 1775,
											"end": 1780,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1748,
											"end": 1781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 1748,
											"end": 1781,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1748,
											"end": 1781,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 1748,
											"end": 1781,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1700,
											"end": 1787,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1700,
											"end": 1787,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1700,
											"end": 1787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1700,
											"end": 1787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1700,
											"end": 1787,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1810,
											"end": 2113,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 1810,
											"end": 2113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1810,
											"end": 2113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1930,
											"end": 1933,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1923,
											"end": 1927,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1915,
											"end": 1921,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1911,
											"end": 1928,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1907,
											"end": 1934,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 1897,
											"end": 1899,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1948,
											"end": 1949,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1945,
											"end": 1946,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1938,
											"end": 1950,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1899,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 1897,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 1994,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1995,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2013,
											"end": 2107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 2103,
											"end": 2106,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2095,
											"end": 2101,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2088,
											"end": 2092,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2080,
											"end": 2086,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2013,
											"end": 2107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 2013,
											"end": 2107,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2013,
											"end": 2107,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 2013,
											"end": 2107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2107,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2107,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 2113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 2113,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 2113,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 2113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 2113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 2113,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2136,
											"end": 2439,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 2136,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2439,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2256,
											"end": 2259,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2249,
											"end": 2253,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2241,
											"end": 2247,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2254,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2260,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 2223,
											"end": 2225,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2275,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2264,
											"end": 2276,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2225,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 2223,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2314,
											"end": 2320,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2301,
											"end": 2321,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 2429,
											"end": 2432,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2421,
											"end": 2427,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2414,
											"end": 2418,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2406,
											"end": 2412,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2402,
											"end": 2419,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 2339,
											"end": 2433,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2339,
											"end": 2433,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 2339,
											"end": 2433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2330,
											"end": 2433,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2330,
											"end": 2433,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2213,
											"end": 2439,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2213,
											"end": 2439,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2213,
											"end": 2439,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2213,
											"end": 2439,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2213,
											"end": 2439,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2213,
											"end": 2439,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2445,
											"end": 2578,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 2445,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2445,
											"end": 2578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2526,
											"end": 2532,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2513,
											"end": 2533,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2504,
											"end": 2533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2504,
											"end": 2533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2542,
											"end": 2572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 2566,
											"end": 2571,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2542,
											"end": 2572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 2542,
											"end": 2572,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2542,
											"end": 2572,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 2542,
											"end": 2572,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2578,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2578,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2578,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2578,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2578,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2584,
											"end": 2721,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 2584,
											"end": 2721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2721,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2667,
											"end": 2673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2654,
											"end": 2674,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 2709,
											"end": 2714,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 2683,
											"end": 2715,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2683,
											"end": 2715,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 2683,
											"end": 2715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2635,
											"end": 2721,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2635,
											"end": 2721,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2635,
											"end": 2721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2635,
											"end": 2721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2635,
											"end": 2721,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2727,
											"end": 2868,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 2727,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2727,
											"end": 2868,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2814,
											"end": 2820,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2808,
											"end": 2821,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2799,
											"end": 2821,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2799,
											"end": 2821,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 2856,
											"end": 2861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 2830,
											"end": 2862,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2830,
											"end": 2862,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 2830,
											"end": 2862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2789,
											"end": 2868,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2789,
											"end": 2868,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2789,
											"end": 2868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2789,
											"end": 2868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2789,
											"end": 2868,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2887,
											"end": 3158,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 2887,
											"end": 3158,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2887,
											"end": 3158,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2991,
											"end": 2994,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 2988,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2976,
											"end": 2982,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2972,
											"end": 2989,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 2995,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2958,
											"end": 2960,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 2958,
											"end": 2960,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3009,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3006,
											"end": 3007,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2999,
											"end": 3011,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2958,
											"end": 2960,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 2958,
											"end": 2960,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3049,
											"end": 3055,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3056,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3074,
											"end": 3152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 3148,
											"end": 3151,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3140,
											"end": 3146,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3137,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3125,
											"end": 3131,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3121,
											"end": 3138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3074,
											"end": 3152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 3074,
											"end": 3152,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3074,
											"end": 3152,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 3074,
											"end": 3152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3065,
											"end": 3152,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3065,
											"end": 3152,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2948,
											"end": 3158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2948,
											"end": 3158,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2948,
											"end": 3158,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2948,
											"end": 3158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2948,
											"end": 3158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2948,
											"end": 3158,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3164,
											"end": 3303,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 3164,
											"end": 3303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3303,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3254,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3235,
											"end": 3255,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3226,
											"end": 3255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3226,
											"end": 3255,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3264,
											"end": 3297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 3291,
											"end": 3296,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3264,
											"end": 3297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 3264,
											"end": 3297,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3264,
											"end": 3297,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 3264,
											"end": 3297,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3303,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3303,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3309,
											"end": 3716,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3309,
											"end": 3716,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3309,
											"end": 3716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3309,
											"end": 3716,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3434,
											"end": 3436,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3422,
											"end": 3431,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3420,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3409,
											"end": 3432,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3437,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3402,
											"end": 3404,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3402,
											"end": 3404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 3402,
											"end": 3404,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3447,
											"end": 3448,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3440,
											"end": 3452,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3402,
											"end": 3404,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 3402,
											"end": 3404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3494,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3518,
											"end": 3571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 3563,
											"end": 3570,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3554,
											"end": 3560,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3543,
											"end": 3552,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3539,
											"end": 3561,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3518,
											"end": 3571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 3518,
											"end": 3571,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3518,
											"end": 3571,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 3518,
											"end": 3571,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3571,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3571,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3464,
											"end": 3581,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3620,
											"end": 3622,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3646,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 3691,
											"end": 3698,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3682,
											"end": 3688,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3671,
											"end": 3680,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3667,
											"end": 3689,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3646,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 3646,
											"end": 3699,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3646,
											"end": 3699,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 3646,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3636,
											"end": 3699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3636,
											"end": 3699,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3709,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3392,
											"end": 3716,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3392,
											"end": 3716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3392,
											"end": 3716,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3392,
											"end": 3716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3392,
											"end": 3716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3392,
											"end": 3716,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3722,
											"end": 4963,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3722,
											"end": 4963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3722,
											"end": 4963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3722,
											"end": 4963,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3722,
											"end": 4963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3722,
											"end": 4963,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3722,
											"end": 4963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3957,
											"end": 3960,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 3945,
											"end": 3954,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3936,
											"end": 3943,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3932,
											"end": 3955,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 3961,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3925,
											"end": 3927,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3925,
											"end": 3927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 3925,
											"end": 3927,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 3975,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3972,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 3976,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3925,
											"end": 3927,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 3925,
											"end": 3927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4017,
											"end": 4018,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4042,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 4087,
											"end": 4094,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4078,
											"end": 4084,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4076,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4063,
											"end": 4085,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4042,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 4042,
											"end": 4095,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4042,
											"end": 4095,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 4042,
											"end": 4095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4032,
											"end": 4095,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 4032,
											"end": 4095,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3988,
											"end": 4105,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4144,
											"end": 4146,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4170,
											"end": 4223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 4215,
											"end": 4222,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4206,
											"end": 4212,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4195,
											"end": 4204,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4170,
											"end": 4223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 4170,
											"end": 4223,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4170,
											"end": 4223,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 4170,
											"end": 4223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4160,
											"end": 4223,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4160,
											"end": 4223,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4115,
											"end": 4233,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4300,
											"end": 4302,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4289,
											"end": 4298,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4285,
											"end": 4303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4272,
											"end": 4304,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4331,
											"end": 4349,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4323,
											"end": 4329,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4320,
											"end": 4350,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4317,
											"end": 4319,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4317,
											"end": 4319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 4317,
											"end": 4319,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4363,
											"end": 4364,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4360,
											"end": 4361,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4353,
											"end": 4365,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4317,
											"end": 4319,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 4317,
											"end": 4319,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4391,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 4461,
											"end": 4468,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4452,
											"end": 4458,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4441,
											"end": 4450,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4391,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 4391,
											"end": 4469,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4391,
											"end": 4469,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 4391,
											"end": 4469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4381,
											"end": 4469,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4381,
											"end": 4469,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4243,
											"end": 4479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4546,
											"end": 4548,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4535,
											"end": 4544,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4531,
											"end": 4549,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4518,
											"end": 4550,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4577,
											"end": 4595,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4569,
											"end": 4575,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4566,
											"end": 4596,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4563,
											"end": 4565,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4563,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 4563,
											"end": 4565,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4609,
											"end": 4610,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4606,
											"end": 4607,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4599,
											"end": 4611,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4563,
											"end": 4565,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 4563,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4637,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 4707,
											"end": 4714,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4704,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4687,
											"end": 4696,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4683,
											"end": 4705,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4637,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 4637,
											"end": 4715,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4637,
											"end": 4715,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 4637,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4627,
											"end": 4715,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4627,
											"end": 4715,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4489,
											"end": 4725,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4792,
											"end": 4795,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4781,
											"end": 4790,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4777,
											"end": 4796,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4764,
											"end": 4797,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4824,
											"end": 4842,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4816,
											"end": 4822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4813,
											"end": 4843,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4812,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 4810,
											"end": 4812,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4856,
											"end": 4857,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4853,
											"end": 4854,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 4858,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4812,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 4810,
											"end": 4812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 4946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 4938,
											"end": 4945,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4929,
											"end": 4935,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4918,
											"end": 4927,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 4936,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 4946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 4884,
											"end": 4946,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4884,
											"end": 4946,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 4884,
											"end": 4946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4874,
											"end": 4946,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4874,
											"end": 4946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4735,
											"end": 4956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3915,
											"end": 4963,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3915,
											"end": 4963,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 3915,
											"end": 4963,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3915,
											"end": 4963,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3915,
											"end": 4963,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 3915,
											"end": 4963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3915,
											"end": 4963,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3915,
											"end": 4963,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3915,
											"end": 4963,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4969,
											"end": 5924,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 4969,
											"end": 5924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4969,
											"end": 5924,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4969,
											"end": 5924,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4969,
											"end": 5924,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4969,
											"end": 5924,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4969,
											"end": 5924,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5154,
											"end": 5157,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 5142,
											"end": 5151,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5133,
											"end": 5140,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5152,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5125,
											"end": 5158,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5122,
											"end": 5124,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5122,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 5122,
											"end": 5124,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5171,
											"end": 5172,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5168,
											"end": 5169,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5161,
											"end": 5173,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5122,
											"end": 5124,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 5122,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5214,
											"end": 5215,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5239,
											"end": 5292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 5284,
											"end": 5291,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5275,
											"end": 5281,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5273,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5260,
											"end": 5282,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5239,
											"end": 5292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 5239,
											"end": 5292,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5239,
											"end": 5292,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 5239,
											"end": 5292,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5292,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5292,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5185,
											"end": 5302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5341,
											"end": 5343,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5367,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 5412,
											"end": 5419,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5392,
											"end": 5401,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5388,
											"end": 5410,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5367,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 5367,
											"end": 5420,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5367,
											"end": 5420,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 5367,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5357,
											"end": 5420,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5357,
											"end": 5420,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5312,
											"end": 5430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5469,
											"end": 5471,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5495,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 5540,
											"end": 5547,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5531,
											"end": 5537,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5520,
											"end": 5529,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5516,
											"end": 5538,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5495,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 5495,
											"end": 5548,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5495,
											"end": 5548,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 5495,
											"end": 5548,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5548,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5548,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5440,
											"end": 5558,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5597,
											"end": 5599,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5623,
											"end": 5676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 5668,
											"end": 5675,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5659,
											"end": 5665,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5648,
											"end": 5657,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5644,
											"end": 5666,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 5623,
											"end": 5676,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5623,
											"end": 5676,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 5623,
											"end": 5676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5613,
											"end": 5676,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5613,
											"end": 5676,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5568,
											"end": 5686,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5753,
											"end": 5756,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5742,
											"end": 5751,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5738,
											"end": 5757,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5725,
											"end": 5758,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5785,
											"end": 5803,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5777,
											"end": 5783,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5774,
											"end": 5804,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5771,
											"end": 5773,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5771,
											"end": 5773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 5771,
											"end": 5773,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5817,
											"end": 5818,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5814,
											"end": 5815,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5807,
											"end": 5819,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5771,
											"end": 5773,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 5771,
											"end": 5773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5845,
											"end": 5907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 5899,
											"end": 5906,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5890,
											"end": 5896,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5879,
											"end": 5888,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5875,
											"end": 5897,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5845,
											"end": 5907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 5845,
											"end": 5907,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5845,
											"end": 5907,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 5845,
											"end": 5907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5835,
											"end": 5907,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5835,
											"end": 5907,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5696,
											"end": 5917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 5924,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 5924,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 5924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 5924,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 5924,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 5924,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 5924,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 5924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 5924,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5930,
											"end": 6331,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 5930,
											"end": 6331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5930,
											"end": 6331,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5930,
											"end": 6331,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6052,
											"end": 6054,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6040,
											"end": 6049,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6031,
											"end": 6038,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6027,
											"end": 6050,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6023,
											"end": 6055,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6020,
											"end": 6022,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6020,
											"end": 6022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 6020,
											"end": 6022,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6069,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6065,
											"end": 6066,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6058,
											"end": 6070,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6020,
											"end": 6022,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 6020,
											"end": 6022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6111,
											"end": 6112,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6136,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 6181,
											"end": 6188,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6172,
											"end": 6178,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6161,
											"end": 6170,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6157,
											"end": 6179,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6136,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 6136,
											"end": 6189,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6136,
											"end": 6189,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 6136,
											"end": 6189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6126,
											"end": 6189,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6126,
											"end": 6189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6082,
											"end": 6199,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6238,
											"end": 6240,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6264,
											"end": 6314,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 6306,
											"end": 6313,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6297,
											"end": 6303,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6286,
											"end": 6295,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6282,
											"end": 6304,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6264,
											"end": 6314,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 6264,
											"end": 6314,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6264,
											"end": 6314,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 6264,
											"end": 6314,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6254,
											"end": 6314,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6254,
											"end": 6314,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6209,
											"end": 6324,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6010,
											"end": 6331,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6010,
											"end": 6331,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6010,
											"end": 6331,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6010,
											"end": 6331,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6010,
											"end": 6331,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6010,
											"end": 6331,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6337,
											"end": 6744,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 6337,
											"end": 6744,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6337,
											"end": 6744,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6337,
											"end": 6744,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6462,
											"end": 6464,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6450,
											"end": 6459,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6441,
											"end": 6448,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6437,
											"end": 6460,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6465,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6430,
											"end": 6432,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6430,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 6430,
											"end": 6432,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6478,
											"end": 6479,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6476,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6468,
											"end": 6480,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6430,
											"end": 6432,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 6430,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6521,
											"end": 6522,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6546,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 6591,
											"end": 6598,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6582,
											"end": 6588,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6567,
											"end": 6589,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6546,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 6546,
											"end": 6599,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6546,
											"end": 6599,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 6546,
											"end": 6599,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6536,
											"end": 6599,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6536,
											"end": 6599,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6492,
											"end": 6609,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6648,
											"end": 6650,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6674,
											"end": 6727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 6719,
											"end": 6726,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6710,
											"end": 6716,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6708,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6695,
											"end": 6717,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6674,
											"end": 6727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 6674,
											"end": 6727,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6674,
											"end": 6727,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 6674,
											"end": 6727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6664,
											"end": 6727,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6664,
											"end": 6727,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6619,
											"end": 6737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6420,
											"end": 6744,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6420,
											"end": 6744,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6420,
											"end": 6744,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6420,
											"end": 6744,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6420,
											"end": 6744,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6420,
											"end": 6744,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6750,
											"end": 7443,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 6750,
											"end": 7443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6750,
											"end": 7443,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6750,
											"end": 7443,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6927,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6913,
											"end": 6922,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6904,
											"end": 6911,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6900,
											"end": 6923,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6896,
											"end": 6928,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6893,
											"end": 6895,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6893,
											"end": 6895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 6893,
											"end": 6895,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6941,
											"end": 6942,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6938,
											"end": 6939,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6943,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6893,
											"end": 6895,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 6893,
											"end": 6895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7012,
											"end": 7013,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7001,
											"end": 7010,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6997,
											"end": 7014,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6984,
											"end": 7015,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7042,
											"end": 7060,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7034,
											"end": 7040,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7031,
											"end": 7061,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7028,
											"end": 7030,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7028,
											"end": 7030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 7028,
											"end": 7030,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7074,
											"end": 7075,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7071,
											"end": 7072,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7076,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7028,
											"end": 7030,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 7028,
											"end": 7030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7102,
											"end": 7180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 7172,
											"end": 7179,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7163,
											"end": 7169,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7152,
											"end": 7161,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7148,
											"end": 7170,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7102,
											"end": 7180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 7102,
											"end": 7180,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7102,
											"end": 7180,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 7102,
											"end": 7180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7092,
											"end": 7180,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7092,
											"end": 7180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6955,
											"end": 7190,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7257,
											"end": 7259,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7246,
											"end": 7255,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7242,
											"end": 7260,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7229,
											"end": 7261,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7288,
											"end": 7306,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7280,
											"end": 7286,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7277,
											"end": 7307,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7274,
											"end": 7276,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7274,
											"end": 7276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 7274,
											"end": 7276,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7320,
											"end": 7321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7317,
											"end": 7318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7310,
											"end": 7322,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7274,
											"end": 7276,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 7274,
											"end": 7276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7348,
											"end": 7426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 7418,
											"end": 7425,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7409,
											"end": 7415,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7398,
											"end": 7407,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7394,
											"end": 7416,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7348,
											"end": 7426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 7348,
											"end": 7426,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7348,
											"end": 7426,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 7348,
											"end": 7426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7338,
											"end": 7426,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7338,
											"end": 7426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7200,
											"end": 7436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6883,
											"end": 7443,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6883,
											"end": 7443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6883,
											"end": 7443,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6883,
											"end": 7443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6883,
											"end": 7443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6883,
											"end": 7443,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7449,
											"end": 7709,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7449,
											"end": 7709,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7709,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7556,
											"end": 7558,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7544,
											"end": 7553,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7535,
											"end": 7542,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7531,
											"end": 7554,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7527,
											"end": 7559,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7524,
											"end": 7526,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7524,
											"end": 7526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 7524,
											"end": 7526,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7573,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7569,
											"end": 7570,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7574,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7524,
											"end": 7526,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 7524,
											"end": 7526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7615,
											"end": 7616,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7640,
											"end": 7692,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 7684,
											"end": 7691,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7675,
											"end": 7681,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7673,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7660,
											"end": 7682,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7640,
											"end": 7692,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 7640,
											"end": 7692,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7640,
											"end": 7692,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 7640,
											"end": 7692,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7630,
											"end": 7692,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7630,
											"end": 7692,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7586,
											"end": 7702,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7514,
											"end": 7709,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7514,
											"end": 7709,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7514,
											"end": 7709,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7514,
											"end": 7709,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7514,
											"end": 7709,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7715,
											"end": 7997,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 7715,
											"end": 7997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7715,
											"end": 7997,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7833,
											"end": 7835,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7821,
											"end": 7830,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7812,
											"end": 7819,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7808,
											"end": 7831,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7804,
											"end": 7836,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7801,
											"end": 7803,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7801,
											"end": 7803,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 7801,
											"end": 7803,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7849,
											"end": 7850,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7846,
											"end": 7847,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7839,
											"end": 7851,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7801,
											"end": 7803,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 7801,
											"end": 7803,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7892,
											"end": 7893,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7917,
											"end": 7980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 7972,
											"end": 7979,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7963,
											"end": 7969,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7952,
											"end": 7961,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7917,
											"end": 7980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 7917,
											"end": 7980,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7917,
											"end": 7980,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 7917,
											"end": 7980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7907,
											"end": 7980,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7907,
											"end": 7980,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7863,
											"end": 7990,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 7997,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 7997,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 7997,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 7997,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 7997,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8003,
											"end": 8265,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 8003,
											"end": 8265,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8003,
											"end": 8265,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8111,
											"end": 8113,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8099,
											"end": 8108,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8090,
											"end": 8097,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8086,
											"end": 8109,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8082,
											"end": 8114,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 8079,
											"end": 8081,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8079,
											"end": 8081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 8079,
											"end": 8081,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8127,
											"end": 8128,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8124,
											"end": 8125,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8117,
											"end": 8129,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8079,
											"end": 8081,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 8079,
											"end": 8081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8170,
											"end": 8171,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8195,
											"end": 8248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 8240,
											"end": 8247,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8231,
											"end": 8237,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8220,
											"end": 8229,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8216,
											"end": 8238,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8195,
											"end": 8248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 8195,
											"end": 8248,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8195,
											"end": 8248,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 8195,
											"end": 8248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8185,
											"end": 8248,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8185,
											"end": 8248,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8141,
											"end": 8258,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8069,
											"end": 8265,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8069,
											"end": 8265,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8069,
											"end": 8265,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8069,
											"end": 8265,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8069,
											"end": 8265,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8271,
											"end": 8450,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 8271,
											"end": 8450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8271,
											"end": 8450,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 8403,
											"end": 8406,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8395,
											"end": 8401,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 8361,
											"end": 8407,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8361,
											"end": 8407,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 8361,
											"end": 8407,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8439,
											"end": 8443,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8434,
											"end": 8437,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8430,
											"end": 8444,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8416,
											"end": 8444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8416,
											"end": 8444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8351,
											"end": 8450,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8351,
											"end": 8450,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8351,
											"end": 8450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8351,
											"end": 8450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8351,
											"end": 8450,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8456,
											"end": 8574,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 8456,
											"end": 8574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8543,
											"end": 8567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 8561,
											"end": 8566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8543,
											"end": 8567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 8543,
											"end": 8567,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8543,
											"end": 8567,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 8543,
											"end": 8567,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8538,
											"end": 8541,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8531,
											"end": 8568,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8521,
											"end": 8574,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8521,
											"end": 8574,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8521,
											"end": 8574,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8610,
											"end": 9342,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 8610,
											"end": 9342,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8610,
											"end": 9342,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8758,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 8806,
											"end": 8811,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8758,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 8758,
											"end": 8812,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8758,
											"end": 8812,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 8758,
											"end": 8812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8828,
											"end": 8914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 8907,
											"end": 8913,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8902,
											"end": 8905,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8828,
											"end": 8914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 8828,
											"end": 8914,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8828,
											"end": 8914,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 8828,
											"end": 8914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8821,
											"end": 8914,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8821,
											"end": 8914,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8938,
											"end": 8994,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 8988,
											"end": 8993,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8938,
											"end": 8994,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 8938,
											"end": 8994,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8938,
											"end": 8994,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 8938,
											"end": 8994,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9017,
											"end": 9024,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9048,
											"end": 9049,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9033,
											"end": 9317,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 9033,
											"end": 9317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9058,
											"end": 9064,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9055,
											"end": 9056,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9052,
											"end": 9065,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9033,
											"end": 9317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9033,
											"end": 9317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 9033,
											"end": 9317,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9134,
											"end": 9140,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9128,
											"end": 9141,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9161,
											"end": 9224,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 9220,
											"end": 9223,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9205,
											"end": 9218,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9161,
											"end": 9224,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 9161,
											"end": 9224,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9161,
											"end": 9224,
											"name": "tag",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 9161,
											"end": 9224,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9154,
											"end": 9224,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 9154,
											"end": 9224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 9300,
											"end": 9306,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 9247,
											"end": 9307,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9247,
											"end": 9307,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 9247,
											"end": 9307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9237,
											"end": 9307,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9237,
											"end": 9307,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9093,
											"end": 9317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9080,
											"end": 9081,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9077,
											"end": 9078,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9068,
											"end": 9082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9068,
											"end": 9082,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9033,
											"end": 9317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 9033,
											"end": 9317,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9033,
											"end": 9317,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 9033,
											"end": 9317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9037,
											"end": 9051,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9333,
											"end": 9336,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9326,
											"end": 9336,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9326,
											"end": 9336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8734,
											"end": 9342,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8734,
											"end": 9342,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8734,
											"end": 9342,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8734,
											"end": 9342,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8734,
											"end": 9342,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8734,
											"end": 9342,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8734,
											"end": 9342,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8734,
											"end": 9342,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9348,
											"end": 9457,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 9348,
											"end": 9457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 9444,
											"end": 9449,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 9429,
											"end": 9450,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9429,
											"end": 9450,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 9429,
											"end": 9450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9424,
											"end": 9427,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9417,
											"end": 9451,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9407,
											"end": 9457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9407,
											"end": 9457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9407,
											"end": 9457,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9463,
											"end": 9823,
											"name": "tag",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 9463,
											"end": 9823,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9463,
											"end": 9823,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9577,
											"end": 9615,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 9609,
											"end": 9614,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9615,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 9577,
											"end": 9615,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9577,
											"end": 9615,
											"name": "tag",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 9577,
											"end": 9615,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9631,
											"end": 9701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 9694,
											"end": 9700,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9689,
											"end": 9692,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9631,
											"end": 9701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 9631,
											"end": 9701,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9631,
											"end": 9701,
											"name": "tag",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 9631,
											"end": 9701,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9624,
											"end": 9701,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9624,
											"end": 9701,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9710,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 9755,
											"end": 9761,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9750,
											"end": 9753,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9743,
											"end": 9747,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9736,
											"end": 9741,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9732,
											"end": 9748,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9710,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 9710,
											"end": 9762,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9710,
											"end": 9762,
											"name": "tag",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 9710,
											"end": 9762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9787,
											"end": 9816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 9809,
											"end": 9815,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9787,
											"end": 9816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 9787,
											"end": 9816,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9787,
											"end": 9816,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 9787,
											"end": 9816,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9782,
											"end": 9785,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9778,
											"end": 9817,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9771,
											"end": 9817,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9771,
											"end": 9817,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9553,
											"end": 9823,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9553,
											"end": 9823,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9553,
											"end": 9823,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9553,
											"end": 9823,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9553,
											"end": 9823,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9553,
											"end": 9823,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9829,
											"end": 10193,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 9829,
											"end": 10193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 10193,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9945,
											"end": 9984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 9978,
											"end": 9983,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9945,
											"end": 9984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 9945,
											"end": 9984,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9945,
											"end": 9984,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 9945,
											"end": 9984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10000,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 10064,
											"end": 10070,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10059,
											"end": 10062,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10000,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 10000,
											"end": 10071,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10000,
											"end": 10071,
											"name": "tag",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 10000,
											"end": 10071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9993,
											"end": 10071,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9993,
											"end": 10071,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10080,
											"end": 10132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 10125,
											"end": 10131,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10120,
											"end": 10123,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10113,
											"end": 10117,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10106,
											"end": 10111,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10102,
											"end": 10118,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10080,
											"end": 10132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 10080,
											"end": 10132,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10080,
											"end": 10132,
											"name": "tag",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 10080,
											"end": 10132,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10157,
											"end": 10186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 10179,
											"end": 10185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10157,
											"end": 10186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 10157,
											"end": 10186,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10157,
											"end": 10186,
											"name": "tag",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 10157,
											"end": 10186,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10152,
											"end": 10155,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10148,
											"end": 10187,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10141,
											"end": 10187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10141,
											"end": 10187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9921,
											"end": 10193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9921,
											"end": 10193,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9921,
											"end": 10193,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9921,
											"end": 10193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9921,
											"end": 10193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9921,
											"end": 10193,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10199,
											"end": 10565,
											"name": "tag",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 10199,
											"end": 10565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10199,
											"end": 10565,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10362,
											"end": 10429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 10426,
											"end": 10428,
											"name": "PUSH",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 10421,
											"end": 10424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10362,
											"end": 10429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 10362,
											"end": 10429,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10362,
											"end": 10429,
											"name": "tag",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 10362,
											"end": 10429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10355,
											"end": 10429,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10355,
											"end": 10429,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 10527,
											"end": 10530,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 10438,
											"end": 10531,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10438,
											"end": 10531,
											"name": "tag",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 10438,
											"end": 10531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10556,
											"end": 10558,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10551,
											"end": 10554,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10547,
											"end": 10559,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10540,
											"end": 10559,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10540,
											"end": 10559,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10345,
											"end": 10565,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10345,
											"end": 10565,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10345,
											"end": 10565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10345,
											"end": 10565,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10571,
											"end": 10937,
											"name": "tag",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 10571,
											"end": 10937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10571,
											"end": 10937,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10734,
											"end": 10801,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 10798,
											"end": 10800,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 10793,
											"end": 10796,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10734,
											"end": 10801,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 10734,
											"end": 10801,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10734,
											"end": 10801,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 10734,
											"end": 10801,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10727,
											"end": 10801,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10727,
											"end": 10801,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10810,
											"end": 10903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 10899,
											"end": 10902,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10810,
											"end": 10903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 10810,
											"end": 10903,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10810,
											"end": 10903,
											"name": "tag",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 10810,
											"end": 10903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10928,
											"end": 10930,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10923,
											"end": 10926,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10919,
											"end": 10931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10912,
											"end": 10931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10912,
											"end": 10931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10717,
											"end": 10937,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10717,
											"end": 10937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10717,
											"end": 10937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10717,
											"end": 10937,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10943,
											"end": 11309,
											"name": "tag",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 10943,
											"end": 11309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10943,
											"end": 11309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11106,
											"end": 11173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 11170,
											"end": 11172,
											"name": "PUSH",
											"source": 1,
											"value": "2B"
										},
										{
											"begin": 11165,
											"end": 11168,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11106,
											"end": 11173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 11106,
											"end": 11173,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11106,
											"end": 11173,
											"name": "tag",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 11106,
											"end": 11173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11099,
											"end": 11173,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11099,
											"end": 11173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11182,
											"end": 11275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 11271,
											"end": 11274,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11182,
											"end": 11275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 11182,
											"end": 11275,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11182,
											"end": 11275,
											"name": "tag",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 11182,
											"end": 11275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11300,
											"end": 11302,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11295,
											"end": 11298,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11291,
											"end": 11303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11284,
											"end": 11303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11284,
											"end": 11303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11089,
											"end": 11309,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11089,
											"end": 11309,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11089,
											"end": 11309,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11089,
											"end": 11309,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11315,
											"end": 11681,
											"name": "tag",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 11315,
											"end": 11681,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11315,
											"end": 11681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11478,
											"end": 11545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 11542,
											"end": 11544,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 11537,
											"end": 11540,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11478,
											"end": 11545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 11478,
											"end": 11545,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11478,
											"end": 11545,
											"name": "tag",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 11478,
											"end": 11545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11471,
											"end": 11545,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11471,
											"end": 11545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11554,
											"end": 11647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 11643,
											"end": 11646,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11554,
											"end": 11647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 11554,
											"end": 11647,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11554,
											"end": 11647,
											"name": "tag",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 11554,
											"end": 11647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11672,
											"end": 11674,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11667,
											"end": 11670,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11675,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11656,
											"end": 11675,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11656,
											"end": 11675,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11461,
											"end": 11681,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11461,
											"end": 11681,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11461,
											"end": 11681,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11461,
											"end": 11681,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11687,
											"end": 12053,
											"name": "tag",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 11687,
											"end": 12053,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11687,
											"end": 12053,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11850,
											"end": 11917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 11914,
											"end": 11916,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 11909,
											"end": 11912,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11850,
											"end": 11917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 11850,
											"end": 11917,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11850,
											"end": 11917,
											"name": "tag",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 11850,
											"end": 11917,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11843,
											"end": 11917,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11843,
											"end": 11917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11926,
											"end": 12019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 12015,
											"end": 12018,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11926,
											"end": 12019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 11926,
											"end": 12019,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11926,
											"end": 12019,
											"name": "tag",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 11926,
											"end": 12019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12044,
											"end": 12046,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12039,
											"end": 12042,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12035,
											"end": 12047,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12028,
											"end": 12047,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12028,
											"end": 12047,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11833,
											"end": 12053,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11833,
											"end": 12053,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11833,
											"end": 12053,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11833,
											"end": 12053,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12059,
											"end": 12425,
											"name": "tag",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 12059,
											"end": 12425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12059,
											"end": 12425,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12222,
											"end": 12289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 12286,
											"end": 12288,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 12281,
											"end": 12284,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12222,
											"end": 12289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 12222,
											"end": 12289,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12222,
											"end": 12289,
											"name": "tag",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 12222,
											"end": 12289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12215,
											"end": 12289,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12215,
											"end": 12289,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12298,
											"end": 12391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 12387,
											"end": 12390,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12298,
											"end": 12391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 12298,
											"end": 12391,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12298,
											"end": 12391,
											"name": "tag",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 12298,
											"end": 12391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12416,
											"end": 12418,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12411,
											"end": 12414,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12407,
											"end": 12419,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12400,
											"end": 12419,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12400,
											"end": 12419,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12205,
											"end": 12425,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12205,
											"end": 12425,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12205,
											"end": 12425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12205,
											"end": 12425,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12431,
											"end": 12797,
											"name": "tag",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 12431,
											"end": 12797,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12431,
											"end": 12797,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12594,
											"end": 12661,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 12658,
											"end": 12660,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 12653,
											"end": 12656,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12594,
											"end": 12661,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 12594,
											"end": 12661,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12594,
											"end": 12661,
											"name": "tag",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 12594,
											"end": 12661,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12587,
											"end": 12661,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12587,
											"end": 12661,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12670,
											"end": 12763,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 12759,
											"end": 12762,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12670,
											"end": 12763,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 12670,
											"end": 12763,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12670,
											"end": 12763,
											"name": "tag",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 12670,
											"end": 12763,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12788,
											"end": 12790,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12783,
											"end": 12786,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12779,
											"end": 12791,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12772,
											"end": 12791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12772,
											"end": 12791,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12577,
											"end": 12797,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12577,
											"end": 12797,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12577,
											"end": 12797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12577,
											"end": 12797,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12803,
											"end": 13169,
											"name": "tag",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 12803,
											"end": 13169,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12803,
											"end": 13169,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12966,
											"end": 13033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 13030,
											"end": 13032,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 13025,
											"end": 13028,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12966,
											"end": 13033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 12966,
											"end": 13033,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12966,
											"end": 13033,
											"name": "tag",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 12966,
											"end": 13033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12959,
											"end": 13033,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12959,
											"end": 13033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13042,
											"end": 13135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 13131,
											"end": 13134,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13042,
											"end": 13135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 13042,
											"end": 13135,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13042,
											"end": 13135,
											"name": "tag",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 13042,
											"end": 13135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13160,
											"end": 13162,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13155,
											"end": 13158,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13151,
											"end": 13163,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13144,
											"end": 13163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13144,
											"end": 13163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12949,
											"end": 13169,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12949,
											"end": 13169,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12949,
											"end": 13169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12949,
											"end": 13169,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13175,
											"end": 13541,
											"name": "tag",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 13175,
											"end": 13541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13175,
											"end": 13541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13338,
											"end": 13405,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 13402,
											"end": 13404,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 13397,
											"end": 13400,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13338,
											"end": 13405,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 13338,
											"end": 13405,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13338,
											"end": 13405,
											"name": "tag",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 13338,
											"end": 13405,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13331,
											"end": 13405,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13331,
											"end": 13405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13414,
											"end": 13507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 13503,
											"end": 13506,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13414,
											"end": 13507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 13414,
											"end": 13507,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13414,
											"end": 13507,
											"name": "tag",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 13414,
											"end": 13507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13532,
											"end": 13534,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13527,
											"end": 13530,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13523,
											"end": 13535,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13516,
											"end": 13535,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13516,
											"end": 13535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13321,
											"end": 13541,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13321,
											"end": 13541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13321,
											"end": 13541,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13321,
											"end": 13541,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13547,
											"end": 13913,
											"name": "tag",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 13547,
											"end": 13913,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13547,
											"end": 13913,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13710,
											"end": 13777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 13774,
											"end": 13776,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 13769,
											"end": 13772,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13710,
											"end": 13777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 13710,
											"end": 13777,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13710,
											"end": 13777,
											"name": "tag",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 13710,
											"end": 13777,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13703,
											"end": 13777,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13703,
											"end": 13777,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13786,
											"end": 13879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 13875,
											"end": 13878,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13786,
											"end": 13879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 13786,
											"end": 13879,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13786,
											"end": 13879,
											"name": "tag",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 13786,
											"end": 13879,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13904,
											"end": 13906,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13899,
											"end": 13902,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13895,
											"end": 13907,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13888,
											"end": 13907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13888,
											"end": 13907,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13693,
											"end": 13913,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13693,
											"end": 13913,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13693,
											"end": 13913,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13693,
											"end": 13913,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13919,
											"end": 14027,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 13919,
											"end": 14027,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13996,
											"end": 14020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 14014,
											"end": 14019,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13996,
											"end": 14020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "411"
										},
										{
											"begin": 13996,
											"end": 14020,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13996,
											"end": 14020,
											"name": "tag",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 13996,
											"end": 14020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13991,
											"end": 13994,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13984,
											"end": 14021,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13974,
											"end": 14027,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13974,
											"end": 14027,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13974,
											"end": 14027,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14033,
											"end": 14151,
											"name": "tag",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 14033,
											"end": 14151,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14120,
											"end": 14144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "414"
										},
										{
											"begin": 14138,
											"end": 14143,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14120,
											"end": 14144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "411"
										},
										{
											"begin": 14120,
											"end": 14144,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14120,
											"end": 14144,
											"name": "tag",
											"source": 1,
											"value": "414"
										},
										{
											"begin": 14120,
											"end": 14144,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14115,
											"end": 14118,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14108,
											"end": 14145,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14098,
											"end": 14151,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14098,
											"end": 14151,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14098,
											"end": 14151,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14157,
											"end": 15210,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 14157,
											"end": 15210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 15210,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14518,
											"end": 14521,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 14507,
											"end": 14516,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14503,
											"end": 14522,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14495,
											"end": 14522,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14495,
											"end": 14522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14532,
											"end": 14603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 14600,
											"end": 14601,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14589,
											"end": 14598,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14585,
											"end": 14602,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14576,
											"end": 14582,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 14532,
											"end": 14603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 14532,
											"end": 14603,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14532,
											"end": 14603,
											"name": "tag",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 14532,
											"end": 14603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14613,
											"end": 14685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 14681,
											"end": 14683,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14670,
											"end": 14679,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14666,
											"end": 14684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14657,
											"end": 14663,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14613,
											"end": 14685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 14613,
											"end": 14685,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14613,
											"end": 14685,
											"name": "tag",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 14613,
											"end": 14685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14732,
											"end": 14741,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14726,
											"end": 14730,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14722,
											"end": 14742,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14717,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14706,
											"end": 14715,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14702,
											"end": 14720,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14695,
											"end": 14743,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14760,
											"end": 14868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "418"
										},
										{
											"begin": 14863,
											"end": 14867,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14854,
											"end": 14860,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14760,
											"end": 14868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 14760,
											"end": 14868,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14760,
											"end": 14868,
											"name": "tag",
											"source": 1,
											"value": "418"
										},
										{
											"begin": 14760,
											"end": 14868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14752,
											"end": 14868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14752,
											"end": 14868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14915,
											"end": 14924,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14909,
											"end": 14913,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14905,
											"end": 14925,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14900,
											"end": 14902,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14889,
											"end": 14898,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14885,
											"end": 14903,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14878,
											"end": 14926,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14943,
											"end": 15051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 15046,
											"end": 15050,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15037,
											"end": 15043,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14943,
											"end": 15051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 14943,
											"end": 15051,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14943,
											"end": 15051,
											"name": "tag",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 14943,
											"end": 15051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14935,
											"end": 15051,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14935,
											"end": 15051,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15099,
											"end": 15108,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15097,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15089,
											"end": 15109,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15083,
											"end": 15086,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 15072,
											"end": 15081,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15068,
											"end": 15087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15061,
											"end": 15110,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15127,
											"end": 15203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 15198,
											"end": 15202,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15195,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15127,
											"end": 15203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 15127,
											"end": 15203,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15127,
											"end": 15203,
											"name": "tag",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 15127,
											"end": 15203,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15119,
											"end": 15203,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15119,
											"end": 15203,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14485,
											"end": 15210,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 14485,
											"end": 15210,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 14485,
											"end": 15210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14485,
											"end": 15210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14485,
											"end": 15210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14485,
											"end": 15210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14485,
											"end": 15210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14485,
											"end": 15210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14485,
											"end": 15210,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15216,
											"end": 15967,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 15216,
											"end": 15967,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15216,
											"end": 15967,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15477,
											"end": 15480,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 15466,
											"end": 15475,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15462,
											"end": 15481,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15454,
											"end": 15481,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15454,
											"end": 15481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15491,
											"end": 15562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 15559,
											"end": 15560,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15548,
											"end": 15557,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15544,
											"end": 15561,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15535,
											"end": 15541,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 15491,
											"end": 15562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 15491,
											"end": 15562,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15491,
											"end": 15562,
											"name": "tag",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 15491,
											"end": 15562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15572,
											"end": 15644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 15640,
											"end": 15642,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15629,
											"end": 15638,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15625,
											"end": 15643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15616,
											"end": 15622,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 15572,
											"end": 15644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 15572,
											"end": 15644,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15572,
											"end": 15644,
											"name": "tag",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 15572,
											"end": 15644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15654,
											"end": 15726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 15722,
											"end": 15724,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15711,
											"end": 15720,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15707,
											"end": 15725,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15698,
											"end": 15704,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 15654,
											"end": 15726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 15654,
											"end": 15726,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15654,
											"end": 15726,
											"name": "tag",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 15654,
											"end": 15726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15736,
											"end": 15808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 15804,
											"end": 15806,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 15793,
											"end": 15802,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15789,
											"end": 15807,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15780,
											"end": 15786,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15736,
											"end": 15808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 15736,
											"end": 15808,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15736,
											"end": 15808,
											"name": "tag",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 15736,
											"end": 15808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15856,
											"end": 15865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15850,
											"end": 15854,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15846,
											"end": 15866,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15840,
											"end": 15843,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 15829,
											"end": 15838,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15825,
											"end": 15844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15818,
											"end": 15867,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15884,
											"end": 15960,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 15955,
											"end": 15959,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15946,
											"end": 15952,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15884,
											"end": 15960,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 15884,
											"end": 15960,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15884,
											"end": 15960,
											"name": "tag",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 15884,
											"end": 15960,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15876,
											"end": 15960,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15876,
											"end": 15960,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15444,
											"end": 15967,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 15444,
											"end": 15967,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 15444,
											"end": 15967,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15444,
											"end": 15967,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15444,
											"end": 15967,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15444,
											"end": 15967,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15444,
											"end": 15967,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15444,
											"end": 15967,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15444,
											"end": 15967,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15973,
											"end": 16346,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 15973,
											"end": 16346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15973,
											"end": 16346,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16154,
											"end": 16156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16143,
											"end": 16152,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16139,
											"end": 16157,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16131,
											"end": 16157,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16131,
											"end": 16157,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16203,
											"end": 16212,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16197,
											"end": 16201,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16193,
											"end": 16213,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16189,
											"end": 16190,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16178,
											"end": 16187,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16174,
											"end": 16191,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16167,
											"end": 16214,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16231,
											"end": 16339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 16334,
											"end": 16338,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16325,
											"end": 16331,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16231,
											"end": 16339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 16231,
											"end": 16339,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16231,
											"end": 16339,
											"name": "tag",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 16231,
											"end": 16339,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16223,
											"end": 16339,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16223,
											"end": 16339,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16121,
											"end": 16346,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16121,
											"end": 16346,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16121,
											"end": 16346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16121,
											"end": 16346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16121,
											"end": 16346,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16352,
											"end": 16986,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 16352,
											"end": 16986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16352,
											"end": 16986,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16611,
											"end": 16613,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16600,
											"end": 16609,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16596,
											"end": 16614,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16588,
											"end": 16614,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16588,
											"end": 16614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16660,
											"end": 16669,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16654,
											"end": 16658,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16650,
											"end": 16670,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16646,
											"end": 16647,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16635,
											"end": 16644,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16631,
											"end": 16648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16624,
											"end": 16671,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16688,
											"end": 16796,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 16791,
											"end": 16795,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16782,
											"end": 16788,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16688,
											"end": 16796,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 16688,
											"end": 16796,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16688,
											"end": 16796,
											"name": "tag",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 16688,
											"end": 16796,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16680,
											"end": 16796,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16680,
											"end": 16796,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16843,
											"end": 16852,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16837,
											"end": 16841,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16833,
											"end": 16853,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16828,
											"end": 16830,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16817,
											"end": 16826,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16813,
											"end": 16831,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16806,
											"end": 16854,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16871,
											"end": 16979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 16974,
											"end": 16978,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16965,
											"end": 16971,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16871,
											"end": 16979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 16871,
											"end": 16979,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16871,
											"end": 16979,
											"name": "tag",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 16871,
											"end": 16979,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16863,
											"end": 16979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16863,
											"end": 16979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16578,
											"end": 16986,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 16578,
											"end": 16986,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16578,
											"end": 16986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16578,
											"end": 16986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16578,
											"end": 16986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16578,
											"end": 16986,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16992,
											"end": 17202,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 16992,
											"end": 17202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16992,
											"end": 17202,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17117,
											"end": 17119,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17106,
											"end": 17115,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17102,
											"end": 17120,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17094,
											"end": 17120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17094,
											"end": 17120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17130,
											"end": 17195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 17192,
											"end": 17193,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17181,
											"end": 17190,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17177,
											"end": 17194,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17168,
											"end": 17174,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17130,
											"end": 17195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 17130,
											"end": 17195,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17130,
											"end": 17195,
											"name": "tag",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 17130,
											"end": 17195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17084,
											"end": 17202,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17084,
											"end": 17202,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17084,
											"end": 17202,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17084,
											"end": 17202,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17084,
											"end": 17202,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17208,
											"end": 17521,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 17208,
											"end": 17521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17208,
											"end": 17521,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17359,
											"end": 17361,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17348,
											"end": 17357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17344,
											"end": 17362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17336,
											"end": 17362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17336,
											"end": 17362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17408,
											"end": 17417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17406,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17398,
											"end": 17418,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17394,
											"end": 17395,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17383,
											"end": 17392,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17379,
											"end": 17396,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17372,
											"end": 17419,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17436,
											"end": 17514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 17509,
											"end": 17513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17500,
											"end": 17506,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17436,
											"end": 17514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 17436,
											"end": 17514,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17436,
											"end": 17514,
											"name": "tag",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 17436,
											"end": 17514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17428,
											"end": 17514,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17428,
											"end": 17514,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17326,
											"end": 17521,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17326,
											"end": 17521,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17326,
											"end": 17521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17326,
											"end": 17521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17326,
											"end": 17521,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17527,
											"end": 17946,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 17527,
											"end": 17946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17527,
											"end": 17946,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17731,
											"end": 17733,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17720,
											"end": 17729,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17716,
											"end": 17734,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17708,
											"end": 17734,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17708,
											"end": 17734,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17780,
											"end": 17789,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17774,
											"end": 17778,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17770,
											"end": 17790,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17766,
											"end": 17767,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17755,
											"end": 17764,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17751,
											"end": 17768,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17744,
											"end": 17791,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17808,
											"end": 17939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 17934,
											"end": 17938,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17808,
											"end": 17939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 17808,
											"end": 17939,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17808,
											"end": 17939,
											"name": "tag",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 17808,
											"end": 17939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17800,
											"end": 17939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17800,
											"end": 17939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17698,
											"end": 17946,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17698,
											"end": 17946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17698,
											"end": 17946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17698,
											"end": 17946,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17952,
											"end": 18371,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 17952,
											"end": 18371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17952,
											"end": 18371,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18156,
											"end": 18158,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18145,
											"end": 18154,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18141,
											"end": 18159,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18133,
											"end": 18159,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18133,
											"end": 18159,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18205,
											"end": 18214,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18199,
											"end": 18203,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18195,
											"end": 18215,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18191,
											"end": 18192,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18180,
											"end": 18189,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18176,
											"end": 18193,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18169,
											"end": 18216,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18233,
											"end": 18364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 18359,
											"end": 18363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18233,
											"end": 18364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 18233,
											"end": 18364,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18233,
											"end": 18364,
											"name": "tag",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 18233,
											"end": 18364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18225,
											"end": 18364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18225,
											"end": 18364,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18123,
											"end": 18371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18123,
											"end": 18371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18123,
											"end": 18371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18123,
											"end": 18371,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18377,
											"end": 18796,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 18377,
											"end": 18796,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18377,
											"end": 18796,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18581,
											"end": 18583,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18570,
											"end": 18579,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18566,
											"end": 18584,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18558,
											"end": 18584,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18558,
											"end": 18584,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18630,
											"end": 18639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18624,
											"end": 18628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18620,
											"end": 18640,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18616,
											"end": 18617,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18605,
											"end": 18614,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18601,
											"end": 18618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18594,
											"end": 18641,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18658,
											"end": 18789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 18784,
											"end": 18788,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18658,
											"end": 18789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 18658,
											"end": 18789,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18658,
											"end": 18789,
											"name": "tag",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 18658,
											"end": 18789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18650,
											"end": 18789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18650,
											"end": 18789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18548,
											"end": 18796,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18548,
											"end": 18796,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18548,
											"end": 18796,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18548,
											"end": 18796,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18802,
											"end": 19221,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 18802,
											"end": 19221,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18802,
											"end": 19221,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19006,
											"end": 19008,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18995,
											"end": 19004,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18991,
											"end": 19009,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18983,
											"end": 19009,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18983,
											"end": 19009,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19055,
											"end": 19064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19049,
											"end": 19053,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19045,
											"end": 19065,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19041,
											"end": 19042,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19030,
											"end": 19039,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19026,
											"end": 19043,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19019,
											"end": 19066,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19083,
											"end": 19214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 19209,
											"end": 19213,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19083,
											"end": 19214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 19083,
											"end": 19214,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19083,
											"end": 19214,
											"name": "tag",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 19083,
											"end": 19214,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19075,
											"end": 19214,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19075,
											"end": 19214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18973,
											"end": 19221,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18973,
											"end": 19221,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18973,
											"end": 19221,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18973,
											"end": 19221,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19227,
											"end": 19646,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 19227,
											"end": 19646,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19227,
											"end": 19646,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19431,
											"end": 19433,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19420,
											"end": 19429,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19416,
											"end": 19434,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19408,
											"end": 19434,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19408,
											"end": 19434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19480,
											"end": 19489,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19474,
											"end": 19478,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19470,
											"end": 19490,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19466,
											"end": 19467,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19455,
											"end": 19464,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19451,
											"end": 19468,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19444,
											"end": 19491,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19508,
											"end": 19639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 19634,
											"end": 19638,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19508,
											"end": 19639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 19508,
											"end": 19639,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19508,
											"end": 19639,
											"name": "tag",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 19508,
											"end": 19639,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19500,
											"end": 19639,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19500,
											"end": 19639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19398,
											"end": 19646,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19398,
											"end": 19646,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19398,
											"end": 19646,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19398,
											"end": 19646,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19652,
											"end": 20071,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 19652,
											"end": 20071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19652,
											"end": 20071,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19856,
											"end": 19858,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19845,
											"end": 19854,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19841,
											"end": 19859,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19833,
											"end": 19859,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19833,
											"end": 19859,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19905,
											"end": 19914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19899,
											"end": 19903,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19895,
											"end": 19915,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19891,
											"end": 19892,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19880,
											"end": 19889,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19876,
											"end": 19893,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19869,
											"end": 19916,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19933,
											"end": 20064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 20059,
											"end": 20063,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19933,
											"end": 20064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 19933,
											"end": 20064,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19933,
											"end": 20064,
											"name": "tag",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 19933,
											"end": 20064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19925,
											"end": 20064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19925,
											"end": 20064,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19823,
											"end": 20071,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19823,
											"end": 20071,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19823,
											"end": 20071,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19823,
											"end": 20071,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20077,
											"end": 20496,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 20077,
											"end": 20496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20077,
											"end": 20496,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20281,
											"end": 20283,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20270,
											"end": 20279,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20266,
											"end": 20284,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20258,
											"end": 20284,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20258,
											"end": 20284,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20330,
											"end": 20339,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20324,
											"end": 20328,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20320,
											"end": 20340,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20316,
											"end": 20317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20305,
											"end": 20314,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20301,
											"end": 20318,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20294,
											"end": 20341,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20358,
											"end": 20489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 20484,
											"end": 20488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20358,
											"end": 20489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 20358,
											"end": 20489,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20358,
											"end": 20489,
											"name": "tag",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 20358,
											"end": 20489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20350,
											"end": 20489,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20350,
											"end": 20489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20248,
											"end": 20496,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20248,
											"end": 20496,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20248,
											"end": 20496,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20248,
											"end": 20496,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20502,
											"end": 20921,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 20502,
											"end": 20921,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20502,
											"end": 20921,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20706,
											"end": 20708,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20695,
											"end": 20704,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20691,
											"end": 20709,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20683,
											"end": 20709,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20683,
											"end": 20709,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20755,
											"end": 20764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20749,
											"end": 20753,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20745,
											"end": 20765,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20741,
											"end": 20742,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20730,
											"end": 20739,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20726,
											"end": 20743,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20719,
											"end": 20766,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20783,
											"end": 20914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 20909,
											"end": 20913,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20783,
											"end": 20914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 20783,
											"end": 20914,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20783,
											"end": 20914,
											"name": "tag",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 20783,
											"end": 20914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20775,
											"end": 20914,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20775,
											"end": 20914,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20673,
											"end": 20921,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20673,
											"end": 20921,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20673,
											"end": 20921,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20673,
											"end": 20921,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20927,
											"end": 21346,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 20927,
											"end": 21346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20927,
											"end": 21346,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21131,
											"end": 21133,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21120,
											"end": 21129,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21116,
											"end": 21134,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21108,
											"end": 21134,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21108,
											"end": 21134,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21180,
											"end": 21189,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21174,
											"end": 21178,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21170,
											"end": 21190,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 21166,
											"end": 21167,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21155,
											"end": 21164,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21151,
											"end": 21168,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21144,
											"end": 21191,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21208,
											"end": 21339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 21334,
											"end": 21338,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21208,
											"end": 21339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 21208,
											"end": 21339,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 21208,
											"end": 21339,
											"name": "tag",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 21208,
											"end": 21339,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21200,
											"end": 21339,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21200,
											"end": 21339,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21098,
											"end": 21346,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21098,
											"end": 21346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21098,
											"end": 21346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21098,
											"end": 21346,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 21352,
											"end": 21771,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 21352,
											"end": 21771,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21352,
											"end": 21771,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21556,
											"end": 21558,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21545,
											"end": 21554,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21541,
											"end": 21559,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21533,
											"end": 21559,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21533,
											"end": 21559,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21605,
											"end": 21614,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21599,
											"end": 21603,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21595,
											"end": 21615,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 21591,
											"end": 21592,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21580,
											"end": 21589,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21576,
											"end": 21593,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21569,
											"end": 21616,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21633,
											"end": 21764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 21759,
											"end": 21763,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21633,
											"end": 21764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 21633,
											"end": 21764,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 21633,
											"end": 21764,
											"name": "tag",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 21633,
											"end": 21764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21625,
											"end": 21764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21625,
											"end": 21764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21523,
											"end": 21771,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21523,
											"end": 21771,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21523,
											"end": 21771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21523,
											"end": 21771,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 21777,
											"end": 21999,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 21777,
											"end": 21999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21777,
											"end": 21999,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21908,
											"end": 21910,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21897,
											"end": 21906,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21893,
											"end": 21911,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21885,
											"end": 21911,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21885,
											"end": 21911,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21921,
											"end": 21992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 21989,
											"end": 21990,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21978,
											"end": 21987,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21974,
											"end": 21991,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21965,
											"end": 21971,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 21921,
											"end": 21992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 21921,
											"end": 21992,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 21921,
											"end": 21992,
											"name": "tag",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 21921,
											"end": 21992,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21875,
											"end": 21999,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 21875,
											"end": 21999,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21875,
											"end": 21999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21875,
											"end": 21999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21875,
											"end": 21999,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 22005,
											"end": 22337,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 22005,
											"end": 22337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22005,
											"end": 22337,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22164,
											"end": 22166,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22153,
											"end": 22162,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22149,
											"end": 22167,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22141,
											"end": 22167,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22141,
											"end": 22167,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22177,
											"end": 22248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 22245,
											"end": 22246,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22234,
											"end": 22243,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22230,
											"end": 22247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22221,
											"end": 22227,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 22177,
											"end": 22248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 22177,
											"end": 22248,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22177,
											"end": 22248,
											"name": "tag",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 22177,
											"end": 22248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22258,
											"end": 22330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 22326,
											"end": 22328,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22315,
											"end": 22324,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22311,
											"end": 22329,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22302,
											"end": 22308,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 22258,
											"end": 22330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 22258,
											"end": 22330,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22258,
											"end": 22330,
											"name": "tag",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 22258,
											"end": 22330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22131,
											"end": 22337,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 22131,
											"end": 22337,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 22131,
											"end": 22337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22131,
											"end": 22337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22131,
											"end": 22337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22131,
											"end": 22337,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 22343,
											"end": 22472,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 22343,
											"end": 22472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22343,
											"end": 22472,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22404,
											"end": 22424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 22404,
											"end": 22424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 22404,
											"end": 22424,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22404,
											"end": 22424,
											"name": "tag",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 22404,
											"end": 22424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22394,
											"end": 22424,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22394,
											"end": 22424,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22433,
											"end": 22466,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 22461,
											"end": 22465,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22453,
											"end": 22459,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22433,
											"end": 22466,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 22433,
											"end": 22466,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22433,
											"end": 22466,
											"name": "tag",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 22433,
											"end": 22466,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22384,
											"end": 22472,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22384,
											"end": 22472,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22384,
											"end": 22472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22384,
											"end": 22472,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 22478,
											"end": 22553,
											"name": "tag",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 22478,
											"end": 22553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22478,
											"end": 22553,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22544,
											"end": 22546,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22538,
											"end": 22547,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22528,
											"end": 22547,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22528,
											"end": 22547,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22518,
											"end": 22553,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22518,
											"end": 22553,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 22559,
											"end": 22870,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 22559,
											"end": 22870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22559,
											"end": 22870,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22726,
											"end": 22744,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22718,
											"end": 22724,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22715,
											"end": 22745,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 22712,
											"end": 22714,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 22712,
											"end": 22714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 22712,
											"end": 22714,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22748,
											"end": 22766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 22748,
											"end": 22766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 22748,
											"end": 22766,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22748,
											"end": 22766,
											"name": "tag",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 22748,
											"end": 22766,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22712,
											"end": 22714,
											"name": "tag",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 22712,
											"end": 22714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22798,
											"end": 22802,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22790,
											"end": 22796,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22786,
											"end": 22803,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 22778,
											"end": 22803,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22778,
											"end": 22803,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22858,
											"end": 22862,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22852,
											"end": 22856,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22848,
											"end": 22863,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22840,
											"end": 22863,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22840,
											"end": 22863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22641,
											"end": 22870,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22641,
											"end": 22870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22641,
											"end": 22870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22641,
											"end": 22870,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 22876,
											"end": 23187,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 22876,
											"end": 23187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22876,
											"end": 23187,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23043,
											"end": 23061,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23035,
											"end": 23041,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23032,
											"end": 23062,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 23029,
											"end": 23031,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 23029,
											"end": 23031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 23029,
											"end": 23031,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 23065,
											"end": 23083,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 23065,
											"end": 23083,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 23065,
											"end": 23083,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23065,
											"end": 23083,
											"name": "tag",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 23065,
											"end": 23083,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23029,
											"end": 23031,
											"name": "tag",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 23029,
											"end": 23031,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23115,
											"end": 23119,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23107,
											"end": 23113,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23103,
											"end": 23120,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 23095,
											"end": 23120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23095,
											"end": 23120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23175,
											"end": 23179,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23169,
											"end": 23173,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23165,
											"end": 23180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23157,
											"end": 23180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23157,
											"end": 23180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22958,
											"end": 23187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22958,
											"end": 23187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22958,
											"end": 23187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22958,
											"end": 23187,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23193,
											"end": 23500,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 23193,
											"end": 23500,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23193,
											"end": 23500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23344,
											"end": 23362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23336,
											"end": 23342,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23333,
											"end": 23363,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 23330,
											"end": 23332,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 23330,
											"end": 23332,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 23330,
											"end": 23332,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 23366,
											"end": 23384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 23366,
											"end": 23384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 23366,
											"end": 23384,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23366,
											"end": 23384,
											"name": "tag",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 23366,
											"end": 23384,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23330,
											"end": 23332,
											"name": "tag",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 23330,
											"end": 23332,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23404,
											"end": 23433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 23426,
											"end": 23432,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23404,
											"end": 23433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 23404,
											"end": 23433,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23404,
											"end": 23433,
											"name": "tag",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 23404,
											"end": 23433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23396,
											"end": 23433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23396,
											"end": 23433,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23488,
											"end": 23492,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23482,
											"end": 23486,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23478,
											"end": 23493,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23470,
											"end": 23493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23470,
											"end": 23493,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23259,
											"end": 23500,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23259,
											"end": 23500,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23259,
											"end": 23500,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23259,
											"end": 23500,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23506,
											"end": 23638,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 23506,
											"end": 23638,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23506,
											"end": 23638,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23596,
											"end": 23599,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23588,
											"end": 23599,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23588,
											"end": 23599,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23626,
											"end": 23630,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23621,
											"end": 23624,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23617,
											"end": 23631,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23609,
											"end": 23631,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23609,
											"end": 23631,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23578,
											"end": 23638,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23578,
											"end": 23638,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23578,
											"end": 23638,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23578,
											"end": 23638,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23644,
											"end": 23758,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 23644,
											"end": 23758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23644,
											"end": 23758,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23745,
											"end": 23750,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23739,
											"end": 23751,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 23729,
											"end": 23751,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23729,
											"end": 23751,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23718,
											"end": 23758,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23718,
											"end": 23758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23718,
											"end": 23758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23718,
											"end": 23758,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23764,
											"end": 23862,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 23764,
											"end": 23862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23764,
											"end": 23862,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23849,
											"end": 23854,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23843,
											"end": 23855,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 23833,
											"end": 23855,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23833,
											"end": 23855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23822,
											"end": 23862,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23822,
											"end": 23862,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23822,
											"end": 23862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23822,
											"end": 23862,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23868,
											"end": 23967,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 23868,
											"end": 23967,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23868,
											"end": 23967,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23954,
											"end": 23959,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23948,
											"end": 23960,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 23938,
											"end": 23960,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23938,
											"end": 23960,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23927,
											"end": 23967,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23927,
											"end": 23967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23927,
											"end": 23967,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23927,
											"end": 23967,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23973,
											"end": 24086,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 23973,
											"end": 24086,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23973,
											"end": 24086,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24075,
											"end": 24079,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24070,
											"end": 24073,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24066,
											"end": 24080,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24058,
											"end": 24080,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24058,
											"end": 24080,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24048,
											"end": 24086,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24048,
											"end": 24086,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24048,
											"end": 24086,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24048,
											"end": 24086,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 24092,
											"end": 24276,
											"name": "tag",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 24092,
											"end": 24276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24092,
											"end": 24276,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24225,
											"end": 24231,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24220,
											"end": 24223,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24213,
											"end": 24232,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24265,
											"end": 24269,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24260,
											"end": 24263,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24256,
											"end": 24270,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24241,
											"end": 24270,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24241,
											"end": 24270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24203,
											"end": 24276,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24203,
											"end": 24276,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24203,
											"end": 24276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24203,
											"end": 24276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24203,
											"end": 24276,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 24282,
											"end": 24450,
											"name": "tag",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 24282,
											"end": 24450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24282,
											"end": 24450,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24399,
											"end": 24405,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24394,
											"end": 24397,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24387,
											"end": 24406,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24439,
											"end": 24443,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24434,
											"end": 24437,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24430,
											"end": 24444,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24415,
											"end": 24444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24415,
											"end": 24444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24377,
											"end": 24450,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24377,
											"end": 24450,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24377,
											"end": 24450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24377,
											"end": 24450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24377,
											"end": 24450,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 24456,
											"end": 24625,
											"name": "tag",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 24456,
											"end": 24625,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24456,
											"end": 24625,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24574,
											"end": 24580,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24569,
											"end": 24572,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24562,
											"end": 24581,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24614,
											"end": 24618,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24609,
											"end": 24612,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24605,
											"end": 24619,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24590,
											"end": 24619,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24590,
											"end": 24619,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24552,
											"end": 24625,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24552,
											"end": 24625,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24552,
											"end": 24625,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24552,
											"end": 24625,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24552,
											"end": 24625,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 24631,
											"end": 24936,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 24631,
											"end": 24936,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24631,
											"end": 24936,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24690,
											"end": 24710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 24708,
											"end": 24709,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24690,
											"end": 24710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "411"
										},
										{
											"begin": 24690,
											"end": 24710,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24690,
											"end": 24710,
											"name": "tag",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 24690,
											"end": 24710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24685,
											"end": 24710,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24685,
											"end": 24710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24724,
											"end": 24744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 24742,
											"end": 24743,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24724,
											"end": 24744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "411"
										},
										{
											"begin": 24724,
											"end": 24744,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24724,
											"end": 24744,
											"name": "tag",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 24724,
											"end": 24744,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24719,
											"end": 24744,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24719,
											"end": 24744,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24878,
											"end": 24879,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24810,
											"end": 24876,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24806,
											"end": 24880,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 24803,
											"end": 24804,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24800,
											"end": 24881,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 24797,
											"end": 24799,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 24797,
											"end": 24799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "489"
										},
										{
											"begin": 24797,
											"end": 24799,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24884,
											"end": 24902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 24884,
											"end": 24902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 24884,
											"end": 24902,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24884,
											"end": 24902,
											"name": "tag",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 24884,
											"end": 24902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24797,
											"end": 24799,
											"name": "tag",
											"source": 1,
											"value": "489"
										},
										{
											"begin": 24797,
											"end": 24799,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24928,
											"end": 24929,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24925,
											"end": 24926,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24921,
											"end": 24930,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24914,
											"end": 24930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24914,
											"end": 24930,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24675,
											"end": 24936,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24675,
											"end": 24936,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24675,
											"end": 24936,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24675,
											"end": 24936,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24675,
											"end": 24936,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 24942,
											"end": 25038,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 24942,
											"end": 25038,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24942,
											"end": 25038,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25008,
											"end": 25032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "493"
										},
										{
											"begin": 25026,
											"end": 25031,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25008,
											"end": 25032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 25008,
											"end": 25032,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 25008,
											"end": 25032,
											"name": "tag",
											"source": 1,
											"value": "493"
										},
										{
											"begin": 25008,
											"end": 25032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24997,
											"end": 25032,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24997,
											"end": 25032,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24987,
											"end": 25038,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24987,
											"end": 25038,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24987,
											"end": 25038,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24987,
											"end": 25038,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 25044,
											"end": 25134,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 25044,
											"end": 25134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25044,
											"end": 25134,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25121,
											"end": 25126,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25114,
											"end": 25127,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 25107,
											"end": 25128,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 25096,
											"end": 25128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25096,
											"end": 25128,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25086,
											"end": 25134,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25086,
											"end": 25134,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25086,
											"end": 25134,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25086,
											"end": 25134,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 25140,
											"end": 25289,
											"name": "tag",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 25140,
											"end": 25289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25140,
											"end": 25289,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25216,
											"end": 25282,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25209,
											"end": 25214,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25205,
											"end": 25283,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25194,
											"end": 25283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25194,
											"end": 25283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25184,
											"end": 25289,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25184,
											"end": 25289,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25184,
											"end": 25289,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25184,
											"end": 25289,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 25295,
											"end": 25421,
											"name": "tag",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 25295,
											"end": 25421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25295,
											"end": 25421,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25372,
											"end": 25414,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25365,
											"end": 25370,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25361,
											"end": 25415,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25350,
											"end": 25415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25350,
											"end": 25415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25340,
											"end": 25421,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25340,
											"end": 25421,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25340,
											"end": 25421,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25340,
											"end": 25421,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 25427,
											"end": 25504,
											"name": "tag",
											"source": 1,
											"value": "411"
										},
										{
											"begin": 25427,
											"end": 25504,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25427,
											"end": 25504,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25493,
											"end": 25498,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25482,
											"end": 25498,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25482,
											"end": 25498,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25472,
											"end": 25504,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25472,
											"end": 25504,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25472,
											"end": 25504,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25472,
											"end": 25504,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 25510,
											"end": 25664,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 25510,
											"end": 25664,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25594,
											"end": 25600,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25589,
											"end": 25592,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25584,
											"end": 25587,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 25571,
											"end": 25601,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 25656,
											"end": 25657,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25647,
											"end": 25653,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 25642,
											"end": 25645,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 25638,
											"end": 25654,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25631,
											"end": 25658,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25561,
											"end": 25664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25561,
											"end": 25664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25561,
											"end": 25664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25561,
											"end": 25664,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 25670,
											"end": 25977,
											"name": "tag",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 25670,
											"end": 25977,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25738,
											"end": 25739,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25748,
											"end": 25861,
											"name": "tag",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 25748,
											"end": 25861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25762,
											"end": 25768,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 25759,
											"end": 25760,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25756,
											"end": 25769,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 25748,
											"end": 25861,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 25748,
											"end": 25861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 25748,
											"end": 25861,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 25847,
											"end": 25848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25842,
											"end": 25845,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25838,
											"end": 25849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25832,
											"end": 25850,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 25828,
											"end": 25829,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25823,
											"end": 25826,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 25819,
											"end": 25830,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25812,
											"end": 25851,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25784,
											"end": 25786,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25781,
											"end": 25782,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25777,
											"end": 25787,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25772,
											"end": 25787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25772,
											"end": 25787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25748,
											"end": 25861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 25748,
											"end": 25861,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25748,
											"end": 25861,
											"name": "tag",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 25748,
											"end": 25861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25879,
											"end": 25885,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 25876,
											"end": 25877,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25873,
											"end": 25886,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 25870,
											"end": 25872,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 25870,
											"end": 25872,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 25870,
											"end": 25872,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 25959,
											"end": 25960,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25950,
											"end": 25956,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 25945,
											"end": 25948,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 25941,
											"end": 25957,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25934,
											"end": 25961,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25870,
											"end": 25872,
											"name": "tag",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 25870,
											"end": 25872,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25719,
											"end": 25977,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25719,
											"end": 25977,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25719,
											"end": 25977,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25719,
											"end": 25977,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25719,
											"end": 25977,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 25983,
											"end": 26303,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 25983,
											"end": 26303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25983,
											"end": 26303,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26064,
											"end": 26065,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 26058,
											"end": 26062,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26054,
											"end": 26066,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 26044,
											"end": 26066,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26044,
											"end": 26066,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26111,
											"end": 26112,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 26105,
											"end": 26109,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26101,
											"end": 26113,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 26132,
											"end": 26150,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 26122,
											"end": 26124,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26188,
											"end": 26192,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 26180,
											"end": 26186,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26176,
											"end": 26193,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 26166,
											"end": 26193,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26166,
											"end": 26193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26124,
											"name": "tag",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 26122,
											"end": 26124,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26250,
											"end": 26252,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26242,
											"end": 26248,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26239,
											"end": 26253,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 26219,
											"end": 26237,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26216,
											"end": 26254,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 26213,
											"end": 26215,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 26213,
											"end": 26215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 26213,
											"end": 26215,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26269,
											"end": 26287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "509"
										},
										{
											"begin": 26269,
											"end": 26287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 26269,
											"end": 26287,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 26269,
											"end": 26287,
											"name": "tag",
											"source": 1,
											"value": "509"
										},
										{
											"begin": 26269,
											"end": 26287,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26213,
											"end": 26215,
											"name": "tag",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 26213,
											"end": 26215,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26034,
											"end": 26303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26034,
											"end": 26303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26034,
											"end": 26303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26034,
											"end": 26303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26034,
											"end": 26303,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 26309,
											"end": 26590,
											"name": "tag",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 26309,
											"end": 26590,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26392,
											"end": 26419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 26414,
											"end": 26418,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26392,
											"end": 26419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 26392,
											"end": 26419,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 26392,
											"end": 26419,
											"name": "tag",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 26392,
											"end": 26419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26384,
											"end": 26390,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26380,
											"end": 26420,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26522,
											"end": 26528,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26510,
											"end": 26520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26507,
											"end": 26529,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 26486,
											"end": 26504,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26474,
											"end": 26484,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26471,
											"end": 26505,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 26468,
											"end": 26530,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 26465,
											"end": 26467,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 26465,
											"end": 26467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 26465,
											"end": 26467,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26533,
											"end": 26551,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 26533,
											"end": 26551,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 26533,
											"end": 26551,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 26533,
											"end": 26551,
											"name": "tag",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 26533,
											"end": 26551,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26465,
											"end": 26467,
											"name": "tag",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 26465,
											"end": 26467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26573,
											"end": 26583,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26569,
											"end": 26571,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26562,
											"end": 26584,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26352,
											"end": 26590,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26352,
											"end": 26590,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26352,
											"end": 26590,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26352,
											"end": 26590,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 26596,
											"end": 26829,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 26596,
											"end": 26829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26596,
											"end": 26829,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26658,
											"end": 26682,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "516"
										},
										{
											"begin": 26676,
											"end": 26681,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26658,
											"end": 26682,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "411"
										},
										{
											"begin": 26658,
											"end": 26682,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 26658,
											"end": 26682,
											"name": "tag",
											"source": 1,
											"value": "516"
										},
										{
											"begin": 26658,
											"end": 26682,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26649,
											"end": 26682,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26649,
											"end": 26682,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26704,
											"end": 26770,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26697,
											"end": 26702,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26694,
											"end": 26771,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 26691,
											"end": 26693,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 26691,
											"end": 26693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "517"
										},
										{
											"begin": 26691,
											"end": 26693,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26774,
											"end": 26792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 26774,
											"end": 26792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 26774,
											"end": 26792,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 26774,
											"end": 26792,
											"name": "tag",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 26774,
											"end": 26792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26691,
											"end": 26693,
											"name": "tag",
											"source": 1,
											"value": "517"
										},
										{
											"begin": 26691,
											"end": 26693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26821,
											"end": 26822,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 26814,
											"end": 26819,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26810,
											"end": 26823,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26803,
											"end": 26823,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26803,
											"end": 26823,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26639,
											"end": 26829,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26639,
											"end": 26829,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26639,
											"end": 26829,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26639,
											"end": 26829,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 26835,
											"end": 27015,
											"name": "tag",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 26835,
											"end": 27015,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26883,
											"end": 26960,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26880,
											"end": 26881,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26873,
											"end": 26961,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26980,
											"end": 26984,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 26977,
											"end": 26978,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 26970,
											"end": 26985,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27004,
											"end": 27008,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 27001,
											"end": 27002,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26994,
											"end": 27009,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 27021,
											"end": 27201,
											"name": "tag",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 27021,
											"end": 27201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27069,
											"end": 27146,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27066,
											"end": 27067,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27059,
											"end": 27147,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27166,
											"end": 27170,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 27163,
											"end": 27164,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 27156,
											"end": 27171,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27190,
											"end": 27194,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 27187,
											"end": 27188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27180,
											"end": 27195,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 27207,
											"end": 27387,
											"name": "tag",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 27207,
											"end": 27387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27255,
											"end": 27332,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27252,
											"end": 27253,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27245,
											"end": 27333,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27352,
											"end": 27356,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 27349,
											"end": 27350,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 27342,
											"end": 27357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27376,
											"end": 27380,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 27373,
											"end": 27374,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27366,
											"end": 27381,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 27393,
											"end": 27576,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 27393,
											"end": 27576,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27393,
											"end": 27576,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27466,
											"end": 27467,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 27448,
											"end": 27464,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 27445,
											"end": 27468,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 27442,
											"end": 27444,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 27442,
											"end": 27444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "523"
										},
										{
											"begin": 27442,
											"end": 27444,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27505,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 27501,
											"end": 27502,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27498,
											"end": 27499,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27483,
											"end": 27506,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 27526,
											"end": 27560,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 27557,
											"end": 27558,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27551,
											"end": 27559,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27526,
											"end": 27560,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "525"
										},
										{
											"begin": 27526,
											"end": 27560,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 27526,
											"end": 27560,
											"name": "tag",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 27526,
											"end": 27560,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27519,
											"end": 27560,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27519,
											"end": 27560,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27442,
											"end": 27444,
											"name": "tag",
											"source": 1,
											"value": "523"
										},
										{
											"begin": 27442,
											"end": 27444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27432,
											"end": 27576,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27432,
											"end": 27576,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 27582,
											"end": 27684,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 27582,
											"end": 27684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27582,
											"end": 27684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27674,
											"end": 27676,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 27670,
											"end": 27677,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 27665,
											"end": 27667,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 27658,
											"end": 27663,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 27654,
											"end": 27668,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27650,
											"end": 27678,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27640,
											"end": 27678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27640,
											"end": 27678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27630,
											"end": 27684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27630,
											"end": 27684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27630,
											"end": 27684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27630,
											"end": 27684,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 27690,
											"end": 27796,
											"name": "tag",
											"source": 1,
											"value": "525"
										},
										{
											"begin": 27690,
											"end": 27796,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27690,
											"end": 27796,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27783,
											"end": 27788,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27778,
											"end": 27781,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 27774,
											"end": 27789,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 27753,
											"end": 27789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27753,
											"end": 27789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27743,
											"end": 27796,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27743,
											"end": 27796,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27743,
											"end": 27796,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27743,
											"end": 27796,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 27802,
											"end": 28041,
											"name": "tag",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 27802,
											"end": 28041,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27942,
											"end": 27976,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
										},
										{
											"begin": 27938,
											"end": 27939,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27930,
											"end": 27936,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27926,
											"end": 27940,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27919,
											"end": 27977,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28011,
											"end": 28033,
											"name": "PUSH",
											"source": 1,
											"value": "526563656976657220696D706C656D656E746572000000000000000000000000"
										},
										{
											"begin": 28006,
											"end": 28008,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27998,
											"end": 28004,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27994,
											"end": 28009,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27987,
											"end": 28034,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27908,
											"end": 28041,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27908,
											"end": 28041,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 28047,
											"end": 28274,
											"name": "tag",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 28047,
											"end": 28274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28187,
											"end": 28221,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 28183,
											"end": 28184,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28175,
											"end": 28181,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28171,
											"end": 28185,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28164,
											"end": 28222,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28256,
											"end": 28266,
											"name": "PUSH",
											"source": 1,
											"value": "6420746F6B656E73000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28251,
											"end": 28253,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28243,
											"end": 28249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28239,
											"end": 28254,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28232,
											"end": 28267,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28153,
											"end": 28274,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28153,
											"end": 28274,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 28280,
											"end": 28510,
											"name": "tag",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 28280,
											"end": 28510,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28420,
											"end": 28454,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A2062616C616E636520717565727920666F7220746865207A"
										},
										{
											"begin": 28416,
											"end": 28417,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28408,
											"end": 28414,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28404,
											"end": 28418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28397,
											"end": 28455,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28489,
											"end": 28502,
											"name": "PUSH",
											"source": 1,
											"value": "65726F2061646472657373000000000000000000000000000000000000000000"
										},
										{
											"begin": 28484,
											"end": 28486,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28476,
											"end": 28482,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28472,
											"end": 28487,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28465,
											"end": 28503,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28386,
											"end": 28510,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28386,
											"end": 28510,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 28516,
											"end": 28744,
											"name": "tag",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 28516,
											"end": 28744,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28656,
											"end": 28690,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
										},
										{
											"begin": 28652,
											"end": 28653,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28644,
											"end": 28650,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28640,
											"end": 28654,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28633,
											"end": 28691,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28725,
											"end": 28736,
											"name": "PUSH",
											"source": 1,
											"value": "20617070726F7665640000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28720,
											"end": 28722,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28712,
											"end": 28718,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28708,
											"end": 28723,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28701,
											"end": 28737,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28622,
											"end": 28744,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28622,
											"end": 28744,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 28750,
											"end": 28974,
											"name": "tag",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 28750,
											"end": 28974,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28890,
											"end": 28924,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 28886,
											"end": 28887,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28878,
											"end": 28884,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28874,
											"end": 28888,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28867,
											"end": 28925,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28959,
											"end": 28966,
											"name": "PUSH",
											"source": 1,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28954,
											"end": 28956,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28946,
											"end": 28952,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28942,
											"end": 28957,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28935,
											"end": 28967,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28856,
											"end": 28974,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28856,
											"end": 28974,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 28980,
											"end": 29217,
											"name": "tag",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 28980,
											"end": 29217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29120,
											"end": 29154,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
										},
										{
											"begin": 29116,
											"end": 29117,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29108,
											"end": 29114,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29104,
											"end": 29118,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29097,
											"end": 29155,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29189,
											"end": 29209,
											"name": "PUSH",
											"source": 1,
											"value": "6F776E6572206E6F7220617070726F7665640000000000000000000000000000"
										},
										{
											"begin": 29184,
											"end": 29186,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29176,
											"end": 29182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29172,
											"end": 29187,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29165,
											"end": 29210,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29086,
											"end": 29217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29086,
											"end": 29217,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 29223,
											"end": 29452,
											"name": "tag",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 29223,
											"end": 29452,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29363,
											"end": 29397,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 29359,
											"end": 29360,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29351,
											"end": 29357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29347,
											"end": 29361,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29340,
											"end": 29398,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29432,
											"end": 29444,
											"name": "PUSH",
											"source": 1,
											"value": "72207472616E7366657200000000000000000000000000000000000000000000"
										},
										{
											"begin": 29427,
											"end": 29429,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29419,
											"end": 29425,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29415,
											"end": 29430,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29408,
											"end": 29445,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29329,
											"end": 29452,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29329,
											"end": 29452,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 29458,
											"end": 29686,
											"name": "tag",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 29458,
											"end": 29686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29598,
											"end": 29632,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 29594,
											"end": 29595,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29586,
											"end": 29592,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29582,
											"end": 29596,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29575,
											"end": 29633,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29667,
											"end": 29678,
											"name": "PUSH",
											"source": 1,
											"value": "20666F722073656C660000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29662,
											"end": 29664,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29654,
											"end": 29660,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29650,
											"end": 29665,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29643,
											"end": 29679,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29564,
											"end": 29686,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29564,
											"end": 29686,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 29692,
											"end": 29920,
											"name": "tag",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 29692,
											"end": 29920,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29832,
											"end": 29866,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 29828,
											"end": 29829,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29820,
											"end": 29826,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29816,
											"end": 29830,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29809,
											"end": 29867,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29901,
											"end": 29912,
											"name": "PUSH",
											"source": 1,
											"value": "206D69736D617463680000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29896,
											"end": 29898,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29888,
											"end": 29894,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29884,
											"end": 29899,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29877,
											"end": 29913,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29798,
											"end": 29920,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29798,
											"end": 29920,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 29926,
											"end": 30153,
											"name": "tag",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 29926,
											"end": 30153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30066,
											"end": 30100,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 30062,
											"end": 30063,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30054,
											"end": 30060,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30050,
											"end": 30064,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30043,
											"end": 30101,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30135,
											"end": 30145,
											"name": "PUSH",
											"source": 1,
											"value": "6D69736D61746368000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30130,
											"end": 30132,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30122,
											"end": 30128,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30118,
											"end": 30133,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30111,
											"end": 30146,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30032,
											"end": 30153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30032,
											"end": 30153,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 30159,
											"end": 30870,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 30159,
											"end": 30870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30159,
											"end": 30870,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30236,
											"end": 30240,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 30218,
											"end": 30234,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 30215,
											"end": 30241,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 30212,
											"end": 30214,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 30212,
											"end": 30214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 30212,
											"end": 30214,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 30244,
											"end": 30249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "538"
										},
										{
											"begin": 30244,
											"end": 30249,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30212,
											"end": 30214,
											"name": "tag",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 30212,
											"end": 30214,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30273,
											"end": 30293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "540"
										},
										{
											"begin": 30273,
											"end": 30293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 30273,
											"end": 30293,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 30273,
											"end": 30293,
											"name": "tag",
											"source": 1,
											"value": "540"
										},
										{
											"begin": 30273,
											"end": 30293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30348,
											"end": 30349,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 30330,
											"end": 30346,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 30326,
											"end": 30350,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 30323,
											"end": 30324,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 30317,
											"end": 30321,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30302,
											"end": 30351,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 30381,
											"end": 30385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30375,
											"end": 30386,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 30480,
											"end": 30496,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 30473,
											"end": 30477,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 30465,
											"end": 30471,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30461,
											"end": 30478,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30458,
											"end": 30497,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 30425,
											"end": 30443,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30417,
											"end": 30423,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30414,
											"end": 30444,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 30398,
											"end": 30511,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 30395,
											"end": 30397,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 30395,
											"end": 30397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "541"
										},
										{
											"begin": 30395,
											"end": 30397,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 30526,
											"end": 30531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30526,
											"end": 30531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30526,
											"end": 30531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "538"
										},
										{
											"begin": 30526,
											"end": 30531,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30395,
											"end": 30397,
											"name": "tag",
											"source": 1,
											"value": "541"
										},
										{
											"begin": 30395,
											"end": 30397,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30572,
											"end": 30578,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30566,
											"end": 30570,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30562,
											"end": 30579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30608,
											"end": 30611,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30602,
											"end": 30612,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 30635,
											"end": 30653,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30627,
											"end": 30633,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30624,
											"end": 30654,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 30621,
											"end": 30623,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 30621,
											"end": 30623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 30621,
											"end": 30623,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 30657,
											"end": 30662,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30657,
											"end": 30662,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30657,
											"end": 30662,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30657,
											"end": 30662,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30657,
											"end": 30662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "538"
										},
										{
											"begin": 30657,
											"end": 30662,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30621,
											"end": 30623,
											"name": "tag",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 30621,
											"end": 30623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30705,
											"end": 30711,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30698,
											"end": 30702,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30693,
											"end": 30696,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 30689,
											"end": 30703,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30685,
											"end": 30712,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30764,
											"end": 30765,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 30746,
											"end": 30762,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 30742,
											"end": 30766,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 30736,
											"end": 30740,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 30732,
											"end": 30767,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30727,
											"end": 30730,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30724,
											"end": 30768,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 30721,
											"end": 30723,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 30721,
											"end": 30723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "543"
										},
										{
											"begin": 30721,
											"end": 30723,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 30771,
											"end": 30776,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30771,
											"end": 30776,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30771,
											"end": 30776,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30771,
											"end": 30776,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30771,
											"end": 30776,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30771,
											"end": 30776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "538"
										},
										{
											"begin": 30771,
											"end": 30776,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30721,
											"end": 30723,
											"name": "tag",
											"source": 1,
											"value": "543"
										},
										{
											"begin": 30721,
											"end": 30723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30788,
											"end": 30845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "544"
										},
										{
											"begin": 30836,
											"end": 30842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30830,
											"end": 30834,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30826,
											"end": 30843,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30818,
											"end": 30824,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 30814,
											"end": 30844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30808,
											"end": 30812,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 30788,
											"end": 30845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 30788,
											"end": 30845,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 30788,
											"end": 30845,
											"name": "tag",
											"source": 1,
											"value": "544"
										},
										{
											"begin": 30788,
											"end": 30845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30861,
											"end": 30864,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30854,
											"end": 30864,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 30854,
											"end": 30864,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30202,
											"end": 30870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30202,
											"end": 30870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30202,
											"end": 30870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30202,
											"end": 30870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30202,
											"end": 30870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30202,
											"end": 30870,
											"name": "tag",
											"source": 1,
											"value": "538"
										},
										{
											"begin": 30202,
											"end": 30870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30202,
											"end": 30870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30202,
											"end": 30870,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 30876,
											"end": 30998,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 30876,
											"end": 30998,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30949,
											"end": 30973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 30967,
											"end": 30972,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30949,
											"end": 30973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 30949,
											"end": 30973,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 30949,
											"end": 30973,
											"name": "tag",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 30949,
											"end": 30973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30942,
											"end": 30947,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30939,
											"end": 30974,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 30929,
											"end": 30931,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "547"
										},
										{
											"begin": 30929,
											"end": 30931,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 30988,
											"end": 30989,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30985,
											"end": 30986,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30978,
											"end": 30990,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 30929,
											"end": 30931,
											"name": "tag",
											"source": 1,
											"value": "547"
										},
										{
											"begin": 30929,
											"end": 30931,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30919,
											"end": 30998,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30919,
											"end": 30998,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 31004,
											"end": 31120,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 31004,
											"end": 31120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31074,
											"end": 31095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "549"
										},
										{
											"begin": 31089,
											"end": 31094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31074,
											"end": 31095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 31074,
											"end": 31095,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 31074,
											"end": 31095,
											"name": "tag",
											"source": 1,
											"value": "549"
										},
										{
											"begin": 31074,
											"end": 31095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31067,
											"end": 31072,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31064,
											"end": 31096,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 31054,
											"end": 31056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 31054,
											"end": 31056,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 31110,
											"end": 31111,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31107,
											"end": 31108,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31100,
											"end": 31112,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 31054,
											"end": 31056,
											"name": "tag",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 31054,
											"end": 31056,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31044,
											"end": 31120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31044,
											"end": 31120,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 31126,
											"end": 31246,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 31126,
											"end": 31246,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31198,
											"end": 31221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "552"
										},
										{
											"begin": 31215,
											"end": 31220,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31198,
											"end": 31221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 31198,
											"end": 31221,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 31198,
											"end": 31221,
											"name": "tag",
											"source": 1,
											"value": "552"
										},
										{
											"begin": 31198,
											"end": 31221,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31191,
											"end": 31196,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31188,
											"end": 31222,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 31178,
											"end": 31180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 31178,
											"end": 31180,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 31236,
											"end": 31237,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31233,
											"end": 31234,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31226,
											"end": 31238,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 31178,
											"end": 31180,
											"name": "tag",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 31178,
											"end": 31180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31168,
											"end": 31246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31168,
											"end": 31246,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 31252,
											"end": 31374,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 31252,
											"end": 31374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31325,
											"end": 31349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "555"
										},
										{
											"begin": 31343,
											"end": 31348,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31325,
											"end": 31349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "411"
										},
										{
											"begin": 31325,
											"end": 31349,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 31325,
											"end": 31349,
											"name": "tag",
											"source": 1,
											"value": "555"
										},
										{
											"begin": 31325,
											"end": 31349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31318,
											"end": 31323,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31315,
											"end": 31350,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 31305,
											"end": 31307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 31305,
											"end": 31307,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 31364,
											"end": 31365,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31361,
											"end": 31362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31354,
											"end": 31366,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 31305,
											"end": 31307,
											"name": "tag",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 31305,
											"end": 31307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31295,
											"end": 31374,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31295,
											"end": 31374,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC1155MultiURI.sol\":\"ERC1155\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC1155MultiURI.sol\":{\"keccak256\":\"0xd0f5cdb311cd7f09433fae38f070cf937413aa0341057ba5a79b43311497b2c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://813b19b936a80183eb0bab5c94a65fb35ce46743291ca95ed48bc7ceef64c212\",\"dweb:/ipfs/Qmatvf6h2esKGHdD3DRJHbGCThLHxCijSucr5MLAkmXqsC\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC1155M": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "exists",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"exists(uint256)": {
								"details": "Indicates whether any token exist with a given id, or not."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"totalSupply(uint256)": {
								"details": "Total amount of tokens in with a given id."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"exists(uint256)": "4f558e79",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply(uint256)": "bd85b039",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"exists(uint256)\":{\"details\":\"Indicates whether any token exist with a given id, or not.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"totalSupply(uint256)\":{\"details\":\"Total amount of tokens in with a given id.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC1155MultiURI.sol\":\"ERC1155M\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC1155MultiURI.sol\":{\"keccak256\":\"0xd0f5cdb311cd7f09433fae38f070cf937413aa0341057ba5a79b43311497b2c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://813b19b936a80183eb0bab5c94a65fb35ce46743291ca95ed48bc7ceef64c212\",\"dweb:/ipfs/Qmatvf6h2esKGHdD3DRJHbGCThLHxCijSucr5MLAkmXqsC\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC1155Supply": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "exists",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of ERC1155 that adds tracking of total supply per id. Useful for scenarios where Fungible and Non-fungible tokens have to be clearly identified. Note: While a totalSupply of 1 might mean the corresponding is an NFT, there is no guarantees that no other token with the same id are not going to be minted.",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"exists(uint256)": {
								"details": "Indicates whether any token exist with a given id, or not."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"totalSupply(uint256)": {
								"details": "Total amount of tokens in with a given id."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"exists(uint256)": "4f558e79",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply(uint256)": "bd85b039",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of ERC1155 that adds tracking of total supply per id. Useful for scenarios where Fungible and Non-fungible tokens have to be clearly identified. Note: While a totalSupply of 1 might mean the corresponding is an NFT, there is no guarantees that no other token with the same id are not going to be minted.\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"exists(uint256)\":{\"details\":\"Indicates whether any token exist with a given id, or not.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"totalSupply(uint256)\":{\"details\":\"Total amount of tokens in with a given id.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC1155MultiURI.sol\":\"ERC1155Supply\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC1155MultiURI.sol\":{\"keccak256\":\"0xd0f5cdb311cd7f09433fae38f070cf937413aa0341057ba5a79b43311497b2c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://813b19b936a80183eb0bab5c94a65fb35ce46743291ca95ed48bc7ceef64c212\",\"dweb:/ipfs/Qmatvf6h2esKGHdD3DRJHbGCThLHxCijSucr5MLAkmXqsC\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC1155MultiURI.sol\":\"ERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC1155MultiURI.sol\":{\"keccak256\":\"0xd0f5cdb311cd7f09433fae38f070cf937413aa0341057ba5a79b43311497b2c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://813b19b936a80183eb0bab5c94a65fb35ce46743291ca95ed48bc7ceef64c212\",\"dweb:/ipfs/Qmatvf6h2esKGHdD3DRJHbGCThLHxCijSucr5MLAkmXqsC\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC1155MultiURI.sol\":\"IERC1155\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC1155MultiURI.sol\":{\"keccak256\":\"0xd0f5cdb311cd7f09433fae38f070cf937413aa0341057ba5a79b43311497b2c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://813b19b936a80183eb0bab5c94a65fb35ce46743291ca95ed48bc7ceef64c212\",\"dweb:/ipfs/Qmatvf6h2esKGHdD3DRJHbGCThLHxCijSucr5MLAkmXqsC\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC1155MultiURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC1155MultiURI.sol\":{\"keccak256\":\"0xd0f5cdb311cd7f09433fae38f070cf937413aa0341057ba5a79b43311497b2c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://813b19b936a80183eb0bab5c94a65fb35ce46743291ca95ed48bc7ceef64c212\",\"dweb:/ipfs/Qmatvf6h2esKGHdD3DRJHbGCThLHxCijSucr5MLAkmXqsC\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC1155MultiURI.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC1155MultiURI.sol\":{\"keccak256\":\"0xd0f5cdb311cd7f09433fae38f070cf937413aa0341057ba5a79b43311497b2c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://813b19b936a80183eb0bab5c94a65fb35ce46743291ca95ed48bc7ceef64c212\",\"dweb:/ipfs/Qmatvf6h2esKGHdD3DRJHbGCThLHxCijSucr5MLAkmXqsC\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC1155MultiURI.sol\":\"IERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC1155MultiURI.sol\":{\"keccak256\":\"0xd0f5cdb311cd7f09433fae38f070cf937413aa0341057ba5a79b43311497b2c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://813b19b936a80183eb0bab5c94a65fb35ce46743291ca95ed48bc7ceef64c212\",\"dweb:/ipfs/Qmatvf6h2esKGHdD3DRJHbGCThLHxCijSucr5MLAkmXqsC\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC1155MultiURI.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC1155MultiURI.sol\":{\"keccak256\":\"0xd0f5cdb311cd7f09433fae38f070cf937413aa0341057ba5a79b43311497b2c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://813b19b936a80183eb0bab5c94a65fb35ce46743291ca95ed48bc7ceef64c212\",\"dweb:/ipfs/Qmatvf6h2esKGHdD3DRJHbGCThLHxCijSucr5MLAkmXqsC\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/ERC1155MultiURI.sol": {
				"ast": {
					"absolutePath": "contracts/ERC1155MultiURI.sol",
					"exportedSymbols": {
						"Address": [
							420
						],
						"Context": [
							21
						],
						"ERC1155": [
							1714
						],
						"ERC1155M": [
							1866
						],
						"ERC1155Supply": [
							1845
						],
						"ERC165": [
							453
						],
						"IERC1155": [
							612
						],
						"IERC1155MetadataURI": [
							625
						],
						"IERC1155Receiver": [
							492
						],
						"IERC165": [
							431
						],
						"Ownable": [
							124
						]
					},
					"id": 1867,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "62:505:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 21,
							"linearizedBaseContracts": [
								21
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "664:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 7,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "682:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "682:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 6,
												"id": 9,
												"nodeType": "Return",
												"src": "675:17:0"
											}
										]
									},
									"id": 11,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "621:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "655:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:9:0"
									},
									"scope": 21,
									"src": "602:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "775:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 16,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "793:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "793:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 15,
												"id": 18,
												"nodeType": "Return",
												"src": "786:15:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "725:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "759:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "759:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "758:16:0"
									},
									"scope": 21,
									"src": "708:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1867,
							"src": "569:243:0"
						},
						{
							"id": 22,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "936:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 24,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "1501:7:0"
									},
									"id": 25,
									"nodeType": "InheritanceSpecifier",
									"src": "1501:7:0"
								}
							],
							"contractDependencies": [
								21
							],
							"contractKind": "contract",
							"documentation": {
								"id": 23,
								"nodeType": "StructuredDocumentation",
								"src": "965:505:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 124,
							"linearizedBaseContracts": [
								124,
								21
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 124,
									"src": "1516:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 26,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1516:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 33,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1574:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1574:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1605:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1605:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1573:57:0"
									},
									"src": "1547:84:0"
								},
								{
									"body": {
										"id": 42,
										"nodeType": "Block",
										"src": "1752:51:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 38,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "1782:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1782:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 37,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "1763:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1763:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 41,
												"nodeType": "ExpressionStatement",
												"src": "1763:32:0"
											}
										]
									},
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "1639:93:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 43,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1749:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1752:0:0"
									},
									"scope": 124,
									"src": "1738:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "1939:32:0",
										"statements": [
											{
												"expression": {
													"id": 49,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "1957:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 48,
												"id": 50,
												"nodeType": "Return",
												"src": "1950:13:0"
											}
										]
									},
									"documentation": {
										"id": 44,
										"nodeType": "StructuredDocumentation",
										"src": "1811:67:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 52,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1898:2:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "1930:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1929:9:0"
									},
									"scope": 124,
									"src": "1884:87:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 65,
										"nodeType": "Block",
										"src": "2085:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 56,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "2104:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 57,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2104:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 58,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "2115:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 59,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2115:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2104:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 61,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2129:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 55,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2096:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2096:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 63,
												"nodeType": "ExpressionStatement",
												"src": "2096:68:0"
											},
											{
												"id": 64,
												"nodeType": "PlaceholderStatement",
												"src": "2175:1:0"
											}
										]
									},
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "1979:79:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 66,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2082:2:0"
									},
									"src": "2064:120:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2589:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 75,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2627:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 74,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2619:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 73,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2619:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2619:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 72,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2600:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2600:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 78,
												"nodeType": "ExpressionStatement",
												"src": "2600:30:0"
											}
										]
									},
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "2192:337:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 70,
											"modifierName": {
												"id": 69,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 66,
												"src": "2579:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2579:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2561:2:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2589:0:0"
									},
									"scope": 124,
									"src": "2535:103:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2863:131:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 89,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "2882:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 92,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2902:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 91,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2894:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 90,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2894:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2894:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2882:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2906:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 88,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2874:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2874:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "2874:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "2977:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 98,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2958:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2958:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "2958:28:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2646:141:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 86,
											"modifierName": {
												"id": 85,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 66,
												"src": "2853:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2853:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2820:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2820:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2819:18:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2863:0:0"
									},
									"scope": 124,
									"src": "2793:201:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "3217:128:0",
										"statements": [
											{
												"assignments": [
													110
												],
												"declarations": [
													{
														"constant": false,
														"id": 110,
														"mutability": "mutable",
														"name": "oldOwner",
														"nodeType": "VariableDeclaration",
														"scope": 122,
														"src": "3228:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 109,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3228:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 112,
												"initialValue": {
													"id": 111,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "3247:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3228:25:0"
											},
											{
												"expression": {
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 113,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "3264:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 114,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "3273:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3264:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 116,
												"nodeType": "ExpressionStatement",
												"src": "3264:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 118,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "3318:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 119,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 106,
															"src": "3328:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 117,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "3297:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3297:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 121,
												"nodeType": "EmitStatement",
												"src": "3292:45:0"
											}
										]
									},
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "3002:146:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3182:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3182:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3181:18:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3217:0:0"
									},
									"scope": 124,
									"src": "3154:191:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1867,
							"src": "1472:1876:0"
						},
						{
							"id": 125,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "3470:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 126,
								"nodeType": "StructuredDocumentation",
								"src": "3497:69:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 420,
							"linearizedBaseContracts": [
								420
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 142,
										"nodeType": "Block",
										"src": "4244:321:0",
										"statements": [
											{
												"assignments": [
													135
												],
												"declarations": [
													{
														"constant": false,
														"id": 135,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"scope": 142,
														"src": "4446:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 134,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4446:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 136,
												"nodeType": "VariableDeclarationStatement",
												"src": "4446:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4478:54:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4493:28:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "4513:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "4501:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "4501:20:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "4493:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 129,
														"isOffset": false,
														"isSlot": false,
														"src": "4513:7:0",
														"valueSize": 1
													},
													{
														"declaration": 135,
														"isOffset": false,
														"isSlot": false,
														"src": "4493:4:0",
														"valueSize": 1
													}
												],
												"id": 137,
												"nodeType": "InlineAssembly",
												"src": "4469:63:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 138,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 135,
														"src": "4549:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 139,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4556:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4549:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 133,
												"id": 141,
												"nodeType": "Return",
												"src": "4542:15:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "3591:581:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "4198:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4198:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4197:17:0"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "4238:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 131,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4238:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4237:6:0"
									},
									"scope": 420,
									"src": "4178:387:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "5571:246:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 154,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5598:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$420",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$420",
																				"typeString": "library Address"
																			}
																		],
																		"id": 153,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5590:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 152,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5590:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5590:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 156,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5590:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 157,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 148,
																"src": "5615:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5590:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 159,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5623:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 151,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5582:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5582:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 161,
												"nodeType": "ExpressionStatement",
												"src": "5582:73:0"
											},
											{
												"assignments": [
													163,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 163,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 176,
														"src": "5669:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 162,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5669:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 170,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5717:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 164,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "5687:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5687:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 167,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 166,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 148,
																"src": "5709:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5687:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5687:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5668:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 172,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "5739:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 173,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5748:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 171,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5731:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5731:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "5731:78:0"
											}
										]
									},
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "4573:921:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5519:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5519:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5546:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5518:43:0"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5571:0:0"
									},
									"scope": 420,
									"src": "5500:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 193,
										"nodeType": "Block",
										"src": "6668:86:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 188,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "6699:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "6707:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6713:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 187,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															194,
															214
														],
														"referencedDeclaration": 214,
														"src": "6686:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6686:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 186,
												"id": 192,
												"nodeType": "Return",
												"src": "6679:67:0"
											}
										]
									},
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "5825:748:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "6601:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6601:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "6617:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 181,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6617:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6600:35:0"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "6654:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 184,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6654:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6653:14:0"
									},
									"scope": 420,
									"src": "6579:175:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 213,
										"nodeType": "Block",
										"src": "7135:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 207,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "7175:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 208,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "7183:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7189:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 210,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "7192:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 206,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															234,
															284
														],
														"referencedDeclaration": 284,
														"src": "7153:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7153:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 205,
												"id": 212,
												"nodeType": "Return",
												"src": "7146:59:0"
											}
										]
									},
									"documentation": {
										"id": 195,
										"nodeType": "StructuredDocumentation",
										"src": "6762:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "7016:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7016:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "7041:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 198,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7041:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "7069:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7069:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7005:97:0"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "7121:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 203,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7121:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7120:14:0"
									},
									"scope": 420,
									"src": "6984:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 233,
										"nodeType": "Block",
										"src": "7735:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 227,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "7775:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 228,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "7783:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 229,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "7789:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7796:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 226,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															234,
															284
														],
														"referencedDeclaration": 284,
														"src": "7753:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7753:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 225,
												"id": 232,
												"nodeType": "Return",
												"src": "7746:94:0"
											}
										]
									},
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "7221:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "7629:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7629:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "7654:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 218,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7654:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "7682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7618:84:0"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "7721:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 223,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7721:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7720:14:0"
									},
									"scope": 420,
									"src": "7588:260:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "8288:326:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 251,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "8315:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$420",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$420",
																				"typeString": "library Address"
																			}
																		],
																		"id": 250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8307:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 249,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8307:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8307:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "8307:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 254,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "8332:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8307:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8339:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 248,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8299:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8299:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 258,
												"nodeType": "ExpressionStatement",
												"src": "8299:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 261,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 237,
																	"src": "8410:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 260,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "8399:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8399:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8419:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 259,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8391:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8391:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "8391:60:0"
											},
											{
												"assignments": [
													267,
													269
												],
												"declarations": [
													{
														"constant": false,
														"id": 267,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 283,
														"src": "8465:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 266,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8465:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 269,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 283,
														"src": "8479:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 268,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8479:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 276,
												"initialValue": {
													"arguments": [
														{
															"id": 274,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "8532:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 270,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 237,
																"src": "8506:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "8506:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 273,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 272,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "8525:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "8506:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8506:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8464:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 278,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "8572:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 279,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "8581:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 280,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "8593:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 277,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "8555:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8555:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 247,
												"id": 282,
												"nodeType": "Return",
												"src": "8548:58:0"
											}
										]
									},
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "7856:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "8145:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8145:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "8170:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 238,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8170:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "8198:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8198:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "8222:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 242,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8222:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8134:121:0"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "8274:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 245,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8274:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8273:14:0"
									},
									"scope": 420,
									"src": "8104:510:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "8899:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 295,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "8936:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "8944:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8950:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 294,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															301,
															336
														],
														"referencedDeclaration": 336,
														"src": "8917:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8917:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 293,
												"id": 299,
												"nodeType": "Return",
												"src": "8910:80:0"
											}
										]
									},
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "8622:171:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "8827:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8827:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "8843:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 288,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8843:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8826:35:0"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "8885:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 291,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8885:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8884:14:0"
									},
									"scope": 420,
									"src": "8799:199:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "9352:233:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 315,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 304,
																	"src": "9382:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 314,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "9371:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9371:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9391:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 313,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9363:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9363:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "9363:67:0"
											},
											{
												"assignments": [
													321,
													323
												],
												"declarations": [
													{
														"constant": false,
														"id": 321,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 335,
														"src": "9444:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 320,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9444:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 323,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 335,
														"src": "9458:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 322,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "9458:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 328,
												"initialValue": {
													"arguments": [
														{
															"id": 326,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "9503:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 324,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "9485:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 325,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "9485:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9485:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9443:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 330,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "9543:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 331,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "9552:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 332,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "9564:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 329,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "9526:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9526:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 312,
												"id": 334,
												"nodeType": "Return",
												"src": "9519:58:0"
											}
										]
									},
									"documentation": {
										"id": 302,
										"nodeType": "StructuredDocumentation",
										"src": "9006:178:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "9228:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9228:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "9253:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 305,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9253:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "9281:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 307,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9281:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9217:97:0"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "9338:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 310,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9338:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9337:14:0"
									},
									"scope": 420,
									"src": "9190:395:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "9869:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 347,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "9908:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 348,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "9916:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 349,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9922:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 346,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															353,
															388
														],
														"referencedDeclaration": 388,
														"src": "9887:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9887:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 345,
												"id": 351,
												"nodeType": "Return",
												"src": "9880:84:0"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "9593:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "9802:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "9818:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 340,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9818:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9801:35:0"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "9855:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 343,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9855:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9854:14:0"
									},
									"scope": 420,
									"src": "9772:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 387,
										"nodeType": "Block",
										"src": "10325:237:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 367,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 356,
																	"src": "10355:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 366,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "10344:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10344:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10364:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 365,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10336:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10336:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 371,
												"nodeType": "ExpressionStatement",
												"src": "10336:69:0"
											},
											{
												"assignments": [
													373,
													375
												],
												"declarations": [
													{
														"constant": false,
														"id": 373,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 387,
														"src": "10419:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 372,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10419:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 375,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 387,
														"src": "10433:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 374,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "10433:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 380,
												"initialValue": {
													"arguments": [
														{
															"id": 378,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "10480:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 376,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "10460:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "10460:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10460:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10418:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 382,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "10520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 383,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "10529:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 384,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "10541:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 381,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "10503:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10503:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 364,
												"id": 386,
												"nodeType": "Return",
												"src": "10496:58:0"
											}
										]
									},
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "9980:180:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "10206:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10206:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "10231:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 357,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10231:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "10259:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 359,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10259:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10195:97:0"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "10311:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 362,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10311:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10310:14:0"
									},
									"scope": 420,
									"src": "10166:396:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 418,
										"nodeType": "Block",
										"src": "10954:548:0",
										"statements": [
											{
												"condition": {
													"id": 400,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 391,
													"src": "10969:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 416,
													"nodeType": "Block",
													"src": "11028:467:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 404,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 393,
																		"src": "11114:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "11114:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11134:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "11114:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 414,
																"nodeType": "Block",
																"src": "11429:55:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 411,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 395,
																					"src": "11455:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 410,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "11448:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 412,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11448:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 413,
																		"nodeType": "ExpressionStatement",
																		"src": "11448:20:0"
																	}
																]
															},
															"id": 415,
															"nodeType": "IfStatement",
															"src": "11110:374:0",
															"trueBody": {
																"id": 409,
																"nodeType": "Block",
																"src": "11137:286:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "11260:148:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "11283:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "11312:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "11306:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11306:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "11287:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "11356:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "11360:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "11352:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "11352:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "11373:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "11345:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11345:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "11345:44:0"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 393,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "11312:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 393,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "11360:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 408,
																		"nodeType": "InlineAssembly",
																		"src": "11251:157:0"
																	}
																]
															}
														}
													]
												},
												"id": 417,
												"nodeType": "IfStatement",
												"src": "10965:530:0",
												"trueBody": {
													"id": 403,
													"nodeType": "Block",
													"src": "10978:44:0",
													"statements": [
														{
															"expression": {
																"id": 401,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 393,
																"src": "11000:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 399,
															"id": 402,
															"nodeType": "Return",
															"src": "10993:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 389,
										"nodeType": "StructuredDocumentation",
										"src": "10570:214:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "10826:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 390,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10826:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "10849:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 392,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10849:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "10883:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 394,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10883:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10815:101:0"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "10940:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 397,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10940:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10939:14:0"
									},
									"scope": 420,
									"src": "10790:712:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1867,
							"src": "3568:7937:0"
						},
						{
							"id": 421,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "11655:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 422,
								"nodeType": "StructuredDocumentation",
								"src": "11682:287:0",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 431,
							"linearizedBaseContracts": [
								431
							],
							"name": "IERC165",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "11996:347:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 430,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "interfaceId",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "12376:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 424,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "12376:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12375:20:0"
									},
									"returnParameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "12419:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 427,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12419:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12418:6:0"
									},
									"scope": 431,
									"src": "12349:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1867,
							"src": "11971:457:0"
						},
						{
							"id": 432,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "12576:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 434,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 431,
										"src": "13224:7:0"
									},
									"id": 435,
									"nodeType": "InheritanceSpecifier",
									"src": "13224:7:0"
								}
							],
							"contractDependencies": [
								431
							],
							"contractKind": "contract",
							"documentation": {
								"id": 433,
								"nodeType": "StructuredDocumentation",
								"src": "12605:589:0",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 453,
							"linearizedBaseContracts": [
								453,
								431
							],
							"name": "ERC165",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										430
									],
									"body": {
										"id": 451,
										"nodeType": "Block",
										"src": "13394:66:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 444,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 438,
														"src": "13412:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 446,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "13432:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$431_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$431_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 445,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "13427:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13427:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$431",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "13427:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "13412:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 443,
												"id": 450,
												"nodeType": "Return",
												"src": "13405:47:0"
											}
										]
									},
									"documentation": {
										"id": 436,
										"nodeType": "StructuredDocumentation",
										"src": "13239:58:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 440,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13370:8:0"
									},
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "interfaceId",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "13330:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 437,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "13330:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13329:20:0"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "13388:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 441,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13388:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13387:6:0"
									},
									"scope": 453,
									"src": "13303:157:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1867,
							"src": "13196:267:0"
						},
						{
							"id": 454,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "13619:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 456,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 431,
										"src": "13721:7:0"
									},
									"id": 457,
									"nodeType": "InheritanceSpecifier",
									"src": "13721:7:0"
								}
							],
							"contractDependencies": [
								431
							],
							"contractKind": "interface",
							"documentation": {
								"id": 455,
								"nodeType": "StructuredDocumentation",
								"src": "13648:41:0",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 492,
							"linearizedBaseContracts": [
								492,
								431
							],
							"name": "IERC1155Receiver",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "13736:828:0",
										"text": "@dev Handles the receipt of a single ERC1155 token type. This function is\ncalled at the end of a `safeTransferFrom` after the balance has been updated.\nTo accept the transfer, this must return\n`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n(i.e. 0xf23a6e61, or its own function selector).\n@param operator The address which initiated the transfer (i.e. msg.sender)\n@param from The address which previously owned the token\n@param id The ID of the token being transferred\n@param value The amount of tokens being transferred\n@param data Additional data with no specified format\n@return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 473,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "14607:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14607:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "14634:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "14657:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14657:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "14678:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14678:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "14702:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 467,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14702:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14596:132:0"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "14747:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 470,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "14747:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14746:8:0"
									},
									"scope": 492,
									"src": "14570:185:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "14763:989:0",
										"text": "@dev Handles the receipt of a multiple ERC1155 token types. This function\nis called at the end of a `safeBatchTransferFrom` after the balances have\nbeen updated. To accept the transfer(s), this must return\n`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n(i.e. 0xbc197c81, or its own function selector).\n@param operator The address which initiated the batch transfer (i.e. msg.sender)\n@param from The address which previously owned the token\n@param ids An array containing ids of each token being transferred (order and length must match values array)\n@param values An array containing amounts of each token being transferred (order and length must match ids array)\n@param data Additional data with no specified format\n@return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 491,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "15800:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15800:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "15827:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15827:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "15850:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 479,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15850:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 480,
													"nodeType": "ArrayTypeName",
													"src": "15850:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "values",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "15883:25:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 482,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15883:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 483,
													"nodeType": "ArrayTypeName",
													"src": "15883:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "15919:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 485,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15919:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15789:156:0"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "15964:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 488,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "15964:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15963:8:0"
									},
									"scope": 492,
									"src": "15758:214:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1867,
							"src": "13691:2284:0"
						},
						{
							"id": 493,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "16115:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 495,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 431,
										"src": "16338:7:0"
									},
									"id": 496,
									"nodeType": "InheritanceSpecifier",
									"src": "16338:7:0"
								}
							],
							"contractDependencies": [
								431
							],
							"contractKind": "interface",
							"documentation": {
								"id": 494,
								"nodeType": "StructuredDocumentation",
								"src": "16144:170:0",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 612,
							"linearizedBaseContracts": [
								612,
								431
							],
							"name": "IERC1155",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "16353:123:0",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"id": 509,
									"name": "TransferSingle",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "16503:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16503:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "16529:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16529:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "16551:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16551:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "16571:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16571:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "16583:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16583:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16502:95:0"
									},
									"src": "16482:116:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 510,
										"nodeType": "StructuredDocumentation",
										"src": "16606:147:0",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"id": 524,
									"name": "TransferBatch",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "16789:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16789:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "16824:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16824:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "16855:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16855:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "16884:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 517,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16884:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 518,
													"nodeType": "ArrayTypeName",
													"src": "16884:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "16908:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 520,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16908:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 521,
													"nodeType": "ArrayTypeName",
													"src": "16908:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16778:153:0"
									},
									"src": "16759:173:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "16940:150:0",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"id": 533,
									"name": "ApprovalForAll",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "17117:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17117:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "17142:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17142:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "17168:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 530,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17168:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17116:66:0"
									},
									"src": "17096:87:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 534,
										"nodeType": "StructuredDocumentation",
										"src": "17191:349:0",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"id": 540,
									"name": "URI",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "17556:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 535,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "17556:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 538,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "17570:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17570:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17555:34:0"
									},
									"src": "17546:44:0"
								},
								{
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "17598:179:0",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 550,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "17802:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "17819:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17819:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17801:29:0"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "17854:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17854:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17853:9:0"
									},
									"scope": 612,
									"src": "17783:80:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 551,
										"nodeType": "StructuredDocumentation",
										"src": "17871:194:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 563,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "accounts",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "18095:27:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 552,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "18095:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 553,
													"nodeType": "ArrayTypeName",
													"src": "18095:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "18124:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 555,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "18124:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 556,
													"nodeType": "ArrayTypeName",
													"src": "18124:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18094:53:0"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "18198:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 559,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "18198:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 560,
													"nodeType": "ArrayTypeName",
													"src": "18198:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18197:18:0"
									},
									"scope": 612,
									"src": "18071:145:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "18224:256:0",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 571,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "18513:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18513:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "approved",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "18531:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 567,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18531:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18512:33:0"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18554:0:0"
									},
									"scope": 612,
									"src": "18486:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 572,
										"nodeType": "StructuredDocumentation",
										"src": "18563:139:0",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 581,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "18734:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18734:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "18751:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18751:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18733:35:0"
									},
									"returnParameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "18792:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 578,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18792:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18791:6:0"
									},
									"scope": 612,
									"src": "18708:90:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 582,
										"nodeType": "StructuredDocumentation",
										"src": "18806:571:0",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 595,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "19419:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19419:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "19442:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19442:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "19463:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19463:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "19484:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19484:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "19509:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 591,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19509:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19408:127:0"
									},
									"returnParameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19544:0:0"
									},
									"scope": 612,
									"src": "19383:162:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 596,
										"nodeType": "StructuredDocumentation",
										"src": "19553:400:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 611,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "20000:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "20023:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "20044:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 601,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "20044:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 602,
													"nodeType": "ArrayTypeName",
													"src": "20044:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "20077:26:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 604,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "20077:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 605,
													"nodeType": "ArrayTypeName",
													"src": "20077:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "20114:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 607,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "20114:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19989:151:0"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20149:0:0"
									},
									"scope": 612,
									"src": "19959:191:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1867,
							"src": "16316:3837:0"
						},
						{
							"id": 613,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "20337:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 615,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 612,
										"src": "20600:8:0"
									},
									"id": 616,
									"nodeType": "InheritanceSpecifier",
									"src": "20600:8:0"
								}
							],
							"contractDependencies": [
								431,
								612
							],
							"contractKind": "interface",
							"documentation": {
								"id": 614,
								"nodeType": "StructuredDocumentation",
								"src": "20366:199:0",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 625,
							"linearizedBaseContracts": [
								625,
								612,
								431
							],
							"name": "IERC1155MetadataURI",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 617,
										"nodeType": "StructuredDocumentation",
										"src": "20616:197:0",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 624,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "20832:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20831:12:0"
									},
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "20867:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 621,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "20867:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20866:15:0"
									},
									"scope": 625,
									"src": "20819:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1867,
							"src": "20567:318:0"
						},
						{
							"id": 626,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "21023:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 628,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "21304:7:0"
									},
									"id": 629,
									"nodeType": "InheritanceSpecifier",
									"src": "21304:7:0"
								},
								{
									"baseName": {
										"id": 630,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 453,
										"src": "21313:6:0"
									},
									"id": 631,
									"nodeType": "InheritanceSpecifier",
									"src": "21313:6:0"
								},
								{
									"baseName": {
										"id": 632,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 612,
										"src": "21321:8:0"
									},
									"id": 633,
									"nodeType": "InheritanceSpecifier",
									"src": "21321:8:0"
								},
								{
									"baseName": {
										"id": 634,
										"name": "IERC1155MetadataURI",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 625,
										"src": "21331:19:0"
									},
									"id": 635,
									"nodeType": "InheritanceSpecifier",
									"src": "21331:19:0"
								}
							],
							"contractDependencies": [
								21,
								431,
								453,
								612,
								625
							],
							"contractKind": "contract",
							"documentation": {
								"id": 627,
								"nodeType": "StructuredDocumentation",
								"src": "21062:220:0",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 1714,
							"linearizedBaseContracts": [
								1714,
								625,
								612,
								453,
								431,
								21
							],
							"name": "ERC1155",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 638,
									"libraryName": {
										"id": 636,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 420,
										"src": "21364:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "21358:26:0",
									"typeName": {
										"id": 637,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "21376:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 644,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 1714,
									"src": "21442:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 643,
										"keyType": {
											"id": 639,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "21450:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "21442:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueType": {
											"id": 642,
											"keyType": {
												"id": 640,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "21469:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "21461:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 641,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "21480:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 650,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nodeType": "VariableDeclaration",
									"scope": 1714,
									"src": "21567:71:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 649,
										"keyType": {
											"id": 645,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "21575:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "21567:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 648,
											"keyType": {
												"id": 646,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "21594:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "21586:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 647,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "21605:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 652,
									"mutability": "mutable",
									"name": "_uri",
									"nodeType": "VariableDeclaration",
									"scope": 1714,
									"src": "21762:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 651,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "21762:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 662,
										"nodeType": "Block",
										"src": "21868:32:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 659,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 655,
															"src": "21887:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 658,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1142,
														"src": "21879:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21879:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 661,
												"nodeType": "ExpressionStatement",
												"src": "21879:13:0"
											}
										]
									},
									"documentation": {
										"id": 653,
										"nodeType": "StructuredDocumentation",
										"src": "21790:40:0",
										"text": " @dev See {_setURI}."
									},
									"id": 663,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "uri_",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "21848:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 654,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "21848:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21847:20:0"
									},
									"returnParameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21868:0:0"
									},
									"scope": 1714,
									"src": "21836:64:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										430,
										452
									],
									"body": {
										"id": 693,
										"nodeType": "Block",
										"src": "22080:202:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 686,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 674,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 666,
																"src": "22111:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 676,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 612,
																			"src": "22131:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$612_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$612_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 675,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "22126:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 677,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22126:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$612",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 678,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "22126:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "22111:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 680,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 666,
																"src": "22169:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 682,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 625,
																			"src": "22189:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$625_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$625_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 681,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "22184:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 683,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22184:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$625",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 684,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "22184:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "22169:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "22111:110:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 689,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 666,
																"src": "22262:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 687,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "22238:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$1714_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 452,
															"src": "22238:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 690,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22238:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "22111:163:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 673,
												"id": 692,
												"nodeType": "Return",
												"src": "22091:183:0"
											}
										]
									},
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "21908:58:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 694,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 670,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 668,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 453,
												"src": "22048:6:0"
											},
											{
												"id": 669,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 431,
												"src": "22056:7:0"
											}
										],
										"src": "22039:25:0"
									},
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "interfaceId",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "21999:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 665,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "21999:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21998:20:0"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "22074:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 671,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "22074:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22073:6:0"
									},
									"scope": 1714,
									"src": "21972:310:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										624
									],
									"body": {
										"id": 705,
										"nodeType": "Block",
										"src": "22768:30:0",
										"statements": [
											{
												"expression": {
													"id": 703,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 652,
													"src": "22786:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 702,
												"id": 704,
												"nodeType": "Return",
												"src": "22779:11:0"
											}
										]
									},
									"documentation": {
										"id": 695,
										"nodeType": "StructuredDocumentation",
										"src": "22290:397:0",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 699,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "22735:8:0"
									},
									"parameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "22706:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22706:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22705:9:0"
									},
									"returnParameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "22753:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 700,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "22753:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22752:15:0"
									},
									"scope": 1714,
									"src": "22693:105:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										550
									],
									"body": {
										"id": 733,
										"nodeType": "Block",
										"src": "23044:136:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 718,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 709,
																"src": "23063:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23082:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 720,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "23074:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 719,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "23074:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 722,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23074:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "23063:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23086:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															},
															"value": "ERC1155: balance query for the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															}
														],
														"id": 717,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "23055:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23055:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 726,
												"nodeType": "ExpressionStatement",
												"src": "23055:77:0"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 727,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "23150:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 729,
														"indexExpression": {
															"id": 728,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "23160:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "23150:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 731,
													"indexExpression": {
														"id": 730,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 709,
														"src": "23164:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "23150:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 716,
												"id": 732,
												"nodeType": "Return",
												"src": "23143:29:0"
											}
										]
									},
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "22806:137:0",
										"text": " @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 713,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "23017:8:0"
									},
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "22968:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22968:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "22985:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22985:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22967:29:0"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "23035:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23035:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23034:9:0"
									},
									"scope": 1714,
									"src": "22949:231:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										563
									],
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "23525:345:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 749,
																	"name": "accounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 738,
																	"src": "23544:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 750,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "23544:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 751,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 741,
																	"src": "23563:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 752,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "23563:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23544:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
															"id": 754,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23575:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															},
															"value": "ERC1155: accounts and ids length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															}
														],
														"id": 748,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "23536:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23536:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 756,
												"nodeType": "ExpressionStatement",
												"src": "23536:83:0"
											},
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "batchBalances",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "23632:30:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 759,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "23632:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 760,
															"nodeType": "ArrayTypeName",
															"src": "23632:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 768,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 765,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 738,
																"src": "23679:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "23679:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 764,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "23665:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 762,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "23669:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 763,
															"nodeType": "ArrayTypeName",
															"src": "23669:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23665:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23632:63:0"
											},
											{
												"body": {
													"id": 793,
													"nodeType": "Block",
													"src": "23754:76:0",
													"statements": [
														{
															"expression": {
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 780,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 761,
																		"src": "23769:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 782,
																	"indexExpression": {
																		"id": 781,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 770,
																		"src": "23783:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "23769:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 784,
																				"name": "accounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 738,
																				"src": "23798:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 786,
																			"indexExpression": {
																				"id": 785,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 770,
																				"src": "23807:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "23798:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 787,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 741,
																				"src": "23811:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 789,
																			"indexExpression": {
																				"id": 788,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 770,
																				"src": "23815:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "23811:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 783,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 734,
																		"src": "23788:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23788:30:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23769:49:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 792,
															"nodeType": "ExpressionStatement",
															"src": "23769:49:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 773,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "23728:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 774,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "23732:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 775,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "23732:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23728:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 794,
												"initializationExpression": {
													"assignments": [
														770
													],
													"declarations": [
														{
															"constant": false,
															"id": 770,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 794,
															"src": "23713:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 769,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "23713:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 772,
													"initialValue": {
														"hexValue": "30",
														"id": 771,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "23725:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "23713:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 778,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "23749:3:0",
														"subExpression": {
															"id": 777,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "23751:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 779,
													"nodeType": "ExpressionStatement",
													"src": "23749:3:0"
												},
												"nodeType": "ForStatement",
												"src": "23708:122:0"
											},
											{
												"expression": {
													"id": 795,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 761,
													"src": "23849:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 747,
												"id": 796,
												"nodeType": "Return",
												"src": "23842:20:0"
											}
										]
									},
									"documentation": {
										"id": 735,
										"nodeType": "StructuredDocumentation",
										"src": "23188:152:0",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 743,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "23475:8:0"
									},
									"parameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "accounts",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "23370:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 736,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "23370:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 737,
													"nodeType": "ArrayTypeName",
													"src": "23370:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "23397:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 739,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "23397:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 740,
													"nodeType": "ArrayTypeName",
													"src": "23397:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23369:49:0"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "23502:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 744,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "23502:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 745,
													"nodeType": "ArrayTypeName",
													"src": "23502:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23501:18:0"
									},
									"scope": 1714,
									"src": "23346:524:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										571
									],
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "24027:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 808,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "24057:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24057:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 810,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "24071:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 811,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "24081:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 807,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1538,
														"src": "24038:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24038:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 813,
												"nodeType": "ExpressionStatement",
												"src": "24038:52:0"
											}
										]
									},
									"documentation": {
										"id": 799,
										"nodeType": "StructuredDocumentation",
										"src": "23878:59:0",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 805,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "24018:8:0"
									},
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "23970:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23970:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "approved",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "23988:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 802,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23988:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23969:33:0"
									},
									"returnParameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24027:0:0"
									},
									"scope": 1714,
									"src": "23943:155:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										581
									],
									"body": {
										"id": 832,
										"nodeType": "Block",
										"src": "24275:63:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 826,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "24293:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 828,
														"indexExpression": {
															"id": 827,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "24312:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "24293:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 830,
													"indexExpression": {
														"id": 829,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "24321:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "24293:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 825,
												"id": 831,
												"nodeType": "Return",
												"src": "24286:44:0"
											}
										]
									},
									"documentation": {
										"id": 816,
										"nodeType": "StructuredDocumentation",
										"src": "24106:58:0",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 833,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 822,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "24251:8:0"
									},
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "24196:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24196:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "24213:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24195:35:0"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "24269:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 823,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "24269:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24268:6:0"
									},
									"scope": 1714,
									"src": "24170:168:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										595
									],
									"body": {
										"id": 870,
										"nodeType": "Block",
										"src": "24585:226:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 849,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 836,
																	"src": "24618:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 850,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 11,
																		"src": "24626:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24626:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "24618:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 854,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 836,
																		"src": "24659:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 855,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 11,
																			"src": "24665:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24665:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 853,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 833,
																	"src": "24642:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24642:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "24618:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24693:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															},
															"value": "ERC1155: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															}
														],
														"id": 848,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "24596:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24596:151:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 861,
												"nodeType": "ExpressionStatement",
												"src": "24596:151:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 863,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "24776:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 864,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 838,
															"src": "24782:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 865,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "24786:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 866,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "24790:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 867,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "24798:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 862,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1005,
														"src": "24758:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24758:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 869,
												"nodeType": "ExpressionStatement",
												"src": "24758:45:0"
											}
										]
									},
									"documentation": {
										"id": 834,
										"nodeType": "StructuredDocumentation",
										"src": "24346:58:0",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 871,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 846,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "24576:8:0"
									},
									"parameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "24446:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 835,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24446:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "24469:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "24490:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24490:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "24511:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24511:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "24536:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 843,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "24536:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24435:125:0"
									},
									"returnParameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24585:0:0"
									},
									"scope": 1714,
									"src": "24410:401:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										611
									],
									"body": {
										"id": 910,
										"nodeType": "Block",
										"src": "25088:242:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 898,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 889,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 874,
																	"src": "25121:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 890,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 11,
																		"src": "25129:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "25129:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "25121:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 894,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 874,
																		"src": "25162:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 895,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 11,
																			"src": "25168:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "25168:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 893,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 833,
																	"src": "25145:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25145:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "25121:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25196:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															},
															"value": "ERC1155: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															}
														],
														"id": 888,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "25099:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25099:160:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 901,
												"nodeType": "ExpressionStatement",
												"src": "25099:160:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 903,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "25293:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 904,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "25299:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 905,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "25303:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 906,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 882,
															"src": "25308:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 907,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "25317:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 902,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "25270:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25270:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 909,
												"nodeType": "ExpressionStatement",
												"src": "25270:52:0"
											}
										]
									},
									"documentation": {
										"id": 872,
										"nodeType": "StructuredDocumentation",
										"src": "24819:63:0",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 911,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 886,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "25079:8:0"
									},
									"parameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "24929:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24929:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "24952:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24952:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "24973:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 877,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "24973:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 878,
													"nodeType": "ArrayTypeName",
													"src": "24973:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "25004:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 880,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "25004:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 881,
													"nodeType": "ArrayTypeName",
													"src": "25004:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "25039:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 883,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "25039:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24918:145:0"
									},
									"returnParameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25088:0:0"
									},
									"scope": 1714,
									"src": "24888:442:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1004,
										"nodeType": "Block",
										"src": "25963:651:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 926,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 916,
																"src": "25982:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 929,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "25996:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 928,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "25988:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 927,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "25988:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 930,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25988:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "25982:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26000:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 925,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "25974:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25974:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 934,
												"nodeType": "ExpressionStatement",
												"src": "25974:66:0"
											},
											{
												"assignments": [
													936
												],
												"declarations": [
													{
														"constant": false,
														"id": 936,
														"mutability": "mutable",
														"name": "operator",
														"nodeType": "VariableDeclaration",
														"scope": 1004,
														"src": "26053:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 935,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "26053:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 939,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 937,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "26072:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26072:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26053:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 941,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "26118:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 942,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "26128:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 943,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "26134:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 945,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 918,
																	"src": "26156:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 944,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1713,
																"src": "26138:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26138:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 948,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 920,
																	"src": "26179:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 947,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1713,
																"src": "26161:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26161:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 950,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "26188:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 940,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1557,
														"src": "26097:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26097:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 952,
												"nodeType": "ExpressionStatement",
												"src": "26097:96:0"
											},
											{
												"assignments": [
													954
												],
												"declarations": [
													{
														"constant": false,
														"id": 954,
														"mutability": "mutable",
														"name": "fromBalance",
														"nodeType": "VariableDeclaration",
														"scope": 1004,
														"src": "26206:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 953,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26206:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 960,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 955,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "26228:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 957,
														"indexExpression": {
															"id": 956,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "26238:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "26228:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 959,
													"indexExpression": {
														"id": 958,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "26242:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "26228:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26206:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 962,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 954,
																"src": "26266:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 963,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 920,
																"src": "26281:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26266:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26289:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															},
															"value": "ERC1155: insufficient balance for transfer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															}
														],
														"id": 961,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "26258:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26258:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 967,
												"nodeType": "ExpressionStatement",
												"src": "26258:76:0"
											},
											{
												"id": 978,
												"nodeType": "UncheckedBlock",
												"src": "26345:79:0",
												"statements": [
													{
														"expression": {
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 968,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 644,
																		"src": "26370:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 971,
																	"indexExpression": {
																		"id": 969,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 918,
																		"src": "26380:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "26370:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 972,
																"indexExpression": {
																	"id": 970,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 914,
																	"src": "26384:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "26370:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 975,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 973,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 954,
																	"src": "26392:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 974,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 920,
																	"src": "26406:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "26392:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26370:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 977,
														"nodeType": "ExpressionStatement",
														"src": "26370:42:0"
													}
												]
											},
											{
												"expression": {
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 979,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 644,
																"src": "26434:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 982,
															"indexExpression": {
																"id": 980,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 918,
																"src": "26444:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "26434:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 983,
														"indexExpression": {
															"id": 981,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "26448:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "26434:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 984,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 920,
														"src": "26455:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26434:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 986,
												"nodeType": "ExpressionStatement",
												"src": "26434:27:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 988,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "26494:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 989,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "26504:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 990,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "26510:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 991,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "26514:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 992,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "26518:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 987,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 509,
														"src": "26479:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26479:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 994,
												"nodeType": "EmitStatement",
												"src": "26474:51:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 996,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "26569:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 997,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "26579:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 998,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "26585:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 999,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "26589:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1000,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "26593:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1001,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "26601:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 995,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1620,
														"src": "26538:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26538:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1003,
												"nodeType": "ExpressionStatement",
												"src": "26538:68:0"
											}
										]
									},
									"documentation": {
										"id": 912,
										"nodeType": "StructuredDocumentation",
										"src": "25338:450:0",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 1005,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "25831:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25831:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "25854:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 915,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "25875:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "25896:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25896:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "25921:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 921,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "25921:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25820:125:0"
									},
									"returnParameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25963:0:0"
									},
									"scope": 1714,
									"src": "25794:820:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1130,
										"nodeType": "Block",
										"src": "27166:880:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1022,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1013,
																	"src": "27185:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1023,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "27185:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1024,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1016,
																	"src": "27199:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "27199:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27185:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 1027,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27215:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 1021,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "27177:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27177:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1029,
												"nodeType": "ExpressionStatement",
												"src": "27177:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1031,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1010,
																"src": "27277:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1034,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27291:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "27283:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1032,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "27283:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27283:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "27277:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27295:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 1030,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "27269:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27269:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1039,
												"nodeType": "ExpressionStatement",
												"src": "27269:66:0"
											},
											{
												"assignments": [
													1041
												],
												"declarations": [
													{
														"constant": false,
														"id": 1041,
														"mutability": "mutable",
														"name": "operator",
														"nodeType": "VariableDeclaration",
														"scope": 1130,
														"src": "27348:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1040,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "27348:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1044,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1042,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "27367:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27367:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27348:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1046,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "27413:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1047,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "27423:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1048,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "27429:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1049,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "27433:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1050,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "27438:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1051,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1018,
															"src": "27447:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1045,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1557,
														"src": "27392:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27392:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1053,
												"nodeType": "ExpressionStatement",
												"src": "27392:60:0"
											},
											{
												"body": {
													"id": 1111,
													"nodeType": "Block",
													"src": "27506:380:0",
													"statements": [
														{
															"assignments": [
																1066
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1066,
																	"mutability": "mutable",
																	"name": "id",
																	"nodeType": "VariableDeclaration",
																	"scope": 1111,
																	"src": "27521:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1065,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "27521:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1070,
															"initialValue": {
																"baseExpression": {
																	"id": 1067,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1013,
																	"src": "27534:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1069,
																"indexExpression": {
																	"id": 1068,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1055,
																	"src": "27538:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "27534:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "27521:19:0"
														},
														{
															"assignments": [
																1072
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1072,
																	"mutability": "mutable",
																	"name": "amount",
																	"nodeType": "VariableDeclaration",
																	"scope": 1111,
																	"src": "27555:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1071,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "27555:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1076,
															"initialValue": {
																"baseExpression": {
																	"id": 1073,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1016,
																	"src": "27572:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1075,
																"indexExpression": {
																	"id": 1074,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1055,
																	"src": "27580:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "27572:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "27555:27:0"
														},
														{
															"assignments": [
																1078
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1078,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nodeType": "VariableDeclaration",
																	"scope": 1111,
																	"src": "27599:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1077,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "27599:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1084,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1079,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 644,
																		"src": "27621:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1081,
																	"indexExpression": {
																		"id": 1080,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1066,
																		"src": "27631:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "27621:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1083,
																"indexExpression": {
																	"id": 1082,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1008,
																	"src": "27635:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "27621:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "27599:41:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1088,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1086,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1078,
																			"src": "27663:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1087,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1072,
																			"src": "27678:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "27663:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
																		"id": 1089,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27686:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		},
																		"value": "ERC1155: insufficient balance for transfer"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		}
																	],
																	"id": 1085,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "27655:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1090,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27655:76:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1091,
															"nodeType": "ExpressionStatement",
															"src": "27655:76:0"
														},
														{
															"id": 1102,
															"nodeType": "UncheckedBlock",
															"src": "27746:87:0",
															"statements": [
																{
																	"expression": {
																		"id": 1100,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 1092,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 644,
																					"src": "27775:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 1095,
																				"indexExpression": {
																					"id": 1093,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1066,
																					"src": "27785:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "27775:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1096,
																			"indexExpression": {
																				"id": 1094,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1008,
																				"src": "27789:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "27775:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1099,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1097,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1078,
																				"src": "27797:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1098,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1072,
																				"src": "27811:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "27797:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "27775:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1101,
																	"nodeType": "ExpressionStatement",
																	"src": "27775:42:0"
																}
															]
														},
														{
															"expression": {
																"id": 1109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1103,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 644,
																			"src": "27847:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 1106,
																		"indexExpression": {
																			"id": 1104,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1066,
																			"src": "27857:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "27847:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1107,
																	"indexExpression": {
																		"id": 1105,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1010,
																		"src": "27861:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "27847:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1108,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1072,
																	"src": "27868:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "27847:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1110,
															"nodeType": "ExpressionStatement",
															"src": "27847:27:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1058,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1055,
														"src": "27485:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1059,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "27489:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1060,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "27489:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27485:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1112,
												"initializationExpression": {
													"assignments": [
														1055
													],
													"declarations": [
														{
															"constant": false,
															"id": 1055,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1112,
															"src": "27470:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1054,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "27470:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1057,
													"initialValue": {
														"hexValue": "30",
														"id": 1056,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "27482:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "27470:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1063,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "27501:3:0",
														"subExpression": {
															"id": 1062,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "27503:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1064,
													"nodeType": "ExpressionStatement",
													"src": "27501:3:0"
												},
												"nodeType": "ForStatement",
												"src": "27465:421:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1114,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "27917:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1115,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "27927:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1116,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "27933:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1117,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "27937:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1118,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "27942:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1113,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "27903:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27903:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1120,
												"nodeType": "EmitStatement",
												"src": "27898:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1122,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "27999:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1123,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "28009:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1124,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "28015:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1125,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "28019:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1126,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "28024:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1127,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1018,
															"src": "28033:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1121,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1685,
														"src": "27963:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27963:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1129,
												"nodeType": "ExpressionStatement",
												"src": "27963:75:0"
											}
										]
									},
									"documentation": {
										"id": 1006,
										"nodeType": "StructuredDocumentation",
										"src": "26622:344:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 1131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "27014:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "27037:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27037:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "27058:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1011,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "27058:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1012,
													"nodeType": "ArrayTypeName",
													"src": "27058:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "27089:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1014,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "27089:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1015,
													"nodeType": "ArrayTypeName",
													"src": "27089:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "27124:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1017,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "27124:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27003:145:0"
									},
									"returnParameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27166:0:0"
									},
									"scope": 1714,
									"src": "26972:1074:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1141,
										"nodeType": "Block",
										"src": "28946:32:0",
										"statements": [
											{
												"expression": {
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1137,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 652,
														"src": "28957:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1138,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1134,
														"src": "28964:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "28957:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1140,
												"nodeType": "ExpressionStatement",
												"src": "28957:13:0"
											}
										]
									},
									"documentation": {
										"id": 1132,
										"nodeType": "StructuredDocumentation",
										"src": "28054:830:0",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 1142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "newuri",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "28907:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1133,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "28907:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28906:22:0"
									},
									"returnParameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28946:0:0"
									},
									"scope": 1714,
									"src": "28890:88:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1216,
										"nodeType": "Block",
										"src": "29498:435:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1155,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1145,
																"src": "29517:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29531:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1157,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "29523:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1156,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "29523:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1159,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29523:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "29517:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29535:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 1154,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "29509:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29509:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1163,
												"nodeType": "ExpressionStatement",
												"src": "29509:62:0"
											},
											{
												"assignments": [
													1165
												],
												"declarations": [
													{
														"constant": false,
														"id": 1165,
														"mutability": "mutable",
														"name": "operator",
														"nodeType": "VariableDeclaration",
														"scope": 1216,
														"src": "29584:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1164,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "29584:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1168,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1166,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "29603:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29603:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29584:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1170,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "29649:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29667:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1172,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29659:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1171,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29659:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29659:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1175,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "29671:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1177,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1147,
																	"src": "29693:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1176,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1713,
																"src": "29675:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29675:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 1180,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1149,
																	"src": "29716:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1179,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1713,
																"src": "29698:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 1181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29698:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1182,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "29725:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1169,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1557,
														"src": "29628:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29628:102:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1184,
												"nodeType": "ExpressionStatement",
												"src": "29628:102:0"
											},
											{
												"expression": {
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1185,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 644,
																"src": "29743:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 1188,
															"indexExpression": {
																"id": 1186,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1147,
																"src": "29753:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "29743:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1189,
														"indexExpression": {
															"id": 1187,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "29757:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "29743:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1190,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1149,
														"src": "29764:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29743:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1192,
												"nodeType": "ExpressionStatement",
												"src": "29743:27:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1194,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "29801:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29819:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1196,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29811:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1195,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29811:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1198,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29811:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1199,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "29823:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1200,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "29827:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1201,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "29831:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1193,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 509,
														"src": "29786:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29786:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1203,
												"nodeType": "EmitStatement",
												"src": "29781:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1205,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "29882:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29900:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29892:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1206,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29892:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29892:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1210,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "29904:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1211,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "29908:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1212,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "29912:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1213,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "29920:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1204,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1620,
														"src": "29851:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29851:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1215,
												"nodeType": "ExpressionStatement",
												"src": "29851:74:0"
											}
										]
									},
									"documentation": {
										"id": 1143,
										"nodeType": "StructuredDocumentation",
										"src": "28986:372:0",
										"text": " @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 1217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "29389:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29389:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "29410:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29410:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "29431:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29431:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "29456:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1150,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "29456:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29378:102:0"
									},
									"returnParameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29498:0:0"
									},
									"scope": 1714,
									"src": "29364:569:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1315,
										"nodeType": "Block",
										"src": "30449:576:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1232,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1220,
																"src": "30468:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1235,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30482:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "30474:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1233,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "30474:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1236,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30474:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "30468:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1238,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30486:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 1231,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "30460:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30460:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1240,
												"nodeType": "ExpressionStatement",
												"src": "30460:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1242,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1223,
																	"src": "30541:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "30541:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1244,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1226,
																	"src": "30555:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "30555:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30541:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30571:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 1241,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "30533:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30533:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1249,
												"nodeType": "ExpressionStatement",
												"src": "30533:81:0"
											},
											{
												"assignments": [
													1251
												],
												"declarations": [
													{
														"constant": false,
														"id": 1251,
														"mutability": "mutable",
														"name": "operator",
														"nodeType": "VariableDeclaration",
														"scope": 1315,
														"src": "30627:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1250,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "30627:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1254,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1252,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "30646:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30646:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30627:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1256,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "30692:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30710:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1258,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30702:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1257,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30702:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1260,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30702:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1261,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1220,
															"src": "30714:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1262,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "30718:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1263,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1226,
															"src": "30723:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1264,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "30732:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1255,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1557,
														"src": "30671:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30671:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1266,
												"nodeType": "ExpressionStatement",
												"src": "30671:66:0"
											},
											{
												"body": {
													"id": 1290,
													"nodeType": "Block",
													"src": "30791:62:0",
													"statements": [
														{
															"expression": {
																"id": 1288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1278,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 644,
																			"src": "30806:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 1283,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 1279,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1223,
																				"src": "30816:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1281,
																			"indexExpression": {
																				"id": 1280,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1268,
																				"src": "30820:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "30816:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "30806:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1284,
																	"indexExpression": {
																		"id": 1282,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1220,
																		"src": "30824:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "30806:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1285,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1226,
																		"src": "30831:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1287,
																	"indexExpression": {
																		"id": 1286,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1268,
																		"src": "30839:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "30831:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30806:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1289,
															"nodeType": "ExpressionStatement",
															"src": "30806:35:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1271,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1268,
														"src": "30770:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1272,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "30774:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1273,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "30774:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30770:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1291,
												"initializationExpression": {
													"assignments": [
														1268
													],
													"declarations": [
														{
															"constant": false,
															"id": 1268,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1291,
															"src": "30755:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1267,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "30755:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1270,
													"initialValue": {
														"hexValue": "30",
														"id": 1269,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "30767:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "30755:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1276,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "30786:3:0",
														"subExpression": {
															"id": 1275,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1268,
															"src": "30786:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1277,
													"nodeType": "ExpressionStatement",
													"src": "30786:3:0"
												},
												"nodeType": "ForStatement",
												"src": "30750:103:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1293,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "30884:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30902:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1295,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30894:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1294,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30894:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1297,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30894:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1298,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1220,
															"src": "30906:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1299,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "30910:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1300,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1226,
															"src": "30915:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1292,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "30870:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30870:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1302,
												"nodeType": "EmitStatement",
												"src": "30865:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1304,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "30972:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30990:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30982:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1305,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30982:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30982:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1309,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1220,
															"src": "30994:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1310,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "30998:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1311,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1226,
															"src": "31003:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1312,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "31012:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1303,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1685,
														"src": "30936:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30936:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1314,
												"nodeType": "ExpressionStatement",
												"src": "30936:81:0"
											}
										]
									},
									"documentation": {
										"id": 1218,
										"nodeType": "StructuredDocumentation",
										"src": "29941:342:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 1316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerBatch",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "30320:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30320:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "30341:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1221,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "30341:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1222,
													"nodeType": "ArrayTypeName",
													"src": "30341:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "30372:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1224,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "30372:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1225,
													"nodeType": "ArrayTypeName",
													"src": "30372:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "30407:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1227,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "30407:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30309:122:0"
									},
									"returnParameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30449:0:0"
									},
									"scope": 1714,
									"src": "30289:736:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1394,
										"nodeType": "Block",
										"src": "31383:540:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1327,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1319,
																"src": "31402:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31418:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "31410:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1328,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "31410:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1331,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31410:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "31402:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1333,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31422:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 1326,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "31394:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31394:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1335,
												"nodeType": "ExpressionStatement",
												"src": "31394:66:0"
											},
											{
												"assignments": [
													1337
												],
												"declarations": [
													{
														"constant": false,
														"id": 1337,
														"mutability": "mutable",
														"name": "operator",
														"nodeType": "VariableDeclaration",
														"scope": 1394,
														"src": "31473:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1336,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "31473:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1340,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1338,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "31492:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31492:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31473:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1342,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1337,
															"src": "31538:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1343,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1319,
															"src": "31548:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31562:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1345,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31554:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1344,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "31554:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31554:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1349,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1321,
																	"src": "31584:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1348,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1713,
																"src": "31566:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 1350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31566:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 1352,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1323,
																	"src": "31607:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1351,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1713,
																"src": "31589:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 1353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31589:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31616:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1341,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1557,
														"src": "31517:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31517:102:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1356,
												"nodeType": "ExpressionStatement",
												"src": "31517:102:0"
											},
											{
												"assignments": [
													1358
												],
												"declarations": [
													{
														"constant": false,
														"id": 1358,
														"mutability": "mutable",
														"name": "fromBalance",
														"nodeType": "VariableDeclaration",
														"scope": 1394,
														"src": "31632:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1357,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "31632:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1364,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1359,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "31654:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 1361,
														"indexExpression": {
															"id": 1360,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1321,
															"src": "31664:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "31654:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1363,
													"indexExpression": {
														"id": 1362,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "31668:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "31654:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31632:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1366,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1358,
																"src": "31692:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1367,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1323,
																"src": "31707:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31692:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 1369,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31715:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															},
															"value": "ERC1155: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															}
														],
														"id": 1365,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "31684:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31684:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1371,
												"nodeType": "ExpressionStatement",
												"src": "31684:70:0"
											},
											{
												"id": 1382,
												"nodeType": "UncheckedBlock",
												"src": "31765:79:0",
												"statements": [
													{
														"expression": {
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1372,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 644,
																		"src": "31790:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1375,
																	"indexExpression": {
																		"id": 1373,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1321,
																		"src": "31800:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "31790:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1376,
																"indexExpression": {
																	"id": 1374,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1319,
																	"src": "31804:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "31790:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1379,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1377,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1358,
																	"src": "31812:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1378,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1323,
																	"src": "31826:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31812:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31790:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1381,
														"nodeType": "ExpressionStatement",
														"src": "31790:42:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1384,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1337,
															"src": "31876:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1385,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1319,
															"src": "31886:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31900:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1387,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31892:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1386,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "31892:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1389,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31892:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1390,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1321,
															"src": "31904:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1391,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1323,
															"src": "31908:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1383,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 509,
														"src": "31861:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31861:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1393,
												"nodeType": "EmitStatement",
												"src": "31856:59:0"
											}
										]
									},
									"documentation": {
										"id": 1317,
										"nodeType": "StructuredDocumentation",
										"src": "31033:236:0",
										"text": " @dev Destroys `amount` tokens of token type `id` from `from`\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `amount` tokens of token type `id`."
									},
									"id": 1395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "31300:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31300:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "31323:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31323:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "31344:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31344:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31289:76:0"
									},
									"returnParameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31383:0:0"
									},
									"scope": 1714,
									"src": "31275:648:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1505,
										"nodeType": "Block",
										"src": "32259:758:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1408,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1398,
																"src": "32278:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1411,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32294:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "32286:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1409,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "32286:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32286:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "32278:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1414,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32298:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 1407,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "32270:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32270:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1416,
												"nodeType": "ExpressionStatement",
												"src": "32270:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1418,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1401,
																	"src": "32355:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "32355:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1420,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "32369:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "32369:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32355:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 1423,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32385:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 1417,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "32347:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32347:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1425,
												"nodeType": "ExpressionStatement",
												"src": "32347:81:0"
											},
											{
												"assignments": [
													1427
												],
												"declarations": [
													{
														"constant": false,
														"id": 1427,
														"mutability": "mutable",
														"name": "operator",
														"nodeType": "VariableDeclaration",
														"scope": 1505,
														"src": "32441:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1426,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "32441:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1430,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1428,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "32460:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32460:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32441:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1432,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1427,
															"src": "32506:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1433,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1398,
															"src": "32516:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32530:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1435,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32522:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1434,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "32522:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32522:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1438,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1401,
															"src": "32534:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1439,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1404,
															"src": "32539:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1440,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32548:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1431,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1557,
														"src": "32485:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32485:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1442,
												"nodeType": "ExpressionStatement",
												"src": "32485:66:0"
											},
											{
												"body": {
													"id": 1492,
													"nodeType": "Block",
													"src": "32605:332:0",
													"statements": [
														{
															"assignments": [
																1455
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1455,
																	"mutability": "mutable",
																	"name": "id",
																	"nodeType": "VariableDeclaration",
																	"scope": 1492,
																	"src": "32620:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1454,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "32620:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1459,
															"initialValue": {
																"baseExpression": {
																	"id": 1456,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1401,
																	"src": "32633:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1458,
																"indexExpression": {
																	"id": 1457,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1444,
																	"src": "32637:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "32633:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "32620:19:0"
														},
														{
															"assignments": [
																1461
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1461,
																	"mutability": "mutable",
																	"name": "amount",
																	"nodeType": "VariableDeclaration",
																	"scope": 1492,
																	"src": "32654:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1460,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "32654:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1465,
															"initialValue": {
																"baseExpression": {
																	"id": 1462,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "32671:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1464,
																"indexExpression": {
																	"id": 1463,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1444,
																	"src": "32679:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "32671:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "32654:27:0"
														},
														{
															"assignments": [
																1467
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1467,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nodeType": "VariableDeclaration",
																	"scope": 1492,
																	"src": "32698:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1466,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "32698:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1473,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1468,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 644,
																		"src": "32720:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1470,
																	"indexExpression": {
																		"id": 1469,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1455,
																		"src": "32730:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "32720:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1472,
																"indexExpression": {
																	"id": 1471,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1398,
																	"src": "32734:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "32720:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "32698:41:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1477,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1475,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1467,
																			"src": "32762:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1476,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1461,
																			"src": "32777:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "32762:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
																		"id": 1478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32785:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		},
																		"value": "ERC1155: burn amount exceeds balance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		}
																	],
																	"id": 1474,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "32754:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1479,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32754:70:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1480,
															"nodeType": "ExpressionStatement",
															"src": "32754:70:0"
														},
														{
															"id": 1491,
															"nodeType": "UncheckedBlock",
															"src": "32839:87:0",
															"statements": [
																{
																	"expression": {
																		"id": 1489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 1481,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 644,
																					"src": "32868:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 1484,
																				"indexExpression": {
																					"id": 1482,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1455,
																					"src": "32878:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "32868:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1485,
																			"indexExpression": {
																				"id": 1483,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1398,
																				"src": "32882:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "32868:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1488,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1486,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1467,
																				"src": "32890:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1487,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1461,
																				"src": "32904:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "32890:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "32868:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1490,
																	"nodeType": "ExpressionStatement",
																	"src": "32868:42:0"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1447,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1444,
														"src": "32584:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1448,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1401,
															"src": "32588:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1449,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "32588:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32584:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1493,
												"initializationExpression": {
													"assignments": [
														1444
													],
													"declarations": [
														{
															"constant": false,
															"id": 1444,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1493,
															"src": "32569:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1443,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "32569:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1446,
													"initialValue": {
														"hexValue": "30",
														"id": 1445,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "32581:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "32569:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "32600:3:0",
														"subExpression": {
															"id": 1451,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1444,
															"src": "32600:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1453,
													"nodeType": "ExpressionStatement",
													"src": "32600:3:0"
												},
												"nodeType": "ForStatement",
												"src": "32564:373:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1495,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1427,
															"src": "32968:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1496,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1398,
															"src": "32978:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32992:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1498,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32984:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1497,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "32984:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1500,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32984:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1501,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1401,
															"src": "32996:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1502,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1404,
															"src": "33001:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1494,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "32954:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32954:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1504,
												"nodeType": "EmitStatement",
												"src": "32949:60:0"
											}
										]
									},
									"documentation": {
										"id": 1396,
										"nodeType": "StructuredDocumentation",
										"src": "31931:189:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Requirements:\n - `ids` and `amounts` must have the same length."
									},
									"id": 1506,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "32156:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32156:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "32179:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1399,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "32179:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1400,
													"nodeType": "ArrayTypeName",
													"src": "32179:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "32210:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1402,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "32210:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1403,
													"nodeType": "ArrayTypeName",
													"src": "32210:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32145:96:0"
									},
									"returnParameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32259:0:0"
									},
									"scope": 1714,
									"src": "32126:891:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1537,
										"nodeType": "Block",
										"src": "33286:204:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1517,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1509,
																"src": "33305:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1518,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1511,
																"src": "33314:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "33305:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
															"id": 1520,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33324:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															},
															"value": "ERC1155: setting approval status for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															}
														],
														"id": 1516,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "33297:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33297:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1522,
												"nodeType": "ExpressionStatement",
												"src": "33297:71:0"
											},
											{
												"expression": {
													"id": 1529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1523,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 650,
																"src": "33379:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1526,
															"indexExpression": {
																"id": 1524,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1509,
																"src": "33398:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "33379:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1527,
														"indexExpression": {
															"id": 1525,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1511,
															"src": "33405:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "33379:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1528,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1513,
														"src": "33417:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "33379:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1530,
												"nodeType": "ExpressionStatement",
												"src": "33379:46:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1532,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1509,
															"src": "33456:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1533,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1511,
															"src": "33463:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1534,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "33473:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1531,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "33441:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33441:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1536,
												"nodeType": "EmitStatement",
												"src": "33436:46:0"
											}
										]
									},
									"documentation": {
										"id": 1507,
										"nodeType": "StructuredDocumentation",
										"src": "33025:128:0",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."
									},
									"id": 1538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "33197:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33197:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "33221:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "approved",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "33248:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1512,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "33248:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33186:82:0"
									},
									"returnParameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33286:0:0"
									},
									"scope": 1714,
									"src": "33159:331:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1556,
										"nodeType": "Block",
										"src": "34665:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1539,
										"nodeType": "StructuredDocumentation",
										"src": "33498:942:0",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1557,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 1557,
												"src": "34486:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34486:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1557,
												"src": "34513:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34513:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1557,
												"src": "34536:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34536:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"scope": 1557,
												"src": "34557:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1546,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "34557:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1547,
													"nodeType": "ArrayTypeName",
													"src": "34557:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1557,
												"src": "34588:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1549,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "34588:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1550,
													"nodeType": "ArrayTypeName",
													"src": "34588:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1557,
												"src": "34623:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1552,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "34623:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34475:172:0"
									},
									"returnParameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34665:0:0"
									},
									"scope": 1714,
									"src": "34446:221:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1619,
										"nodeType": "Block",
										"src": "34875:544:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1572,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1563,
															"src": "34890:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1573,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 143,
														"src": "34890:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34890:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1618,
												"nodeType": "IfStatement",
												"src": "34886:526:0",
												"trueBody": {
													"id": 1617,
													"nodeType": "Block",
													"src": "34907:505:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1599,
																		"nodeType": "Block",
																		"src": "35025:188:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1592,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1588,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1586,
																						"src": "35048:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1589,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 492,
																								"src": "35060:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$492_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1590,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 473,
																							"src": "35060:34:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1591,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "35060:43:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "35048:55:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1598,
																				"nodeType": "IfStatement",
																				"src": "35044:154:0",
																				"trueBody": {
																					"id": 1597,
																					"nodeType": "Block",
																					"src": "35105:93:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1594,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "35135:42:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1593,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "35128:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1595,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "35128:50:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1596,
																							"nodeType": "ExpressionStatement",
																							"src": "35128:50:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1600,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1587,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1586,
																				"mutability": "mutable",
																				"name": "response",
																				"nodeType": "VariableDeclaration",
																				"scope": 1600,
																				"src": "35008:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1585,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "35008:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "35007:17:0"
																	},
																	"src": "34999:214:0"
																},
																{
																	"block": {
																		"id": 1608,
																		"nodeType": "Block",
																		"src": "35248:49:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1605,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1602,
																							"src": "35274:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1604,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "35267:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1606,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "35267:14:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1607,
																				"nodeType": "ExpressionStatement",
																				"src": "35267:14:0"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1609,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1603,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1602,
																				"mutability": "mutable",
																				"name": "reason",
																				"nodeType": "VariableDeclaration",
																				"scope": 1609,
																				"src": "35226:20:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1601,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "35226:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "35225:22:0"
																	},
																	"src": "35214:83:0"
																},
																{
																	"block": {
																		"id": 1614,
																		"nodeType": "Block",
																		"src": "35304:97:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1611,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "35330:54:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1610,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "35323:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1612,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "35323:62:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1613,
																				"nodeType": "ExpressionStatement",
																				"src": "35323:62:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1615,
																	"nodeType": "TryCatchClause",
																	"src": "35298:103:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1579,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1559,
																		"src": "34965:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1580,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1561,
																		"src": "34975:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1581,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1565,
																		"src": "34981:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1582,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1567,
																		"src": "34985:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1583,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1569,
																		"src": "34993:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1576,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1563,
																				"src": "34943:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1575,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 492,
																			"src": "34926:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$492_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "34926:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$492",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 473,
																	"src": "34926:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34926:72:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1616,
															"nodeType": "TryStatement",
															"src": "34922:479:0"
														}
													]
												}
											}
										]
									},
									"id": 1620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "34725:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "34752:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34752:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "34775:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "34796:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34796:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "34817:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34817:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "34842:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1568,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "34842:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34714:152:0"
									},
									"returnParameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34875:0:0"
									},
									"scope": 1714,
									"src": "34675:744:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1684,
										"nodeType": "Block",
										"src": "35652:588:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1637,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1626,
															"src": "35667:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1638,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 143,
														"src": "35667:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35667:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1683,
												"nodeType": "IfStatement",
												"src": "35663:570:0",
												"trueBody": {
													"id": 1682,
													"nodeType": "Block",
													"src": "35684:549:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1664,
																		"nodeType": "Block",
																		"src": "35841:193:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1657,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1653,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1651,
																						"src": "35864:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1654,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 492,
																								"src": "35876:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$492_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1655,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 491,
																							"src": "35876:39:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1656,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "35876:48:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "35864:60:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1663,
																				"nodeType": "IfStatement",
																				"src": "35860:159:0",
																				"trueBody": {
																					"id": 1662,
																					"nodeType": "Block",
																					"src": "35926:93:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1659,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "35956:42:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1658,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "35949:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1660,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "35949:50:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1661,
																							"nodeType": "ExpressionStatement",
																							"src": "35949:50:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1665,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1652,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1651,
																				"mutability": "mutable",
																				"name": "response",
																				"nodeType": "VariableDeclaration",
																				"scope": 1665,
																				"src": "35810:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1650,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "35810:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "35791:49:0"
																	},
																	"src": "35783:251:0"
																},
																{
																	"block": {
																		"id": 1673,
																		"nodeType": "Block",
																		"src": "36069:49:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1670,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1667,
																							"src": "36095:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1669,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "36088:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1671,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "36088:14:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1672,
																				"nodeType": "ExpressionStatement",
																				"src": "36088:14:0"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1674,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1668,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1667,
																				"mutability": "mutable",
																				"name": "reason",
																				"nodeType": "VariableDeclaration",
																				"scope": 1674,
																				"src": "36047:20:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1666,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "36047:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "36046:22:0"
																	},
																	"src": "36035:83:0"
																},
																{
																	"block": {
																		"id": 1679,
																		"nodeType": "Block",
																		"src": "36125:97:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1676,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "36151:54:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1675,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "36144:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1677,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "36144:62:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1678,
																				"nodeType": "ExpressionStatement",
																				"src": "36144:62:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1680,
																	"nodeType": "TryCatchClause",
																	"src": "36119:103:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1644,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1622,
																		"src": "35747:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1645,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1624,
																		"src": "35757:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1646,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1629,
																		"src": "35763:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1647,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1632,
																		"src": "35768:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1648,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1634,
																		"src": "35777:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1641,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1626,
																				"src": "35720:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1640,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 492,
																			"src": "35703:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$492_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1642,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "35703:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$492",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 491,
																	"src": "35703:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35703:79:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1681,
															"nodeType": "TryStatement",
															"src": "35699:523:0"
														}
													]
												}
											}
										]
									},
									"id": 1685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "35482:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35482:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "35509:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "35532:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35532:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "35553:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1627,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "35553:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1628,
													"nodeType": "ArrayTypeName",
													"src": "35553:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "35584:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1630,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "35584:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1631,
													"nodeType": "ArrayTypeName",
													"src": "35584:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "35619:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1633,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "35619:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35471:172:0"
									},
									"returnParameters": {
										"id": 1636,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35652:0:0"
									},
									"scope": 1714,
									"src": "35427:813:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1712,
										"nodeType": "Block",
										"src": "36332:114:0",
										"statements": [
											{
												"assignments": [
													1697
												],
												"declarations": [
													{
														"constant": false,
														"id": 1697,
														"mutability": "mutable",
														"name": "array",
														"nodeType": "VariableDeclaration",
														"scope": 1712,
														"src": "36343:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1695,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "36343:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1696,
															"nodeType": "ArrayTypeName",
															"src": "36343:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1703,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1701,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "36382:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1700,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "36368:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1698,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "36372:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1699,
															"nodeType": "ArrayTypeName",
															"src": "36372:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1702,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36368:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "36343:41:0"
											},
											{
												"expression": {
													"id": 1708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1704,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1697,
															"src": "36395:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1706,
														"indexExpression": {
															"hexValue": "30",
															"id": 1705,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "36401:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "36395:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1707,
														"name": "element",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1687,
														"src": "36406:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "36395:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1709,
												"nodeType": "ExpressionStatement",
												"src": "36395:18:0"
											},
											{
												"expression": {
													"id": 1710,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1697,
													"src": "36433:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1692,
												"id": 1711,
												"nodeType": "Return",
												"src": "36426:12:0"
											}
										]
									},
									"id": 1713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArray",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1687,
												"mutability": "mutable",
												"name": "element",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "36275:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36275:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36274:17:0"
									},
									"returnParameters": {
										"id": 1692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "36314:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1689,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "36314:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1690,
													"nodeType": "ArrayTypeName",
													"src": "36314:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36313:18:0"
									},
									"scope": 1714,
									"src": "36248:198:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1867,
							"src": "21284:15165:0"
						},
						{
							"id": 1715,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36621:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1717,
										"name": "ERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1714,
										"src": "37038:7:0"
									},
									"id": 1718,
									"nodeType": "InheritanceSpecifier",
									"src": "37038:7:0"
								}
							],
							"contractDependencies": [
								21,
								431,
								453,
								612,
								625,
								1714
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1716,
								"nodeType": "StructuredDocumentation",
								"src": "36650:351:0",
								"text": " @dev Extension of ERC1155 that adds tracking of total supply per id.\n Useful for scenarios where Fungible and Non-fungible tokens have to be\n clearly identified. Note: While a totalSupply of 1 might mean the\n corresponding is an NFT, there is no guarantees that no other token with the\n same id are not going to be minted."
							},
							"fullyImplemented": false,
							"id": 1845,
							"linearizedBaseContracts": [
								1845,
								1714,
								625,
								612,
								453,
								431,
								21
							],
							"name": "ERC1155Supply",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1722,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 1845,
									"src": "37053:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1721,
										"keyType": {
											"id": 1719,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "37061:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "37053:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 1720,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "37072:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1734,
										"nodeType": "Block",
										"src": "37255:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1730,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1722,
														"src": "37273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1732,
													"indexExpression": {
														"id": 1731,
														"name": "id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1725,
														"src": "37286:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "37273:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1729,
												"id": 1733,
												"nodeType": "Return",
												"src": "37266:23:0"
											}
										]
									},
									"documentation": {
										"id": 1723,
										"nodeType": "StructuredDocumentation",
										"src": "37110:68:0",
										"text": " @dev Total amount of tokens in with a given id."
									},
									"functionSelector": "bd85b039",
									"id": 1735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1725,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "37205:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37205:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37204:12:0"
									},
									"returnParameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "37246:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37246:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37245:9:0"
									},
									"scope": 1845,
									"src": "37184:113:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1750,
										"nodeType": "Block",
										"src": "37458:59:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1745,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1738,
																"src": "37502:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1743,
																"name": "ERC1155Supply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1845,
																"src": "37476:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC1155Supply_$1845_$",
																	"typeString": "type(contract ERC1155Supply)"
																}
															},
															"id": 1744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "totalSupply",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1735,
															"src": "37476:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 1746,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37476:29:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1747,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "37508:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "37476:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1742,
												"id": 1749,
												"nodeType": "Return",
												"src": "37469:40:0"
											}
										]
									},
									"documentation": {
										"id": 1736,
										"nodeType": "StructuredDocumentation",
										"src": "37305:84:0",
										"text": " @dev Indicates whether any token exist with a given id, or not."
									},
									"functionSelector": "4f558e79",
									"id": 1751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "exists",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "37411:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37411:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37410:12:0"
									},
									"returnParameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "37452:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1740,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "37452:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37451:6:0"
									},
									"scope": 1845,
									"src": "37395:122:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1557
									],
									"body": {
										"id": 1843,
										"nodeType": "Block",
										"src": "37820:427:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1773,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1754,
															"src": "37858:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1774,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1756,
															"src": "37868:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1775,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1758,
															"src": "37874:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1776,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1761,
															"src": "37878:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1777,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1764,
															"src": "37883:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1778,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1766,
															"src": "37892:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1770,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "37831:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC1155Supply_$1845_$",
																"typeString": "type(contract super ERC1155Supply)"
															}
														},
														"id": 1772,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_beforeTokenTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1557,
														"src": "37831:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37831:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1780,
												"nodeType": "ExpressionStatement",
												"src": "37831:66:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1781,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1756,
														"src": "37914:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1784,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "37930:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1783,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "37922:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1782,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "37922:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1785,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37922:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "37914:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1811,
												"nodeType": "IfStatement",
												"src": "37910:160:0",
												"trueBody": {
													"id": 1810,
													"nodeType": "Block",
													"src": "37934:136:0",
													"statements": [
														{
															"body": {
																"id": 1808,
																"nodeType": "Block",
																"src": "37990:69:0",
																"statements": [
																	{
																		"expression": {
																			"id": 1806,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1798,
																					"name": "_totalSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1722,
																					"src": "38009:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																						"typeString": "mapping(uint256 => uint256)"
																					}
																				},
																				"id": 1802,
																				"indexExpression": {
																					"baseExpression": {
																						"id": 1799,
																						"name": "ids",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1761,
																						"src": "38022:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																							"typeString": "uint256[] memory"
																						}
																					},
																					"id": 1801,
																					"indexExpression": {
																						"id": 1800,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1788,
																						"src": "38026:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "38022:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "38009:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 1803,
																					"name": "amounts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1764,
																					"src": "38033:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 1805,
																				"indexExpression": {
																					"id": 1804,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1788,
																					"src": "38041:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "38033:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "38009:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1807,
																		"nodeType": "ExpressionStatement",
																		"src": "38009:34:0"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1794,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1791,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1788,
																	"src": "37969:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 1792,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1761,
																		"src": "37973:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "37973:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "37969:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1809,
															"initializationExpression": {
																"assignments": [
																	1788
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1788,
																		"mutability": "mutable",
																		"name": "i",
																		"nodeType": "VariableDeclaration",
																		"scope": 1809,
																		"src": "37954:9:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1787,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "37954:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1790,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1789,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "37966:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "37954:13:0"
															},
															"loopExpression": {
																"expression": {
																	"id": 1796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": true,
																	"src": "37985:3:0",
																	"subExpression": {
																		"id": 1795,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1788,
																		"src": "37987:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1797,
																"nodeType": "ExpressionStatement",
																"src": "37985:3:0"
															},
															"nodeType": "ForStatement",
															"src": "37949:110:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1812,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1758,
														"src": "38086:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1815,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "38100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1814,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "38092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1813,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "38092:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1816,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "38092:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "38086:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1842,
												"nodeType": "IfStatement",
												"src": "38082:158:0",
												"trueBody": {
													"id": 1841,
													"nodeType": "Block",
													"src": "38104:136:0",
													"statements": [
														{
															"body": {
																"id": 1839,
																"nodeType": "Block",
																"src": "38160:69:0",
																"statements": [
																	{
																		"expression": {
																			"id": 1837,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1829,
																					"name": "_totalSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1722,
																					"src": "38179:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																						"typeString": "mapping(uint256 => uint256)"
																					}
																				},
																				"id": 1833,
																				"indexExpression": {
																					"baseExpression": {
																						"id": 1830,
																						"name": "ids",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1761,
																						"src": "38192:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																							"typeString": "uint256[] memory"
																						}
																					},
																					"id": 1832,
																					"indexExpression": {
																						"id": 1831,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1819,
																						"src": "38196:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "38192:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "38179:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 1834,
																					"name": "amounts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1764,
																					"src": "38203:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 1836,
																				"indexExpression": {
																					"id": 1835,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1819,
																					"src": "38211:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "38203:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "38179:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1838,
																		"nodeType": "ExpressionStatement",
																		"src": "38179:34:0"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1825,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1822,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1819,
																	"src": "38139:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 1823,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1761,
																		"src": "38143:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1824,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "38143:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "38139:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1840,
															"initializationExpression": {
																"assignments": [
																	1819
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1819,
																		"mutability": "mutable",
																		"name": "i",
																		"nodeType": "VariableDeclaration",
																		"scope": 1840,
																		"src": "38124:9:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1818,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "38124:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1821,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1820,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "38136:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "38124:13:0"
															},
															"loopExpression": {
																"expression": {
																	"id": 1827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": true,
																	"src": "38155:3:0",
																	"subExpression": {
																		"id": 1826,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1819,
																		"src": "38157:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1828,
																"nodeType": "ExpressionStatement",
																"src": "38155:3:0"
															},
															"nodeType": "ForStatement",
															"src": "38119:110:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1752,
										"nodeType": "StructuredDocumentation",
										"src": "37525:61:0",
										"text": " @dev See {ERC1155-_beforeTokenTransfer}."
									},
									"id": 1844,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1768,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "37811:8:0"
									},
									"parameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "37632:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37632:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "37659:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37659:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1758,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "37682:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37682:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "37703:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1759,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "37703:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1760,
													"nodeType": "ArrayTypeName",
													"src": "37703:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "37734:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1762,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "37734:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1763,
													"nodeType": "ArrayTypeName",
													"src": "37734:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "37769:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1765,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "37769:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37621:172:0"
									},
									"returnParameters": {
										"id": 1769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37820:0:0"
									},
									"scope": 1845,
									"src": "37592:655:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1867,
							"src": "37003:1247:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1846,
										"name": "ERC1155Supply",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1845,
										"src": "38284:13:0"
									},
									"id": 1847,
									"nodeType": "InheritanceSpecifier",
									"src": "38284:13:0"
								}
							],
							"contractDependencies": [
								21,
								431,
								453,
								612,
								625,
								1714,
								1845
							],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 1866,
							"linearizedBaseContracts": [
								1866,
								1845,
								1714,
								625,
								612,
								453,
								431,
								21
							],
							"name": "ERC1155M",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1851,
									"mutability": "mutable",
									"name": "_uris",
									"nodeType": "VariableDeclaration",
									"scope": 1866,
									"src": "38307:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 1850,
										"keyType": {
											"id": 1848,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "38316:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "38307:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueType": {
											"id": 1849,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "38327:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1864,
										"nodeType": "Block",
										"src": "38422:37:0",
										"statements": [
											{
												"expression": {
													"id": 1862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1858,
															"name": "_uris",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1851,
															"src": "38433:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 1860,
														"indexExpression": {
															"id": 1859,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1855,
															"src": "38439:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "38433:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1861,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1853,
														"src": "38445:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "38433:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1863,
												"nodeType": "ExpressionStatement",
												"src": "38433:18:0"
											}
										]
									},
									"id": 1865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "newuri",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "38374:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1852,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "38374:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "38396:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1854,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "38396:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38373:31:0"
									},
									"returnParameters": {
										"id": 1857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38422:0:0"
									},
									"scope": 1866,
									"src": "38357:102:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1867,
							"src": "38254:208:0"
						}
					],
					"src": "35:38427:0"
				},
				"id": 0
			}
		}
	}
}